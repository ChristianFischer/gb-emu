/*
 * Copyright (C) 2022-2023 by Christian Fischer
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

mod opcodes_arithmetic;
mod opcodes_control;
mod opcodes_jump;
mod opcodes_ld;

use crate::opcode::OpCode;

use crate::opcodes::opcodes_arithmetic::*;
use crate::opcodes::opcodes_arithmetic::inc::*;
use crate::opcodes::opcodes_arithmetic::dec::*;
use crate::opcodes::opcodes_arithmetic::add::*;
use crate::opcodes::opcodes_arithmetic::sub::*;
use crate::opcodes::opcodes_arithmetic::and::*;
use crate::opcodes::opcodes_arithmetic::xor::*;
use crate::opcodes::opcodes_arithmetic::or::*;
use crate::opcodes::opcodes_arithmetic::cp::*;
use crate::opcodes::opcodes_arithmetic::rl::*;
use crate::opcodes::opcodes_arithmetic::rr::*;
use crate::opcodes::opcodes_arithmetic::swap::*;
use crate::opcodes::opcodes_arithmetic::set_bit::*;
use crate::opcodes::opcodes_arithmetic::res_bit::*;
use crate::opcodes::opcodes_arithmetic::chk_bit::*;
use crate::opcodes::opcodes_control::*;
use crate::opcodes::opcodes_jump::*;
use crate::opcodes::opcodes_ld::*;


/// Represents an invalid opcode.
pub static OPCODE_INVALID: OpCode = OpCode {
    name: "[INVALID]",
    bytes: 1,
    cycles_ahead: 0,
    cycles: 0,
    proc: |_ctx, _gb| {
        panic!();
    }
};

/// Represents an opcode which has no assigned functionality.
/// It's not expected to find one of those in any ROM binary.
pub static OPCODE_UNASSIGNED: OpCode = OpCode {
    name: "[NOT ASSIGNED]",
    bytes: 1,
    cycles_ahead: 0,
    cycles: 0,
    proc: |_ctx, _gb| {
        panic!();
    }
};


/// The table of all supported opcodes.
/// The array's index is the opcodes numerical value.
/// The table of all supported opcodes.
/// The array's index is the opcodes numerical value.
pub static OPCODE_TABLE: [OpCode; 256] = [
    /* 0x00*/ OpCode { name: "NOP",              bytes: 1, cycles_ahead:  0, cycles:  4, proc: nop                 },
    /* 0x01*/ OpCode { name: "LD BC, ${x16}",    bytes: 3, cycles_ahead:  0, cycles: 12, proc: ld_bc_u16           },
    /* 0x02*/ OpCode { name: "LD (BC), A",       bytes: 1, cycles_ahead:  0, cycles:  8, proc: ld_bcptr_a          },
    /* 0x03*/ OpCode { name: "INC BC",           bytes: 1, cycles_ahead:  0, cycles:  8, proc: inc_bc              },
    /* 0x04*/ OpCode { name: "INC B",            bytes: 1, cycles_ahead:  0, cycles:  4, proc: inc_b               },
    /* 0x05*/ OpCode { name: "DEC B",            bytes: 1, cycles_ahead:  0, cycles:  4, proc: dec_b               },
    /* 0x06*/ OpCode { name: "LD B, ${x8}",      bytes: 2, cycles_ahead:  0, cycles:  8, proc: ld_b_u8             },
    /* 0x07*/ OpCode { name: "RLCA",             bytes: 1, cycles_ahead:  0, cycles:  4, proc: rlca                },
    /* 0x08*/ OpCode { name: "LD (${x16}), SP",  bytes: 3, cycles_ahead:  0, cycles: 20, proc: ld_u16ptr_sp        },
    /* 0x09*/ OpCode { name: "ADD HL, BC",       bytes: 1, cycles_ahead:  0, cycles:  8, proc: add_hl_bc           },
    /* 0x0A*/ OpCode { name: "LD A, (BC)",       bytes: 1, cycles_ahead:  0, cycles:  8, proc: ld_a_bcptr          },
    /* 0x0B*/ OpCode { name: "DEC BC",           bytes: 1, cycles_ahead:  0, cycles:  8, proc: dec_bc              },
    /* 0x0C*/ OpCode { name: "INC C",            bytes: 1, cycles_ahead:  0, cycles:  4, proc: inc_c               },
    /* 0x0D*/ OpCode { name: "DEC C",            bytes: 1, cycles_ahead:  0, cycles:  4, proc: dec_c               },
    /* 0x0E*/ OpCode { name: "LD C, ${x8}",      bytes: 2, cycles_ahead:  0, cycles:  8, proc: ld_c_u8             },
    /* 0x0F*/ OpCode { name: "RRCA",             bytes: 1, cycles_ahead:  0, cycles:  4, proc: rrca                },

    /* 0x10*/ OpCode { name: "STOP",             bytes: 1, cycles_ahead:  0, cycles:  4, proc: stop                },
    /* 0x11*/ OpCode { name: "LD DE, ${x16}",    bytes: 3, cycles_ahead:  0, cycles: 12, proc: ld_de_u16           },
    /* 0x12*/ OpCode { name: "LD (DE), A",       bytes: 1, cycles_ahead:  0, cycles:  8, proc: ld_deptr_a          },
    /* 0x13*/ OpCode { name: "INC DE",           bytes: 1, cycles_ahead:  0, cycles:  8, proc: inc_de              },
    /* 0x14*/ OpCode { name: "INC D",            bytes: 1, cycles_ahead:  0, cycles:  4, proc: inc_d               },
    /* 0x15*/ OpCode { name: "DEC D",            bytes: 1, cycles_ahead:  0, cycles:  4, proc: dec_d               },
    /* 0x16*/ OpCode { name: "LD D, ${x8}",      bytes: 2, cycles_ahead:  0, cycles:  8, proc: ld_d_u8             },
    /* 0x17*/ OpCode { name: "RLA",              bytes: 1, cycles_ahead:  0, cycles:  4, proc: rla                 },
    /* 0x18*/ OpCode { name: "JR {i8}",          bytes: 2, cycles_ahead:  0, cycles: 12, proc: jr_i8               },
    /* 0x19*/ OpCode { name: "ADD HL, DE",       bytes: 1, cycles_ahead:  0, cycles:  8, proc: add_hl_de           },
    /* 0x1A*/ OpCode { name: "LD A, (DE)",       bytes: 1, cycles_ahead:  0, cycles:  8, proc: ld_a_deptr          },
    /* 0x1B*/ OpCode { name: "DEC DE",           bytes: 1, cycles_ahead:  0, cycles:  8, proc: dec_de              },
    /* 0x1C*/ OpCode { name: "INC E",            bytes: 1, cycles_ahead:  0, cycles:  4, proc: inc_e               },
    /* 0x1D*/ OpCode { name: "DEC E",            bytes: 1, cycles_ahead:  0, cycles:  4, proc: dec_e               },
    /* 0x1E*/ OpCode { name: "LD E, ${x8}",      bytes: 2, cycles_ahead:  0, cycles:  8, proc: ld_e_u8             },
    /* 0x1F*/ OpCode { name: "RRA",              bytes: 1, cycles_ahead:  0, cycles:  4, proc: rra                 },

    /* 0x20*/ OpCode { name: "JR NZ, {i8}",      bytes: 2, cycles_ahead:  0, cycles:  8, proc: jr_nz_i8            },
    /* 0x21*/ OpCode { name: "LD HL, ${x16}",    bytes: 3, cycles_ahead:  0, cycles: 12, proc: ld_hl_u16           },
    /* 0x22*/ OpCode { name: "LD (HL+), A",      bytes: 1, cycles_ahead:  0, cycles:  8, proc: ld_hlptri_a         },
    /* 0x23*/ OpCode { name: "INC HL",           bytes: 1, cycles_ahead:  0, cycles:  8, proc: inc_hl              },
    /* 0x24*/ OpCode { name: "INC H",            bytes: 1, cycles_ahead:  0, cycles:  4, proc: inc_h               },
    /* 0x25*/ OpCode { name: "DEC H",            bytes: 1, cycles_ahead:  0, cycles:  4, proc: dec_h               },
    /* 0x26*/ OpCode { name: "LD H, ${x8}",      bytes: 2, cycles_ahead:  0, cycles:  8, proc: ld_h_u8             },
    /* 0x27*/ OpCode { name: "DAA",              bytes: 1, cycles_ahead:  0, cycles:  4, proc: daa                 },
    /* 0x28*/ OpCode { name: "JR Z, {i8}",       bytes: 2, cycles_ahead:  0, cycles:  8, proc: jr_z_i8             },
    /* 0x29*/ OpCode { name: "ADD HL, HL",       bytes: 1, cycles_ahead:  0, cycles:  8, proc: add_hl_hl           },
    /* 0x2A*/ OpCode { name: "LD A, (HL+)",      bytes: 1, cycles_ahead:  0, cycles:  8, proc: ld_a_hlptri         },
    /* 0x2B*/ OpCode { name: "DEC HL",           bytes: 1, cycles_ahead:  0, cycles:  8, proc: dec_hl              },
    /* 0x2C*/ OpCode { name: "INC L",            bytes: 1, cycles_ahead:  0, cycles:  4, proc: inc_l               },
    /* 0x2D*/ OpCode { name: "DEC L",            bytes: 1, cycles_ahead:  0, cycles:  4, proc: dec_l               },
    /* 0x2E*/ OpCode { name: "LD L, ${x8}",      bytes: 2, cycles_ahead:  0, cycles:  8, proc: ld_l_u8             },
    /* 0x2F*/ OpCode { name: "CPL",              bytes: 1, cycles_ahead:  0, cycles:  4, proc: cpl_a               },

    /* 0x30*/ OpCode { name: "JR NC, {i8}",      bytes: 2, cycles_ahead:  0, cycles:  8, proc: jr_nc_i8            },
    /* 0x31*/ OpCode { name: "LD SP, ${x16}",    bytes: 3, cycles_ahead:  0, cycles: 12, proc: ld_sp_u16           },
    /* 0x32*/ OpCode { name: "LD (HL-), A",      bytes: 1, cycles_ahead:  0, cycles:  8, proc: ld_hlptrd_a         },
    /* 0x33*/ OpCode { name: "INC SP",           bytes: 1, cycles_ahead:  0, cycles:  8, proc: inc_sp              },
    /* 0x34*/ OpCode { name: "INC (HL)",         bytes: 1, cycles_ahead:  0, cycles: 12, proc: inc_hlptr           },
    /* 0x35*/ OpCode { name: "DEC (HL)",         bytes: 1, cycles_ahead:  0, cycles: 12, proc: dec_hlptr           },
    /* 0x36*/ OpCode { name: "LD (HL), ${x8}",   bytes: 2, cycles_ahead:  4, cycles: 12, proc: ld_hlptr_u8         },
    /* 0x37*/ OpCode { name: "SCF",              bytes: 1, cycles_ahead:  0, cycles:  4, proc: scf                 },
    /* 0x38*/ OpCode { name: "JR C, {i8}",       bytes: 2, cycles_ahead:  0, cycles:  8, proc: jr_c_i8             },
    /* 0x39*/ OpCode { name: "ADD HL, SP",       bytes: 1, cycles_ahead:  0, cycles:  8, proc: add_hl_sp           },
    /* 0x3A*/ OpCode { name: "LD A, (HL-)",      bytes: 1, cycles_ahead:  0, cycles:  8, proc: ld_a_hlptrd         },
    /* 0x3B*/ OpCode { name: "DEC SP",           bytes: 1, cycles_ahead:  0, cycles:  8, proc: dec_sp              },
    /* 0x3C*/ OpCode { name: "INC A",            bytes: 1, cycles_ahead:  0, cycles:  4, proc: inc_a               },
    /* 0x3D*/ OpCode { name: "DEC A",            bytes: 1, cycles_ahead:  0, cycles:  4, proc: dec_a               },
    /* 0x3E*/ OpCode { name: "LD A, ${x8}",      bytes: 2, cycles_ahead:  0, cycles:  8, proc: ld_a_u8             },
    /* 0x3F*/ OpCode { name: "CCF",              bytes: 1, cycles_ahead:  0, cycles:  4, proc: ccf                 },

    /* 0x40*/ OpCode { name: "LD B, B",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_b_b              },
    /* 0x41*/ OpCode { name: "LD B, C",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_b_c              },
    /* 0x42*/ OpCode { name: "LD B, D",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_b_d              },
    /* 0x43*/ OpCode { name: "LD B, E",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_b_e              },
    /* 0x44*/ OpCode { name: "LD B, H",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_b_h              },
    /* 0x45*/ OpCode { name: "LD B, L",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_b_l              },
    /* 0x46*/ OpCode { name: "LD B, (HL)",       bytes: 1, cycles_ahead:  0, cycles:  8, proc: ld_b_hlptr          },
    /* 0x47*/ OpCode { name: "LD B, A",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_b_a              },
    /* 0x48*/ OpCode { name: "LD C, B",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_c_b              },
    /* 0x49*/ OpCode { name: "LD C, C",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_c_c              },
    /* 0x4A*/ OpCode { name: "LD C, D",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_c_d              },
    /* 0x4B*/ OpCode { name: "LD C, E",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_c_e              },
    /* 0x4C*/ OpCode { name: "LD C, H",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_c_h              },
    /* 0x4D*/ OpCode { name: "LD C, L",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_c_l              },
    /* 0x4E*/ OpCode { name: "LD C, (HL)",       bytes: 1, cycles_ahead:  0, cycles:  8, proc: ld_c_hlptr          },
    /* 0x4F*/ OpCode { name: "LD C, A",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_c_a              },

    /* 0x50*/ OpCode { name: "LD D, B",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_d_b              },
    /* 0x51*/ OpCode { name: "LD D, C",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_d_c              },
    /* 0x52*/ OpCode { name: "LD D, D",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_d_d              },
    /* 0x53*/ OpCode { name: "LD D, E",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_d_e              },
    /* 0x54*/ OpCode { name: "LD D, H",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_d_h              },
    /* 0x55*/ OpCode { name: "LD D, L",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_d_l              },
    /* 0x56*/ OpCode { name: "LD D, (HL)",       bytes: 1, cycles_ahead:  0, cycles:  8, proc: ld_d_hlptr          },
    /* 0x57*/ OpCode { name: "LD D, A",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_d_a              },
    /* 0x58*/ OpCode { name: "LD E, B",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_e_b              },
    /* 0x59*/ OpCode { name: "LD E, C",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_e_c              },
    /* 0x5A*/ OpCode { name: "LD E, D",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_e_d              },
    /* 0x5B*/ OpCode { name: "LD E, E",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_e_e              },
    /* 0x5C*/ OpCode { name: "LD E, H",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_e_h              },
    /* 0x5D*/ OpCode { name: "LD E, L",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_e_l              },
    /* 0x5E*/ OpCode { name: "LD E, (HL)",       bytes: 1, cycles_ahead:  0, cycles:  8, proc: ld_e_hlptr          },
    /* 0x5F*/ OpCode { name: "LD E, A",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_e_a              },

    /* 0x60*/ OpCode { name: "LD H, B",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_h_b              },
    /* 0x61*/ OpCode { name: "LD H, C",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_h_c              },
    /* 0x62*/ OpCode { name: "LD H, D",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_h_d              },
    /* 0x63*/ OpCode { name: "LD H, E",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_h_e              },
    /* 0x64*/ OpCode { name: "LD H, H",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_h_h              },
    /* 0x65*/ OpCode { name: "LD H, L",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_h_l              },
    /* 0x66*/ OpCode { name: "LD H, (HL)",       bytes: 1, cycles_ahead:  0, cycles:  8, proc: ld_h_hlptr          },
    /* 0x67*/ OpCode { name: "LD H, A",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_h_a              },
    /* 0x68*/ OpCode { name: "LD L, B",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_l_b              },
    /* 0x69*/ OpCode { name: "LD L, C",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_l_c              },
    /* 0x6A*/ OpCode { name: "LD L, D",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_l_d              },
    /* 0x6B*/ OpCode { name: "LD L, E",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_l_e              },
    /* 0x6C*/ OpCode { name: "LD L, H",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_l_h              },
    /* 0x6D*/ OpCode { name: "LD L, L",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_l_l              },
    /* 0x6E*/ OpCode { name: "LD L, (HL)",       bytes: 1, cycles_ahead:  0, cycles:  8, proc: ld_l_hlptr          },
    /* 0x6F*/ OpCode { name: "LD L, A",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_l_a              },

    /* 0x70*/ OpCode { name: "LD (HL), B",       bytes: 1, cycles_ahead:  0, cycles:  8, proc: ld_hlptr_b          },
    /* 0x71*/ OpCode { name: "LD (HL), C",       bytes: 1, cycles_ahead:  0, cycles:  8, proc: ld_hlptr_c          },
    /* 0x72*/ OpCode { name: "LD (HL), D",       bytes: 1, cycles_ahead:  0, cycles:  8, proc: ld_hlptr_d          },
    /* 0x73*/ OpCode { name: "LD (HL), E",       bytes: 1, cycles_ahead:  0, cycles:  8, proc: ld_hlptr_e          },
    /* 0x74*/ OpCode { name: "LD (HL), H",       bytes: 1, cycles_ahead:  0, cycles:  8, proc: ld_hlptr_h          },
    /* 0x75*/ OpCode { name: "LD (HL), L",       bytes: 1, cycles_ahead:  0, cycles:  8, proc: ld_hlptr_l          },
    /* 0x76*/ OpCode { name: "HALT",             bytes: 1, cycles_ahead:  0, cycles:  4, proc: halt                },
    /* 0x77*/ OpCode { name: "LD (HL), A",       bytes: 1, cycles_ahead:  0, cycles:  8, proc: ld_hlptr_a          },
    /* 0x78*/ OpCode { name: "LD A, B",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_a_b              },
    /* 0x79*/ OpCode { name: "LD A, C",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_a_c              },
    /* 0x7A*/ OpCode { name: "LD A, D",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_a_d              },
    /* 0x7B*/ OpCode { name: "LD A, E",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_a_e              },
    /* 0x7C*/ OpCode { name: "LD A, H",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_a_h              },
    /* 0x7D*/ OpCode { name: "LD A, L",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_a_l              },
    /* 0x7E*/ OpCode { name: "LD A, (HL)",       bytes: 1, cycles_ahead:  0, cycles:  8, proc: ld_a_hlptr          },
    /* 0x7F*/ OpCode { name: "LD A, A",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: ld_a_a              },

    /* 0x80*/ OpCode { name: "ADD A, B",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: add_a_b             },
    /* 0x81*/ OpCode { name: "ADD A, C",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: add_a_c             },
    /* 0x82*/ OpCode { name: "ADD A, D",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: add_a_d             },
    /* 0x83*/ OpCode { name: "ADD A, E",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: add_a_e             },
    /* 0x84*/ OpCode { name: "ADD A, H",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: add_a_h             },
    /* 0x85*/ OpCode { name: "ADD A, L",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: add_a_l             },
    /* 0x86*/ OpCode { name: "ADD A, (HL)",      bytes: 1, cycles_ahead:  0, cycles:  8, proc: add_a_hlptr         },
    /* 0x87*/ OpCode { name: "ADD A, A",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: add_a_a             },
    /* 0x88*/ OpCode { name: "ADC A, B",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: adc_a_b             },
    /* 0x89*/ OpCode { name: "ADC A, C",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: adc_a_c             },
    /* 0x8A*/ OpCode { name: "ADC A, D",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: adc_a_d             },
    /* 0x8B*/ OpCode { name: "ADC A, E",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: adc_a_e             },
    /* 0x8C*/ OpCode { name: "ADC A, H",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: adc_a_h             },
    /* 0x8D*/ OpCode { name: "ADC A, L",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: adc_a_l             },
    /* 0x8E*/ OpCode { name: "ADC A, (HL)",      bytes: 1, cycles_ahead:  0, cycles:  8, proc: adc_a_hlptr         },
    /* 0x8F*/ OpCode { name: "ADC A, A",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: adc_a_a             },

    /* 0x90*/ OpCode { name: "SUB A, B",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: sub_a_b             },
    /* 0x91*/ OpCode { name: "SUB A, C",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: sub_a_c             },
    /* 0x92*/ OpCode { name: "SUB A, D",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: sub_a_d             },
    /* 0x93*/ OpCode { name: "SUB A, E",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: sub_a_e             },
    /* 0x94*/ OpCode { name: "SUB A, H",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: sub_a_h             },
    /* 0x95*/ OpCode { name: "SUB A, L",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: sub_a_l             },
    /* 0x96*/ OpCode { name: "SUB A, (HL)",      bytes: 1, cycles_ahead:  0, cycles:  8, proc: sub_a_hlptr         },
    /* 0x97*/ OpCode { name: "SUB A, A",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: sub_a_a             },
    /* 0x98*/ OpCode { name: "SBC A, B",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: sbc_a_b             },
    /* 0x99*/ OpCode { name: "SBC A, C",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: sbc_a_c             },
    /* 0x9A*/ OpCode { name: "SBC A, D",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: sbc_a_d             },
    /* 0x9B*/ OpCode { name: "SBC A, E",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: sbc_a_e             },
    /* 0x9C*/ OpCode { name: "SBC A, H",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: sbc_a_h             },
    /* 0x9D*/ OpCode { name: "SBC A, L",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: sbc_a_l             },
    /* 0x9E*/ OpCode { name: "SBC A, (HL)",      bytes: 1, cycles_ahead:  0, cycles:  8, proc: sbc_a_hlptr         },
    /* 0x9F*/ OpCode { name: "SBC A, A",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: sbc_a_a             },

    /* 0xA0*/ OpCode { name: "AND A, B",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: and_a_b             },
    /* 0xA1*/ OpCode { name: "AND A, C",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: and_a_c             },
    /* 0xA2*/ OpCode { name: "AND A, D",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: and_a_d             },
    /* 0xA3*/ OpCode { name: "AND A, E",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: and_a_e             },
    /* 0xA4*/ OpCode { name: "AND A, H",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: and_a_h             },
    /* 0xA5*/ OpCode { name: "AND A, L",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: and_a_l             },
    /* 0xA6*/ OpCode { name: "AND A, (HL)",      bytes: 1, cycles_ahead:  0, cycles:  8, proc: and_a_hlptr         },
    /* 0xA7*/ OpCode { name: "AND A, A",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: and_a_a             },
    /* 0xA8*/ OpCode { name: "XOR A, B",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: xor_a_b             },
    /* 0xA9*/ OpCode { name: "XOR A, C",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: xor_a_c             },
    /* 0xAA*/ OpCode { name: "XOR A, D",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: xor_a_d             },
    /* 0xAB*/ OpCode { name: "XOR A, E",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: xor_a_e             },
    /* 0xAC*/ OpCode { name: "XOR A, H",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: xor_a_h             },
    /* 0xAD*/ OpCode { name: "XOR A, L",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: xor_a_l             },
    /* 0xAE*/ OpCode { name: "XOR A, (HL)",      bytes: 1, cycles_ahead:  0, cycles:  8, proc: xor_a_hlptr         },
    /* 0xAF*/ OpCode { name: "XOR A, A",         bytes: 1, cycles_ahead:  0, cycles:  4, proc: xor_a_a             },

    /* 0xB0*/ OpCode { name: "OR A, B",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: or_a_b              },
    /* 0xB1*/ OpCode { name: "OR A, C",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: or_a_c              },
    /* 0xB2*/ OpCode { name: "OR A, D",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: or_a_d              },
    /* 0xB3*/ OpCode { name: "OR A, E",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: or_a_e              },
    /* 0xB4*/ OpCode { name: "OR A, H",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: or_a_h              },
    /* 0xB5*/ OpCode { name: "OR A, L",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: or_a_l              },
    /* 0xB6*/ OpCode { name: "OR A, (HL)",       bytes: 1, cycles_ahead:  0, cycles:  8, proc: or_a_hlptr          },
    /* 0xB7*/ OpCode { name: "OR A, A",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: or_a_a              },
    /* 0xB8*/ OpCode { name: "CP A, B",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: cp_a_b              },
    /* 0xB9*/ OpCode { name: "CP A, C",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: cp_a_c              },
    /* 0xBA*/ OpCode { name: "CP A, D",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: cp_a_d              },
    /* 0xBB*/ OpCode { name: "CP A, E",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: cp_a_e              },
    /* 0xBC*/ OpCode { name: "CP A, H",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: cp_a_h              },
    /* 0xBD*/ OpCode { name: "CP A, L",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: cp_a_l              },
    /* 0xBE*/ OpCode { name: "CP A, (HL)",       bytes: 1, cycles_ahead:  0, cycles:  8, proc: cp_a_hlptr          },
    /* 0xBF*/ OpCode { name: "CP A, A",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: cp_a_a              },

    /* 0xC0*/ OpCode { name: "RET NZ",           bytes: 1, cycles_ahead:  0, cycles:  8, proc: ret_nz              },
    /* 0xC1*/ OpCode { name: "POP BC",           bytes: 1, cycles_ahead:  0, cycles: 12, proc: pop_bc              },
    /* 0xC2*/ OpCode { name: "JP NZ, 0x{x16}",   bytes: 3, cycles_ahead:  0, cycles: 12, proc: jp_nz_u16           },
    /* 0xC3*/ OpCode { name: "JP 0x{x16}",       bytes: 3, cycles_ahead:  0, cycles: 16, proc: jp_u16              },
    /* 0xC4*/ OpCode { name: "CALL NZ, ${x16}",  bytes: 3, cycles_ahead:  0, cycles: 12, proc: call_nz_u16         },
    /* 0xC5*/ OpCode { name: "PUSH BC",          bytes: 1, cycles_ahead:  0, cycles: 16, proc: push_bc             },
    /* 0xC6*/ OpCode { name: "ADD A, {u8}",      bytes: 2, cycles_ahead:  0, cycles:  8, proc: add_a_u8            },
    /* 0xC7*/ OpCode { name: "RST 00h",          bytes: 1, cycles_ahead:  0, cycles: 16, proc: rst_00h             },
    /* 0xC8*/ OpCode { name: "RET Z",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: ret_z               },
    /* 0xC9*/ OpCode { name: "RET",              bytes: 1, cycles_ahead:  0, cycles: 16, proc: ret                 },
    /* 0xCA*/ OpCode { name: "JP Z, 0x{x16}",    bytes: 3, cycles_ahead:  0, cycles: 12, proc: jp_z_u16            },
    /* 0xCB*/ OPCODE_INVALID, // prefix for extended opcode table
    /* 0xCC*/ OpCode { name: "CALL Z, ${x16}",   bytes: 3, cycles_ahead:  0, cycles: 12, proc: call_z_u16          },
    /* 0xCD*/ OpCode { name: "CALL ${x16}",      bytes: 3, cycles_ahead:  0, cycles: 24, proc: call_u16            },
    /* 0xCE*/ OpCode { name: "ADC A, {u8}",      bytes: 2, cycles_ahead:  0, cycles:  8, proc: adc_a_u8            },
    /* 0xCF*/ OpCode { name: "RST 08h",          bytes: 1, cycles_ahead:  0, cycles: 16, proc: rst_08h             },

    /* 0xD0*/ OpCode { name: "RET NC",           bytes: 1, cycles_ahead:  0, cycles:  8, proc: ret_nc              },
    /* 0xD1*/ OpCode { name: "POP DE",           bytes: 1, cycles_ahead:  0, cycles: 12, proc: pop_de              },
    /* 0xD2*/ OpCode { name: "JP NC, 0x{x16}",   bytes: 3, cycles_ahead:  0, cycles: 12, proc: jp_nc_u16           },
    /* 0xD3*/ OPCODE_UNASSIGNED,
    /* 0xD4*/ OpCode { name: "CALL NC, ${x16}",  bytes: 3, cycles_ahead:  0, cycles: 12, proc: call_nc_u16         },
    /* 0xD5*/ OpCode { name: "PUSH DE",          bytes: 1, cycles_ahead:  0, cycles: 16, proc: push_de             },
    /* 0xD6*/ OpCode { name: "SUB A, {u8}",      bytes: 2, cycles_ahead:  0, cycles:  8, proc: sub_a_u8            },
    /* 0xD7*/ OpCode { name: "RST 10h",          bytes: 1, cycles_ahead:  0, cycles: 16, proc: rst_10h             },
    /* 0xD8*/ OpCode { name: "RET C",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: ret_c               },
    /* 0xD9*/ OpCode { name: "RETI",             bytes: 1, cycles_ahead:  0, cycles: 16, proc: reti                },
    /* 0xDA*/ OpCode { name: "JP C, 0x{x16}",    bytes: 3, cycles_ahead:  0, cycles: 12, proc: jp_c_u16            },
    /* 0xDB*/ OPCODE_UNASSIGNED,
    /* 0xDC*/ OpCode { name: "CALL C, ${x16}",   bytes: 3, cycles_ahead:  0, cycles: 12, proc: call_c_u16          },
    /* 0xDD*/ OPCODE_UNASSIGNED,
    /* 0xDE*/ OpCode { name: "SBC A, {u8}",      bytes: 2, cycles_ahead:  0, cycles:  8, proc: sbc_a_u8            },
    /* 0xDF*/ OpCode { name: "RST 18h",          bytes: 1, cycles_ahead:  0, cycles: 16, proc: rst_18h             },

    /* 0xE0*/ OpCode { name: "LDH $ff{x8}, A",   bytes: 2, cycles_ahead:  4, cycles: 12, proc: ldh_u8_a            },
    /* 0xE1*/ OpCode { name: "POP HL",           bytes: 1, cycles_ahead:  0, cycles: 12, proc: pop_hl              },
    /* 0xE2*/ OpCode { name: "LDH (ff00+C), A",  bytes: 1, cycles_ahead:  0, cycles:  8, proc: ldh_cptr_a          },
    /* 0xE3*/ OPCODE_UNASSIGNED,
    /* 0xE4*/ OPCODE_UNASSIGNED,
    /* 0xE5*/ OpCode { name: "PUSH HL",          bytes: 1, cycles_ahead:  0, cycles: 16, proc: push_hl             },
    /* 0xE6*/ OpCode { name: "AND A, ${x8}",     bytes: 2, cycles_ahead:  0, cycles:  8, proc: and_a_u8            },
    /* 0xE7*/ OpCode { name: "RST 20h",          bytes: 1, cycles_ahead:  0, cycles: 16, proc: rst_20h             },
    /* 0xE8*/ OpCode { name: "ADD SP, {i8}",     bytes: 2, cycles_ahead:  0, cycles: 16, proc: add_sp_i8           },
    /* 0xE9*/ OpCode { name: "JP (HL)",          bytes: 1, cycles_ahead:  0, cycles:  4, proc: jp_hl               },
    /* 0xEA*/ OpCode { name: "LD (${x16}), A",   bytes: 3, cycles_ahead:  8, cycles: 16, proc: ld_u16ptr_a         },
    /* 0xEB*/ OPCODE_UNASSIGNED,
    /* 0xEC*/ OPCODE_UNASSIGNED,
    /* 0xED*/ OPCODE_UNASSIGNED,
    /* 0xEE*/ OpCode { name: "XOR A, ${x8}",     bytes: 2, cycles_ahead:  0, cycles:  8, proc: xor_a_u8            },
    /* 0xEF*/ OpCode { name: "RST 28h",          bytes: 1, cycles_ahead:  0, cycles: 16, proc: rst_28h             },

    /* 0xF0*/ OpCode { name: "LDH A, $ff{x8}",   bytes: 2, cycles_ahead:  4, cycles: 12, proc: ldh_a_u8            },
    /* 0xF1*/ OpCode { name: "POP AF",           bytes: 1, cycles_ahead:  0, cycles: 12, proc: pop_af              },
    /* 0xF2*/ OpCode { name: "LDH A, (ff00+C)",  bytes: 1, cycles_ahead:  0, cycles:  8, proc: ldh_a_cptr          },
    /* 0xF3*/ OpCode { name: "DI",               bytes: 1, cycles_ahead:  0, cycles:  4, proc: disable_interrupts  },
    /* 0xF4*/ OPCODE_UNASSIGNED,
    /* 0xF5*/ OpCode { name: "PUSH AF",          bytes: 1, cycles_ahead:  0, cycles: 16, proc: push_af             },
    /* 0xF6*/ OpCode { name: "OR A, ${x8}",      bytes: 2, cycles_ahead:  0, cycles:  8, proc: or_a_u8             },
    /* 0xF7*/ OpCode { name: "RST 30h",          bytes: 1, cycles_ahead:  0, cycles: 16, proc: rst_30h             },
    /* 0xF8*/ OpCode { name: "LD HL, SP+{i8}",   bytes: 2, cycles_ahead:  0, cycles: 12, proc: ld_hl_sp_i8         },
    /* 0xF9*/ OpCode { name: "LD SP, HL",        bytes: 1, cycles_ahead:  0, cycles:  8, proc: ld_sp_hl            },
    /* 0xFA*/ OpCode { name: "LD A, (${x16})",   bytes: 3, cycles_ahead:  8, cycles: 16, proc: ld_a_u16ptr         },
    /* 0xFB*/ OpCode { name: "EI",               bytes: 1, cycles_ahead:  0, cycles:  4, proc: enable_interrupts   },
    /* 0xFC*/ OPCODE_UNASSIGNED,
    /* 0xFD*/ OPCODE_UNASSIGNED,
    /* 0xFE*/ OpCode { name: "CP A, ${x8}",      bytes: 2, cycles_ahead:  0, cycles:  8, proc: cp_a_u8             },
    /* 0xFF*/ OpCode { name: "RST 38h",          bytes: 1, cycles_ahead:  0, cycles: 16, proc: rst_38h             },
];


/// The table of all extended opcodes.
/// The array's index is the opcodes numerical value.
pub static OPCODE_TABLE_EXTENDED: [OpCode; 256] = [
    /* 0x00*/ OpCode { name: "RLC B",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: rlc_b               },
    /* 0x01*/ OpCode { name: "RLC C",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: rlc_c               },
    /* 0x02*/ OpCode { name: "RLC D",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: rlc_d               },
    /* 0x03*/ OpCode { name: "RLC E",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: rlc_e               },
    /* 0x04*/ OpCode { name: "RLC H",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: rlc_h               },
    /* 0x05*/ OpCode { name: "RLC L",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: rlc_l               },
    /* 0x06*/ OpCode { name: "RLC (HL)",         bytes: 1, cycles_ahead:  4, cycles: 16, proc: rlc_hlptr           },
    /* 0x07*/ OpCode { name: "RLC A",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: rlc_a               },
    /* 0x08*/ OpCode { name: "RRC B",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: rrc_b               },
    /* 0x09*/ OpCode { name: "RRC C",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: rrc_c               },
    /* 0x0A*/ OpCode { name: "RRC D",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: rrc_d               },
    /* 0x0B*/ OpCode { name: "RRC E",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: rrc_e               },
    /* 0x0C*/ OpCode { name: "RRC H",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: rrc_h               },
    /* 0x0D*/ OpCode { name: "RRC L",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: rrc_l               },
    /* 0x0E*/ OpCode { name: "RRC (HL)",         bytes: 1, cycles_ahead:  4, cycles: 16, proc: rrc_hlptr           },
    /* 0x0F*/ OpCode { name: "RRC A",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: rrc_a               },

    /* 0x10*/ OpCode { name: "RL B",             bytes: 1, cycles_ahead:  0, cycles:  8, proc: rl_b                },
    /* 0x11*/ OpCode { name: "RL C",             bytes: 1, cycles_ahead:  0, cycles:  8, proc: rl_c                },
    /* 0x12*/ OpCode { name: "RL D",             bytes: 1, cycles_ahead:  0, cycles:  8, proc: rl_d                },
    /* 0x13*/ OpCode { name: "RL E",             bytes: 1, cycles_ahead:  0, cycles:  8, proc: rl_e                },
    /* 0x14*/ OpCode { name: "RL H",             bytes: 1, cycles_ahead:  0, cycles:  8, proc: rl_h                },
    /* 0x15*/ OpCode { name: "RL L",             bytes: 1, cycles_ahead:  0, cycles:  8, proc: rl_l                },
    /* 0x16*/ OpCode { name: "RL (HL)",          bytes: 1, cycles_ahead:  4, cycles: 16, proc: rl_hlptr            },
    /* 0x17*/ OpCode { name: "RL A",             bytes: 1, cycles_ahead:  0, cycles:  8, proc: rl_a                },
    /* 0x18*/ OpCode { name: "RR B",             bytes: 1, cycles_ahead:  0, cycles:  8, proc: rr_b                },
    /* 0x19*/ OpCode { name: "RR C",             bytes: 1, cycles_ahead:  0, cycles:  8, proc: rr_c                },
    /* 0x1A*/ OpCode { name: "RR D",             bytes: 1, cycles_ahead:  0, cycles:  8, proc: rr_d                },
    /* 0x1B*/ OpCode { name: "RR E",             bytes: 1, cycles_ahead:  0, cycles:  8, proc: rr_e                },
    /* 0x1C*/ OpCode { name: "RR H",             bytes: 1, cycles_ahead:  0, cycles:  8, proc: rr_h                },
    /* 0x1D*/ OpCode { name: "RR L",             bytes: 1, cycles_ahead:  0, cycles:  8, proc: rr_l                },
    /* 0x1E*/ OpCode { name: "RR (HL)",          bytes: 1, cycles_ahead:  4, cycles: 16, proc: rr_hlptr            },
    /* 0x1F*/ OpCode { name: "RR A",             bytes: 1, cycles_ahead:  0, cycles:  8, proc: rr_a                },

    /* 0x20*/ OpCode { name: "SLA B",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: sla_b               },
    /* 0x21*/ OpCode { name: "SLA C",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: sla_c               },
    /* 0x22*/ OpCode { name: "SLA D",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: sla_d               },
    /* 0x23*/ OpCode { name: "SLA E",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: sla_e               },
    /* 0x24*/ OpCode { name: "SLA H",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: sla_h               },
    /* 0x25*/ OpCode { name: "SLA L",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: sla_l               },
    /* 0x26*/ OpCode { name: "SLA (HL)",         bytes: 1, cycles_ahead:  4, cycles: 16, proc: sla_hlptr           },
    /* 0x27*/ OpCode { name: "SLA A",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: sla_a               },
    /* 0x28*/ OpCode { name: "SRA B",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: sra_b               },
    /* 0x29*/ OpCode { name: "SRA C",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: sra_c               },
    /* 0x2A*/ OpCode { name: "SRA D",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: sra_d               },
    /* 0x2B*/ OpCode { name: "SRA E",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: sra_e               },
    /* 0x2C*/ OpCode { name: "SRA H",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: sra_h               },
    /* 0x2D*/ OpCode { name: "SRA L",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: sra_l               },
    /* 0x2E*/ OpCode { name: "SRA (HL)",         bytes: 1, cycles_ahead:  4, cycles: 16, proc: sra_hlptr           },
    /* 0x2F*/ OpCode { name: "SRA A",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: sra_a               },

    /* 0x30*/ OpCode { name: "SWAP B",           bytes: 1, cycles_ahead:  0, cycles:  8, proc: swap_b               },
    /* 0x31*/ OpCode { name: "SWAP C",           bytes: 1, cycles_ahead:  0, cycles:  8, proc: swap_c               },
    /* 0x32*/ OpCode { name: "SWAP D",           bytes: 1, cycles_ahead:  0, cycles:  8, proc: swap_d               },
    /* 0x33*/ OpCode { name: "SWAP E",           bytes: 1, cycles_ahead:  0, cycles:  8, proc: swap_e               },
    /* 0x34*/ OpCode { name: "SWAP H",           bytes: 1, cycles_ahead:  0, cycles:  8, proc: swap_h               },
    /* 0x35*/ OpCode { name: "SWAP L",           bytes: 1, cycles_ahead:  0, cycles:  8, proc: swap_l               },
    /* 0x36*/ OpCode { name: "SWAP (HL)",        bytes: 1, cycles_ahead:  4, cycles: 16, proc: swap_hlptr           },
    /* 0x37*/ OpCode { name: "SWAP A",           bytes: 1, cycles_ahead:  0, cycles:  8, proc: swap_a               },
    /* 0x38*/ OpCode { name: "SRL B",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: srl_b               },
    /* 0x39*/ OpCode { name: "SRL C",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: srl_c               },
    /* 0x3A*/ OpCode { name: "SRL D",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: srl_d               },
    /* 0x3B*/ OpCode { name: "SRL E",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: srl_e               },
    /* 0x3C*/ OpCode { name: "SRL H",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: srl_h               },
    /* 0x3D*/ OpCode { name: "SRL L",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: srl_l               },
    /* 0x3E*/ OpCode { name: "SRL (HL)",         bytes: 1, cycles_ahead:  4, cycles: 16, proc: srl_hlptr           },
    /* 0x3F*/ OpCode { name: "SRL A",            bytes: 1, cycles_ahead:  0, cycles:  8, proc: srl_a               },

    /* 0x40*/ OpCode { name: "BIT 0, B",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_0_b       },
    /* 0x41*/ OpCode { name: "BIT 0, C",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_0_c       },
    /* 0x42*/ OpCode { name: "BIT 0, D",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_0_d       },
    /* 0x43*/ OpCode { name: "BIT 0, E",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_0_e       },
    /* 0x44*/ OpCode { name: "BIT 0, H",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_0_h       },
    /* 0x45*/ OpCode { name: "BIT 0, L",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_0_l       },
    /* 0x46*/ OpCode { name: "BIT 0, (HL)",      bytes: 1, cycles_ahead:  4, cycles: 12, proc: check_bit_0_hlptr   },
    /* 0x47*/ OpCode { name: "BIT 0, A",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_0_a       },
    /* 0x48*/ OpCode { name: "BIT 1, B",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_1_b       },
    /* 0x49*/ OpCode { name: "BIT 1, C",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_1_c       },
    /* 0x4A*/ OpCode { name: "BIT 1, D",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_1_d       },
    /* 0x4B*/ OpCode { name: "BIT 1, E",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_1_e       },
    /* 0x4C*/ OpCode { name: "BIT 1, H",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_1_h       },
    /* 0x4D*/ OpCode { name: "BIT 1, L",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_1_l       },
    /* 0x4E*/ OpCode { name: "BIT 1, (HL)",      bytes: 1, cycles_ahead:  4, cycles: 12, proc: check_bit_1_hlptr   },
    /* 0x4F*/ OpCode { name: "BIT 1, A",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_1_a       },

    /* 0x50*/ OpCode { name: "BIT 2, B",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_2_b       },
    /* 0x51*/ OpCode { name: "BIT 2, C",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_2_c       },
    /* 0x52*/ OpCode { name: "BIT 2, D",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_2_d       },
    /* 0x53*/ OpCode { name: "BIT 2, E",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_2_e       },
    /* 0x54*/ OpCode { name: "BIT 2, H",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_2_h       },
    /* 0x55*/ OpCode { name: "BIT 2, L",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_2_l       },
    /* 0x56*/ OpCode { name: "BIT 2, (HL)",      bytes: 1, cycles_ahead:  4, cycles: 12, proc: check_bit_2_hlptr   },
    /* 0x57*/ OpCode { name: "BIT 2, A",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_2_a       },
    /* 0x58*/ OpCode { name: "BIT 3, B",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_3_b       },
    /* 0x59*/ OpCode { name: "BIT 3, C",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_3_c       },
    /* 0x5A*/ OpCode { name: "BIT 3, D",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_3_d       },
    /* 0x5B*/ OpCode { name: "BIT 3, E",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_3_e       },
    /* 0x5C*/ OpCode { name: "BIT 3, H",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_3_h       },
    /* 0x5D*/ OpCode { name: "BIT 3, L",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_3_l       },
    /* 0x5E*/ OpCode { name: "BIT 3, (HL)",      bytes: 1, cycles_ahead:  4, cycles: 12, proc: check_bit_3_hlptr   },
    /* 0x5F*/ OpCode { name: "BIT 3, A",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_3_a       },

    /* 0x60*/ OpCode { name: "BIT 4, B",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_4_b       },
    /* 0x61*/ OpCode { name: "BIT 4, C",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_4_c       },
    /* 0x62*/ OpCode { name: "BIT 4, D",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_4_d       },
    /* 0x63*/ OpCode { name: "BIT 4, E",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_4_e       },
    /* 0x64*/ OpCode { name: "BIT 4, H",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_4_h       },
    /* 0x65*/ OpCode { name: "BIT 4, L",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_4_l       },
    /* 0x66*/ OpCode { name: "BIT 4, (HL)",      bytes: 1, cycles_ahead:  4, cycles: 12, proc: check_bit_4_hlptr   },
    /* 0x67*/ OpCode { name: "BIT 4, A",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_4_a       },
    /* 0x68*/ OpCode { name: "BIT 5, B",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_5_b       },
    /* 0x69*/ OpCode { name: "BIT 5, C",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_5_c       },
    /* 0x6A*/ OpCode { name: "BIT 5, D",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_5_d       },
    /* 0x6B*/ OpCode { name: "BIT 5, E",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_5_e       },
    /* 0x6C*/ OpCode { name: "BIT 5, H",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_5_h       },
    /* 0x6D*/ OpCode { name: "BIT 5, L",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_5_l       },
    /* 0x6E*/ OpCode { name: "BIT 5, (HL)",      bytes: 1, cycles_ahead:  4, cycles: 12, proc: check_bit_5_hlptr   },
    /* 0x6F*/ OpCode { name: "BIT 5, A",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_5_a       },

    /* 0x70*/ OpCode { name: "BIT 6, B",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_6_b       },
    /* 0x71*/ OpCode { name: "BIT 6, C",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_6_c       },
    /* 0x72*/ OpCode { name: "BIT 6, D",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_6_d       },
    /* 0x73*/ OpCode { name: "BIT 6, E",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_6_e       },
    /* 0x74*/ OpCode { name: "BIT 6, H",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_6_h       },
    /* 0x75*/ OpCode { name: "BIT 6, L",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_6_l       },
    /* 0x76*/ OpCode { name: "BIT 6, (HL)",      bytes: 1, cycles_ahead:  4, cycles: 12, proc: check_bit_6_hlptr   },
    /* 0x77*/ OpCode { name: "BIT 6, A",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_6_a       },
    /* 0x78*/ OpCode { name: "BIT 7, B",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_7_b       },
    /* 0x79*/ OpCode { name: "BIT 7, C",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_7_c       },
    /* 0x7A*/ OpCode { name: "BIT 7, D",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_7_d       },
    /* 0x7B*/ OpCode { name: "BIT 7, E",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_7_e       },
    /* 0x7C*/ OpCode { name: "BIT 7, H",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_7_h       },
    /* 0x7D*/ OpCode { name: "BIT 7, L",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_7_l       },
    /* 0x7E*/ OpCode { name: "BIT 7, (HL)",      bytes: 1, cycles_ahead:  4, cycles: 12, proc: check_bit_7_hlptr   },
    /* 0x7F*/ OpCode { name: "BIT 7, A",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: check_bit_7_a       },

    /* 0x80*/ OpCode { name: "RES 0, B",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_0_b         },
    /* 0x81*/ OpCode { name: "RES 0, C",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_0_c         },
    /* 0x82*/ OpCode { name: "RES 0, D",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_0_d         },
    /* 0x83*/ OpCode { name: "RES 0, E",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_0_e         },
    /* 0x84*/ OpCode { name: "RES 0, H",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_0_h         },
    /* 0x85*/ OpCode { name: "RES 0, L",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_0_l         },
    /* 0x86*/ OpCode { name: "RES 0, (HL)",      bytes: 1, cycles_ahead:  4, cycles: 16, proc: res_bit_0_hlptr     },
    /* 0x87*/ OpCode { name: "RES 0, A",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_0_a         },
    /* 0x88*/ OpCode { name: "RES 1, B",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_1_b         },
    /* 0x89*/ OpCode { name: "RES 1, C",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_1_c         },
    /* 0x8A*/ OpCode { name: "RES 1, D",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_1_d         },
    /* 0x8B*/ OpCode { name: "RES 1, E",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_1_e         },
    /* 0x8C*/ OpCode { name: "RES 1, H",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_1_h         },
    /* 0x8D*/ OpCode { name: "RES 1, L",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_1_l         },
    /* 0x8E*/ OpCode { name: "RES 1, (HL)",      bytes: 1, cycles_ahead:  4, cycles: 16, proc: res_bit_1_hlptr     },
    /* 0x8F*/ OpCode { name: "RES 1, A",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_1_a         },

    /* 0x90*/ OpCode { name: "RES 2, B",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_2_b         },
    /* 0x91*/ OpCode { name: "RES 2, C",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_2_c         },
    /* 0x92*/ OpCode { name: "RES 2, D",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_2_d         },
    /* 0x93*/ OpCode { name: "RES 2, E",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_2_e         },
    /* 0x94*/ OpCode { name: "RES 2, H",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_2_h         },
    /* 0x95*/ OpCode { name: "RES 2, L",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_2_l         },
    /* 0x96*/ OpCode { name: "RES 2, (HL)",      bytes: 1, cycles_ahead:  4, cycles: 16, proc: res_bit_2_hlptr     },
    /* 0x97*/ OpCode { name: "RES 2, A",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_2_a         },
    /* 0x98*/ OpCode { name: "RES 3, B",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_3_b         },
    /* 0x99*/ OpCode { name: "RES 3, C",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_3_c         },
    /* 0x9A*/ OpCode { name: "RES 3, D",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_3_d         },
    /* 0x9B*/ OpCode { name: "RES 3, E",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_3_e         },
    /* 0x9C*/ OpCode { name: "RES 3, H",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_3_h         },
    /* 0x9D*/ OpCode { name: "RES 3, L",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_3_l         },
    /* 0x9E*/ OpCode { name: "RES 3, (HL)",      bytes: 1, cycles_ahead:  4, cycles: 16, proc: res_bit_3_hlptr     },
    /* 0x9F*/ OpCode { name: "RES 3, A",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_3_a         },

    /* 0xA0*/ OpCode { name: "RES 4, B",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_4_b         },
    /* 0xA1*/ OpCode { name: "RES 4, C",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_4_c         },
    /* 0xA2*/ OpCode { name: "RES 4, D",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_4_d         },
    /* 0xA3*/ OpCode { name: "RES 4, E",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_4_e         },
    /* 0xA4*/ OpCode { name: "RES 4, H",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_4_h         },
    /* 0xA5*/ OpCode { name: "RES 4, L",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_4_l         },
    /* 0xA6*/ OpCode { name: "RES 4, (HL)",      bytes: 1, cycles_ahead:  4, cycles: 16, proc: res_bit_4_hlptr     },
    /* 0xA7*/ OpCode { name: "RES 4, A",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_4_a         },
    /* 0xA8*/ OpCode { name: "RES 5, B",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_5_b         },
    /* 0xA9*/ OpCode { name: "RES 5, C",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_5_c         },
    /* 0xAA*/ OpCode { name: "RES 5, D",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_5_d         },
    /* 0xAB*/ OpCode { name: "RES 5, E",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_5_e         },
    /* 0xAC*/ OpCode { name: "RES 5, H",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_5_h         },
    /* 0xAD*/ OpCode { name: "RES 5, L",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_5_l         },
    /* 0xAE*/ OpCode { name: "RES 5, (HL)",      bytes: 1, cycles_ahead:  4, cycles: 16, proc: res_bit_5_hlptr     },
    /* 0xAF*/ OpCode { name: "RES 5, A",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_5_a         },

    /* 0xB0*/ OpCode { name: "RES 6, B",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_6_b         },
    /* 0xB1*/ OpCode { name: "RES 6, C",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_6_c         },
    /* 0xB2*/ OpCode { name: "RES 6, D",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_6_d         },
    /* 0xB3*/ OpCode { name: "RES 6, E",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_6_e         },
    /* 0xB4*/ OpCode { name: "RES 6, H",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_6_h         },
    /* 0xB5*/ OpCode { name: "RES 6, L",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_6_l         },
    /* 0xB6*/ OpCode { name: "RES 6, (HL)",      bytes: 1, cycles_ahead:  4, cycles: 16, proc: res_bit_6_hlptr     },
    /* 0xB7*/ OpCode { name: "RES 6, A",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_6_a         },
    /* 0xB8*/ OpCode { name: "RES 7, B",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_7_b         },
    /* 0xB9*/ OpCode { name: "RES 7, C",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_7_c         },
    /* 0xBA*/ OpCode { name: "RES 7, D",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_7_d         },
    /* 0xBB*/ OpCode { name: "RES 7, E",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_7_e         },
    /* 0xBC*/ OpCode { name: "RES 7, H",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_7_h         },
    /* 0xBD*/ OpCode { name: "RES 7, L",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_7_l         },
    /* 0xBE*/ OpCode { name: "RES 7, (HL)",      bytes: 1, cycles_ahead:  4, cycles: 16, proc: res_bit_7_hlptr     },
    /* 0xBF*/ OpCode { name: "RES 7, A",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: res_bit_7_a         },

    /* 0xC0*/ OpCode { name: "SET 0, B",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_0_b         },
    /* 0xC1*/ OpCode { name: "SET 0, C",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_0_c         },
    /* 0xC2*/ OpCode { name: "SET 0, D",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_0_d         },
    /* 0xC3*/ OpCode { name: "SET 0, E",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_0_e         },
    /* 0xC4*/ OpCode { name: "SET 0, H",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_0_h         },
    /* 0xC5*/ OpCode { name: "SET 0, L",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_0_l         },
    /* 0xC6*/ OpCode { name: "SET 0, (HL)",      bytes: 1, cycles_ahead:  4, cycles: 16, proc: set_bit_0_hlptr     },
    /* 0xC7*/ OpCode { name: "SET 0, A",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_0_a         },
    /* 0xC8*/ OpCode { name: "SET 1, B",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_1_b         },
    /* 0xC9*/ OpCode { name: "SET 1, C",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_1_c         },
    /* 0xCA*/ OpCode { name: "SET 1, D",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_1_d         },
    /* 0xCB*/ OpCode { name: "SET 1, E",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_1_e         },
    /* 0xCC*/ OpCode { name: "SET 1, H",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_1_h         },
    /* 0xCD*/ OpCode { name: "SET 1, L",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_1_l         },
    /* 0xCE*/ OpCode { name: "SET 1, (HL)",      bytes: 1, cycles_ahead:  4, cycles: 16, proc: set_bit_1_hlptr     },
    /* 0xCF*/ OpCode { name: "SET 1, A",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_1_a         },

    /* 0xD0*/ OpCode { name: "SET 2, B",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_2_b         },
    /* 0xD1*/ OpCode { name: "SET 2, C",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_2_c         },
    /* 0xD2*/ OpCode { name: "SET 2, D",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_2_d         },
    /* 0xD3*/ OpCode { name: "SET 2, E",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_2_e         },
    /* 0xD4*/ OpCode { name: "SET 2, H",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_2_h         },
    /* 0xD5*/ OpCode { name: "SET 2, L",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_2_l         },
    /* 0xD6*/ OpCode { name: "SET 2, (HL)",      bytes: 1, cycles_ahead:  4, cycles: 16, proc: set_bit_2_hlptr     },
    /* 0xD7*/ OpCode { name: "SET 2, A",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_2_a         },
    /* 0xD8*/ OpCode { name: "SET 3, B",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_3_b         },
    /* 0xD9*/ OpCode { name: "SET 3, C",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_3_c         },
    /* 0xDA*/ OpCode { name: "SET 3, D",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_3_d         },
    /* 0xDB*/ OpCode { name: "SET 3, E",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_3_e         },
    /* 0xDC*/ OpCode { name: "SET 3, H",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_3_h         },
    /* 0xDD*/ OpCode { name: "SET 3, L",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_3_l         },
    /* 0xDE*/ OpCode { name: "SET 3, (HL)",      bytes: 1, cycles_ahead:  4, cycles: 16, proc: set_bit_3_hlptr     },
    /* 0xDF*/ OpCode { name: "SET 3, A",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_3_a         },

    /* 0xE0*/ OpCode { name: "SET 4, B",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_4_b         },
    /* 0xE1*/ OpCode { name: "SET 4, C",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_4_c         },
    /* 0xE2*/ OpCode { name: "SET 4, D",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_4_d         },
    /* 0xE3*/ OpCode { name: "SET 4, E",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_4_e         },
    /* 0xE4*/ OpCode { name: "SET 4, H",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_4_h         },
    /* 0xE5*/ OpCode { name: "SET 4, L",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_4_l         },
    /* 0xE6*/ OpCode { name: "SET 4, (HL)",      bytes: 1, cycles_ahead:  4, cycles: 16, proc: set_bit_4_hlptr     },
    /* 0xE7*/ OpCode { name: "SET 4, A",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_4_a         },
    /* 0xE8*/ OpCode { name: "SET 5, B",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_5_b         },
    /* 0xE9*/ OpCode { name: "SET 5, C",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_5_c         },
    /* 0xEA*/ OpCode { name: "SET 5, D",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_5_d         },
    /* 0xEB*/ OpCode { name: "SET 5, E",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_5_e         },
    /* 0xEC*/ OpCode { name: "SET 5, H",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_5_h         },
    /* 0xED*/ OpCode { name: "SET 5, L",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_5_l         },
    /* 0xEE*/ OpCode { name: "SET 5, (HL)",      bytes: 1, cycles_ahead:  4, cycles: 16, proc: set_bit_5_hlptr     },
    /* 0xEF*/ OpCode { name: "SET 5, A",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_5_a         },

    /* 0xF0*/ OpCode { name: "SET 6, B",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_6_b         },
    /* 0xF1*/ OpCode { name: "SET 6, C",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_6_c         },
    /* 0xF2*/ OpCode { name: "SET 6, D",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_6_d         },
    /* 0xF3*/ OpCode { name: "SET 6, E",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_6_e         },
    /* 0xF4*/ OpCode { name: "SET 6, H",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_6_h         },
    /* 0xF5*/ OpCode { name: "SET 6, L",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_6_l         },
    /* 0xF6*/ OpCode { name: "SET 6, (HL)",      bytes: 1, cycles_ahead:  4, cycles: 16, proc: set_bit_6_hlptr     },
    /* 0xF7*/ OpCode { name: "SET 6, A",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_6_a         },
    /* 0xF8*/ OpCode { name: "SET 7, B",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_7_b         },
    /* 0xF9*/ OpCode { name: "SET 7, C",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_7_c         },
    /* 0xFA*/ OpCode { name: "SET 7, D",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_7_d         },
    /* 0xFB*/ OpCode { name: "SET 7, E",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_7_e         },
    /* 0xFC*/ OpCode { name: "SET 7, H",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_7_h         },
    /* 0xFD*/ OpCode { name: "SET 7, L",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_7_l         },
    /* 0xFE*/ OpCode { name: "SET 7, (HL)",      bytes: 1, cycles_ahead:  4, cycles: 16, proc: set_bit_7_hlptr     },
    /* 0xFF*/ OpCode { name: "SET 7, A",         bytes: 1, cycles_ahead:  0, cycles:  8, proc: set_bit_7_a         },
];

