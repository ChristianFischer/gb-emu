/*
 * Copyright (C) 2022-2023 by Christian Fischer
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

use gemi_core::gameboy::DeviceType;
use testrunner::run_test_case;
use tests_shared::test_config::*;

#[allow(unused_imports)]
use gemi_core::ppu::graphic_data::{Color, DmgDisplayPalette};



mod bgen {
    use super::*;


    #[test]
    #[ignore]
    fn bgoff_bgon_sprite_above_window_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgen/bgoff_bgon_sprite_above_window.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgen/bgoff_bgon_sprite_above_window_xdmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgoff_bgon_sprite_above_window_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgen/bgoff_bgon_sprite_above_window.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgen/bgoff_bgon_sprite_above_window_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgoff_bgon_sprite_below_window_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgen/bgoff_bgon_sprite_below_window.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgen/bgoff_bgon_sprite_below_window_xdmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgoff_bgon_sprite_below_window_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgen/bgoff_bgon_sprite_below_window.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgen/bgoff_bgon_sprite_below_window_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod bgtiledata {
    use super::*;


    #[test]
    #[ignore]
    fn bgtiledata_spx08_1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx08_1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx08_1_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx08_1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx08_1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx08_1_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx08_2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx08_2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx08_2_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx08_2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx08_2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx08_2_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx08_3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx08_3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx08_3_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx08_3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx08_3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx08_3_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx08_4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx08_4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx08_4_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx08_4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx08_4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx08_4_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx08_ds_1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx08_ds_1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx08_ds_1_xcgb.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx08_ds_2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx08_ds_2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx08_ds_2_xcgb.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx08_ds_3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx08_ds_3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx08_ds_3_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx08_ds_4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx08_ds_4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx08_ds_4_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx09_1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx09_1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx09_1_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx09_1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx09_1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx09_1_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx09_2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx09_2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx09_2_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx09_2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx09_2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx09_2_xcgb.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx09_3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx09_3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx09_3_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx09_3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx09_3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx09_3_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx09_4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx09_4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx09_4_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx09_4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx09_4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx09_4_xcgb.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx09_ds_1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx09_ds_1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx09_ds_1_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx09_ds_2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx09_ds_2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx09_ds_2_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx09_ds_3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx09_ds_3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx09_ds_3_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx09_ds_4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx09_ds_4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx09_ds_4_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx0a_1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx0A_1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx0A_1_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx0a_1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx0A_1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx0A_1_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx0a_2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx0A_2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx0A_2_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx0a_2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx0A_2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx0A_2_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx0a_3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx0A_3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx0A_3_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx0a_3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx0A_3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx0A_3_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx0a_4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx0A_4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx0A_4_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx0a_4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx0A_4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx0A_4_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx0b_1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx0B_1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx0B_1_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx0b_1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx0B_1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx0B_1_xcgb.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx0b_2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx0B_2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx0B_2_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx0b_2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx0B_2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx0B_2_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx0b_3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx0B_3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx0B_3_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx0b_3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx0B_3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx0B_3_xcgb.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx0b_4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx0B_4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx0B_4_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtiledata_spx0b_4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtiledata/bgtiledata_spx0B_4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtiledata/bgtiledata_spx0B_4_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod bgtilemap {
    use super::*;


    #[test]
    #[ignore]
    fn bgtilemap_spx08_1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx08_1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx08_1_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx08_1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx08_1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx08_1_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx08_2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx08_2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx08_2_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx08_2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx08_2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx08_2_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx08_3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx08_3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx08_3_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx08_3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx08_3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx08_3_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx08_4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx08_4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx08_4_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx08_4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx08_4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx08_4_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx08_ds_1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx08_ds_1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx08_ds_1_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx08_ds_2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx08_ds_2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx08_ds_2_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx08_ds_3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx08_ds_3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx08_ds_3_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx08_ds_4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx08_ds_4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx08_ds_4_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx09_1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx09_1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx09_1_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx09_1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx09_1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx09_1_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx09_2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx09_2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx09_2_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx09_2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx09_2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx09_2_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx09_3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx09_3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx09_3_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx09_3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx09_3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx09_3_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx09_4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx09_4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx09_4_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx09_4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx09_4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx09_4_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx09_ds_1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx09_ds_1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx09_ds_1_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx09_ds_2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx09_ds_2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx09_ds_2_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx09_ds_3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx09_ds_3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx09_ds_3_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx09_ds_4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx09_ds_4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx09_ds_4_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx0a_1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx0A_1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx0A_1_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx0a_1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx0A_1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx0A_1_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx0a_2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx0A_2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx0A_2_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx0a_2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx0A_2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx0A_2_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx0a_3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx0A_3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx0A_3_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx0a_3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx0A_3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx0A_3_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx0a_4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx0A_4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx0A_4_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx0a_4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx0A_4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx0A_4_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx0b_1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx0B_1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx0B_1_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx0b_1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx0B_1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx0B_1_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx0b_2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx0B_2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx0B_2_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx0b_2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx0B_2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx0B_2_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx0b_3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx0B_3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx0B_3_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx0b_3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx0B_3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx0B_3_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx0b_4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                dmg_display_palette: Some(DmgDisplayPalette::new([
                    Color::from_rgba32(0x000000ff),
                    Color::from_rgba32(0x555555ff),
                    Color::from_rgba32(0xaaaaaaff),
                    Color::from_rgba32(0xffffffff),
                ])),
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx0B_4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx0B_4_dmg08.png".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn bgtilemap_spx0b_4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/bgtilemap/bgtilemap_spx0B_4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                compare_lcd_with_image: Some("gambatte/bgtilemap/bgtilemap_spx0B_4_cgb04c.png".to_string()),
                color_mod: LcdColorMod::Gambatte,
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod cgbpal_m3 {
    use super::*;


    #[test]
    #[ignore]
    fn cgbpal_m3end_1_out7_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_m3end_1_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_m3end_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_m3end_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_m3end_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_m3end_3_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_m3end_4_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_m3end_4_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_m3end_ds_1_out7_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_m3end_ds_1_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_m3end_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_m3end_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_m3end_ds_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_m3end_ds_3_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_m3end_ds_4_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_m3end_ds_4_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_m3end_scx2_1_out7_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_m3end_scx2_1_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_m3end_scx2_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_m3end_scx2_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_m3end_scx2_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_m3end_scx2_3_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_m3end_scx2_4_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_m3end_scx2_4_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_m3end_scx3_1_out7_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_m3end_scx3_1_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_m3end_scx3_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_m3end_scx3_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_m3end_scx3_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_m3end_scx3_3_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_m3end_scx3_4_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_m3end_scx3_4_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_m3end_scx5_1_out7_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_m3end_scx5_1_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_m3end_scx5_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_m3end_scx5_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_m3end_scx5_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_m3end_scx5_3_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_m3end_scx5_4_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_m3end_scx5_4_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_m3end_scx5_ds_1_out7_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_m3end_scx5_ds_1_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_m3end_scx5_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_m3end_scx5_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_m3end_scx5_ds_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_m3end_scx5_ds_3_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_m3end_scx5_ds_4_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_m3end_scx5_ds_4_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_m3start_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_m3start_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_m3start_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_m3start_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_m3start_ds_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_m3start_ds_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_m3start_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_m3start_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_read_m3start_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_read_m3start_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_read_m3start_2_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_read_m3start_2_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_read_m3start_ds_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_read_m3start_ds_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_read_m3start_ds_2_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_read_m3start_ds_2_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_read_m3start_ds_lcdoffset1_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_read_m3start_ds_lcdoffset1_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_read_m3start_ds_lcdoffset1_2_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_read_m3start_ds_lcdoffset1_2_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_read_m3start_lcdoffset1_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_read_m3start_lcdoffset1_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_read_m3start_lcdoffset1_2_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_read_m3start_lcdoffset1_2_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_write_m3start_1_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_write_m3start_1_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_write_m3start_2_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_write_m3start_2_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_write_m3start_ds_1_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_write_m3start_ds_1_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_write_m3start_ds_2_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_write_m3start_ds_2_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_write_m3start_ds_lcdoffset1_1_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_write_m3start_ds_lcdoffset1_1_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_write_m3start_ds_lcdoffset1_2_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_write_m3start_ds_lcdoffset1_2_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_write_m3start_lcdoffset1_1_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_write_m3start_lcdoffset1_1_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn cgbpal_write_m3start_lcdoffset1_2_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/cgbpal_m3/cgbpal_write_m3start_lcdoffset1_2_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod display_startstate {
    use super::*;


    #[test]
    #[ignore]
    fn irq_oute1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/display_startstate/irq_dmg08_cgb04c_outE1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn irq_oute1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/display_startstate/irq_dmg08_cgb04c_outE1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly_out00_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/display_startstate/ly_dmg08_out00_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/display_startstate/ly_dmg08_out00_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn stat_1_out87_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/display_startstate/stat_1_cgb04c_out87.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("87".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn stat_1_out85_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/display_startstate/stat_1_dmg08_out85.gb")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("85".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn stat_2_out84_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/display_startstate/stat_2_cgb04c_out84.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("84".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn stat_2_out84_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/display_startstate/stat_2_dmg08_out84.gb")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("84".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn stat_scx2_1_out87_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/display_startstate/stat_scx2_1_cgb04c_out87.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("87".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn stat_scx2_2_out84_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/display_startstate/stat_scx2_2_cgb04c_out84.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("84".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn stat_scx3_1_out87_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/display_startstate/stat_scx3_1_cgb04c_out87.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("87".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn stat_scx3_2_out84_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/display_startstate/stat_scx3_2_cgb04c_out84.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("84".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn stat_scx5_1_out87_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/display_startstate/stat_scx5_1_cgb04c_out87.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("87".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn stat_scx5_2_out84_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/display_startstate/stat_scx5_2_cgb04c_out84.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("84".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod div {
    use super::*;


    #[test]
    #[ignore]
    fn start_inc_1_out1e_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/div/start_inc_1_cgb04c_out1E.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1E".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_inc_1_outab_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/div/start_inc_1_dmg08_outAB.gb")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("AB".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_inc_2_out1f_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/div/start_inc_2_cgb04c_out1F.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1F".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_inc_2_outac_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/div/start_inc_2_dmg08_outAC.gb")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("AC".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_stop1_inc_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/div/start_stop1_inc_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_stop1_inc_2_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/div/start_stop1_inc_2_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_stop2_inc_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/div/start_stop2_inc_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_stop2_inc_2_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/div/start_stop2_inc_2_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod dma {
    use super::*;


    #[test]
    #[ignore]
    fn dma_dst_wrap_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/dma_dst_wrap_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn dma_dst_wrap_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/dma_dst_wrap_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn dma_hiram_read_out7_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/dma_hiram_read_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn dma_hiram_read_result_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/dma_hiram_read_result_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn dma_oam_read_out7_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/dma_oam_read_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn dma_src_wrap_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/dma_src_wrap_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn dma_vram_read_out7_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/dma_vram_read_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff51_bits_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/ff51_bits_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff52_bits_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/ff52_bits_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff53_bits_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/ff53_bits_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff54_bits_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/ff54_bits_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_cycles_2xshort_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_cycles_2xshort_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_cycles_2xshort_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_cycles_2xshort_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_cycles_2xshort_scx5_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_cycles_2xshort_scx5_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_cycles_2xshort_scx5_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_cycles_2xshort_scx5_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_cycles_long_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_cycles_long_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_cycles_long_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_cycles_long_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_cycles_long_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_cycles_long_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_cycles_long_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_cycles_long_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_cycles_long_scx2_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_cycles_long_scx2_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_cycles_long_scx2_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_cycles_long_scx2_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_cycles_long_scx3_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_cycles_long_scx3_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_cycles_long_scx3_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_cycles_long_scx3_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_cycles_long_scx5_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_cycles_long_scx5_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_cycles_long_scx5_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_cycles_long_scx5_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_cycles_long_scx5_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_cycles_long_scx5_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_cycles_long_scx5_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_cycles_long_scx5_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_cycles_short_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_cycles_short_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_cycles_short_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_cycles_short_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_cycles_short_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_cycles_short_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_cycles_short_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_cycles_short_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_cycles_short_scx2_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_cycles_short_scx2_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_cycles_short_scx2_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_cycles_short_scx2_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_cycles_short_scx3_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_cycles_short_scx3_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_cycles_short_scx3_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_cycles_short_scx3_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_cycles_short_scx5_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_cycles_short_scx5_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_cycles_short_scx5_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_cycles_short_scx5_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_cycles_short_scx5_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_cycles_short_scx5_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_cycles_short_scx5_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_cycles_short_scx5_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_start_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_start_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_weird_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_weird_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn gdma_weird_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/gdma_weird_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_cycles_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_cycles_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_cycles_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_cycles_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_cycles_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_cycles_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_cycles_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_cycles_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_cycles_scx2_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_cycles_scx2_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_cycles_scx2_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_cycles_scx2_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_cycles_scx3_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_cycles_scx3_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_cycles_scx3_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_cycles_scx3_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_cycles_scx5_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_cycles_scx5_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_cycles_scx5_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_cycles_scx5_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_cycles_scx5_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_cycles_scx5_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_cycles_scx5_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_cycles_scx5_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_disable_display_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_disable_display_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_disable_display_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_disable_display_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_disabled_display_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_disabled_display_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_disabled_display_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_disabled_display_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_ei_m3halt_m0unhalt_ly_1_out02_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_ei_m3halt_m0unhalt_ly_1_cgb04c_out02.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("02".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_ei_m3halt_m0unhalt_ly_2_out03_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_ei_m3halt_m0unhalt_ly_2_cgb04c_out03.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("03".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_destl_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_destl_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_destl_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_destl_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_disable_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_disable_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_disable_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_disable_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_disable_ds_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_disable_ds_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_disable_ds_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_disable_ds_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_disable_scx2_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_disable_scx2_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_disable_scx2_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_disable_scx2_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_disable_scx3_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_disable_scx3_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_disable_scx3_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_disable_scx3_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_disable_scx5_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_disable_scx5_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_disable_scx5_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_disable_scx5_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_disable_scx5_ds_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_disable_scx5_ds_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_disable_scx5_ds_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_disable_scx5_ds_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_ei_m3halt_m2unhalt_ly_scx1_1_out02_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_ei_m3halt_m2unhalt_ly_scx1_1_cgb04c_out02.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("02".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_ei_m3halt_m2unhalt_ly_scx1_2_out03_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_ei_m3halt_m2unhalt_ly_scx1_2_cgb04c_out03.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("03".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_ei_m3halt_m2unhalt_ly_scx1_3_out02_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_ei_m3halt_m2unhalt_ly_scx1_3_cgb04c_out02.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("02".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_ei_m3halt_m2unhalt_ly_scx1_4_out03_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_ei_m3halt_m2unhalt_ly_scx1_4_cgb04c_out03.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("03".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_ei_m3halt_m2unhalt_ly_scx1_5_out02_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_ei_m3halt_m2unhalt_ly_scx1_5_cgb04c_out02.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("02".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_ei_m3halt_m2unhalt_ly_scx1_6_out03_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_ei_m3halt_m2unhalt_ly_scx1_6_cgb04c_out03.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("03".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_ei_m3halt_m2unhalt_pc_scx1_1_outac_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_ei_m3halt_m2unhalt_pc_scx1_1_cgb04c_outAC.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("AC".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_ei_m3halt_m2unhalt_pc_scx1_2_outad_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_ei_m3halt_m2unhalt_pc_scx1_2_cgb04c_outAD.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("AD".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_ei_m3halt_m2unhalt_pc_scx1_3_outae_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_ei_m3halt_m2unhalt_pc_scx1_3_cgb04c_outAE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("AE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_enable_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_enable_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_enable_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_enable_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_enable_ds_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_enable_ds_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_enable_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_enable_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_enable_ds_lcdoffset1_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_enable_ds_lcdoffset1_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_enable_ds_lcdoffset1_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_enable_ds_lcdoffset1_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_enable_lcdoffset3_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_enable_lcdoffset3_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_enable_lcdoffset3_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_enable_lcdoffset3_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_if_and_ie_halt_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_if_and_ie_halt_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_if_and_ie_halt_2_out02_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_if_and_ie_halt_2_cgb04c_out02.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("02".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_length_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_length_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_length_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_length_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m0halt_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m0halt_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m0halt_2_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m0halt_2_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m0halt_ds_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m0halt_ds_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m0halt_ds_2_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m0halt_ds_2_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m0halt_ds_lcdoffset1_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m0halt_ds_lcdoffset1_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m0halt_ds_lcdoffset1_2_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m0halt_ds_lcdoffset1_2_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m0halt_lcdoffset3_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m0halt_lcdoffset3_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m0halt_lcdoffset3_2_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m0halt_lcdoffset3_2_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m0unhalt_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m0unhalt_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m0unhalt_2_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m0unhalt_2_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m0unhalt_ds_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m0unhalt_ds_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m0unhalt_ds_2_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m0unhalt_ds_2_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3halt_m0unhalt_scx1_1_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3halt_m0unhalt_scx1_1_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3halt_m0unhalt_scx1_2_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3halt_m0unhalt_scx1_2_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3halt_m0unhalt_scx1_3_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3halt_m0unhalt_scx1_3_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3halt_m0unhalt_scx1_4_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3halt_m0unhalt_scx1_4_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3halt_m0unhalt_scx2_1_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3halt_m0unhalt_scx2_1_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3halt_m0unhalt_scx2_2_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3halt_m0unhalt_scx2_2_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3halt_m0unhalt_scx2_3_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3halt_m0unhalt_scx2_3_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3halt_m0unhalt_scx2_4_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3halt_m0unhalt_scx2_4_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3halt_m2unhalt_inc_scx1_1_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3halt_m2unhalt_inc_scx1_1_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3halt_m2unhalt_inc_scx1_2_out02_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3halt_m2unhalt_inc_scx1_2_cgb04c_out02.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("02".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3halt_m2unhalt_inc_scx1_3_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3halt_m2unhalt_inc_scx1_3_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3halt_m2unhalt_inc_scx2_1_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3halt_m2unhalt_inc_scx2_1_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3halt_m2unhalt_inc_scx2_2_out02_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3halt_m2unhalt_inc_scx2_2_cgb04c_out02.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("02".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3halt_m2unhalt_inc_scx2_3_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3halt_m2unhalt_inc_scx2_3_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3halt_m2unhalt_ly_scx1_1_out02_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3halt_m2unhalt_ly_scx1_1_cgb04c_out02.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("02".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3halt_m2unhalt_ly_scx1_2_out03_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3halt_m2unhalt_ly_scx1_2_cgb04c_out03.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("03".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3halt_m2unhalt_ly_scx1_3_out02_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3halt_m2unhalt_ly_scx1_3_cgb04c_out02.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("02".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3halt_m2unhalt_ly_scx1_4_out03_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3halt_m2unhalt_ly_scx1_4_cgb04c_out03.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("03".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3halt_m2unhalt_ly_scx1_5_out02_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3halt_m2unhalt_ly_scx1_5_cgb04c_out02.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("02".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3halt_m2unhalt_ly_scx1_6_out03_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3halt_m2unhalt_ly_scx1_6_cgb04c_out03.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("03".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3halt_m2unhalt_ly_scx2_1_out02_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3halt_m2unhalt_ly_scx2_1_cgb04c_out02.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("02".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3halt_m2unhalt_ly_scx2_2_out03_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3halt_m2unhalt_ly_scx2_2_cgb04c_out03.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("03".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3halt_m2unhalt_ly_scx2_3_out02_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3halt_m2unhalt_ly_scx2_3_cgb04c_out02.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("02".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3halt_m2unhalt_ly_scx2_4_out03_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3halt_m2unhalt_ly_scx2_4_cgb04c_out03.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("03".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3halt_m2unhalt_ly_scx2_5_out02_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3halt_m2unhalt_ly_scx2_5_cgb04c_out02.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("02".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3halt_m2unhalt_ly_scx2_6_out03_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3halt_m2unhalt_ly_scx2_6_cgb04c_out03.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("03".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3halt_m2unhalt_scx1_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3halt_m2unhalt_scx1_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3halt_m2unhalt_scx1_2_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3halt_m2unhalt_scx1_2_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3halt_m2unhalt_scx2_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3halt_m2unhalt_scx2_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3halt_m2unhalt_scx2_2_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3halt_m2unhalt_scx2_2_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_hdma5_scx1_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_hdma5_scx1_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_hdma5_scx1_2_out80_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_hdma5_scx1_2_cgb04c_out80.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("80".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_hdma5_scx1_3_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_hdma5_scx1_3_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_hdma5_scx1_ds_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_hdma5_scx1_ds_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_hdma5_scx1_ds_2_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_hdma5_scx1_ds_2_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_hdma5_scx2_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_hdma5_scx2_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_hdma5_scx2_2_out80_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_hdma5_scx2_2_cgb04c_out80.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("80".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_hdma5_scx2_3_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_hdma5_scx2_3_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_hdma5_scx2_ds_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_hdma5_scx2_ds_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_hdma5_scx2_ds_2_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_hdma5_scx2_ds_2_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_inc_scx1_1_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_inc_scx1_1_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_inc_scx1_2_out02_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_inc_scx1_2_cgb04c_out02.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("02".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_inc_scx1_3_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_inc_scx1_3_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_ly_scx1_1_out92_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_ly_scx1_1_cgb04c_out92.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("92".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_ly_scx1_2_out93_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_ly_scx1_2_cgb04c_out93.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("93".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_ly_scx1_3_out92_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_ly_scx1_3_cgb04c_out92.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("92".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_ly_scx1_4_out93_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_ly_scx1_4_cgb04c_out93.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("93".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_ly_scx1_5_out92_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_ly_scx1_5_cgb04c_out92.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("92".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_ly_scx1_6_out93_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_ly_scx1_6_cgb04c_out93.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("93".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_read_hdmadst00_scx1_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_read_hdmadst00_scx1_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_read_hdmadst00_scx1_2_out9f_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_read_hdmadst00_scx1_2_cgb04c_out9F.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("9F".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_read_hdmadst00_scx1_ds_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_read_hdmadst00_scx1_ds_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_read_hdmadst00_scx1_ds_2_out9f_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_read_hdmadst00_scx1_ds_2_cgb04c_out9F.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("9F".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_read_hdmadst00_scx2_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_read_hdmadst00_scx2_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_read_hdmadst00_scx2_2_out9f_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_read_hdmadst00_scx2_2_cgb04c_out9F.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("9F".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_read_hdmadst00_scx2_ds_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_read_hdmadst00_scx2_ds_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_read_hdmadst00_scx2_ds_2_out9f_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_read_hdmadst00_scx2_ds_2_cgb04c_out9F.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("9F".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_tima_scx1_ds_1_outf3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_tima_scx1_ds_1_cgb04c_outF3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_tima_scx1_ds_2_outf4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_tima_scx1_ds_2_cgb04c_outF4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_tima_scx1_ds_3_outf6_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_tima_scx1_ds_3_cgb04c_outF6.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F6".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_tima_scx1_ds_4_outf7_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_tima_scx1_ds_4_cgb04c_outF7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_tima_scx1_ds_5_outf8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_tima_scx1_ds_5_cgb04c_outF8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_m3speedchange_tima_scx1_ds_6_outf9_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_m3speedchange_tima_scx1_ds_6_cgb04c_outF9.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F9".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_speedchange_inc_scx1_ds_1_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_speedchange_inc_scx1_ds_1_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_speedchange_inc_scx1_ds_2_out02_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_speedchange_inc_scx1_ds_2_cgb04c_out02.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("02".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_speedchange_inc_scx1_ds_3_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_speedchange_inc_scx1_ds_3_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_wrambank_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_wrambank_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_late_wrambank_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_late_wrambank_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_m0halt_late_m3unhalt_scx1_1_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_m0halt_late_m3unhalt_scx1_1_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_m0halt_late_m3unhalt_scx1_2_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_m0halt_late_m3unhalt_scx1_2_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_m0speedchange_late_m3wakeup_scx1_1_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_m0speedchange_late_m3wakeup_scx1_1_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_m0speedchange_late_m3wakeup_scx1_2_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_m0speedchange_late_m3wakeup_scx1_2_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_m0speedchange_late_m3wakeup_scx2_1_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_m0speedchange_late_m3wakeup_scx2_1_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_m0speedchange_late_m3wakeup_scx2_2_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_m0speedchange_late_m3wakeup_scx2_2_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_m1halt_m0unhalt_hdma5_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_m1halt_m0unhalt_hdma5_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_m2halt_m0unhalt_hdma5_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_m2halt_m0unhalt_hdma5_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_m3halt_m0unhalt_ly_1_out02_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_m3halt_m0unhalt_ly_1_cgb04c_out02.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("02".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_m3halt_m0unhalt_ly_2_out03_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_m3halt_m0unhalt_ly_2_cgb04c_out03.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("03".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_m3halt_m1unhalt_hdma5_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_m3halt_m1unhalt_hdma5_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_m3speedchange_late_m0wakeup_1_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_m3speedchange_late_m0wakeup_1_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_m3speedchange_late_m0wakeup_2_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_m3speedchange_late_m0wakeup_2_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_pc_7ffe_out02_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_pc_7ffe_cgb04c_out02.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("02".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_start_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_start_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_start_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_start_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_start_ds_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_start_ds_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_start_ds_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_start_ds_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_start_ly0_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_start_ly0_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_start_ly0_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_start_ly0_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_start_scx2_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_start_scx2_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_start_scx2_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_start_scx2_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_start_scx3_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_start_scx3_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_start_scx3_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_start_scx3_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_start_scx5_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_start_scx5_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_start_scx5_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_start_scx5_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_start_scx5_ds_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_start_scx5_ds_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_start_scx5_ds_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_start_scx5_ds_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_transition_7fffhalt_inc_m3unhalt_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_transition_7fffhalt_inc_m3unhalt_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_transition_ei_halt_late_unhalt_ldaaimm_hdma_scx1_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_transition_ei_halt_late_unhalt_ldaaimm_hdma_scx1_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_transition_ei_halt_late_unhalt_ldaaimm_hdma_scx1_2_out02_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_transition_ei_halt_late_unhalt_ldaaimm_hdma_scx1_2_cgb04c_out02.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("02".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_transition_ei_halt_late_unhalt_scx1_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_transition_ei_halt_late_unhalt_scx1_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_transition_ei_halt_late_unhalt_scx1_2_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_transition_ei_halt_late_unhalt_scx1_2_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_transition_halt_hdmadst_unhalt_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_transition_halt_hdmadst_unhalt_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_transition_halt_late_unhalt_ldaaimm_hdma_scx1_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_transition_halt_late_unhalt_ldaaimm_hdma_scx1_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_transition_halt_late_unhalt_ldaaimm_hdma_scx1_2_out02_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_transition_halt_late_unhalt_ldaaimm_hdma_scx1_2_cgb04c_out02.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("02".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_transition_halt_late_unhalt_scx1_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_transition_halt_late_unhalt_scx1_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_transition_halt_late_unhalt_scx1_2_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_transition_halt_late_unhalt_scx1_2_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_transition_halt_m0unhalt_ldaaimm_scx1_out02_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_transition_halt_m0unhalt_ldaaimm_scx1_cgb04c_out02.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("02".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_transition_oamdma_2_out67_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_transition_oamdma_2_cgb04c_out67.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("67".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_transition_speedchange_7fffstop_inc_out02_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_transition_speedchange_7fffstop_inc_cgb04c_out02.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("02".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_transition_speedchange_hdmalen00_hdma5_scx1_out80_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_transition_speedchange_hdmalen00_hdma5_scx1_cgb04c_out80.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("80".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_transition_speedchange_hdmalen01_hdma5_scx1_out81_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_transition_speedchange_hdmalen01_hdma5_scx1_cgb04c_out81.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("81".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_transition_speedchange_hdmalen01_hdmadst10_scx1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_transition_speedchange_hdmalen01_hdmadst10_scx1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_transition_speedchange_hdmalen7f_hdma5_scx1_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_transition_speedchange_hdmalen7f_hdma5_scx1_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_transition_speedchange_hdmalen7f_hdmadst10_scx1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_transition_speedchange_hdmalen7f_hdmadst10_scx1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_transition_speedchange_ldaaimm_scx1_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_transition_speedchange_ldaaimm_scx1_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_transition_speedchange_ldaaimm_scx1_ds_out03_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_transition_speedchange_ldaaimm_scx1_ds_cgb04c_out03.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("03".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn hdma_transition_speedchange_oamdma_out71_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/hdma_transition_speedchange_oamdma_cgb04c_out71.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("71".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_gdma_pc_7ffe_1_out02_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/late_gdma_pc_7ffe_1_cgb04c_out02.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("02".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_gdma_pc_7ffe_2_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/dma/late_gdma_pc_7ffe_2_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod dmgpalette_during_m3 {
    use super::*;


    mod scx3 {
        use super::*;


        #[test]
        #[ignore]
        fn dmgpalette_during_m3_1_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/dmgpalette_during_m3/scx3/dmgpalette_during_m3_1.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/dmgpalette_during_m3/scx3/dmgpalette_during_m3_1_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn dmgpalette_during_m3_2_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/dmgpalette_during_m3/scx3/dmgpalette_during_m3_2.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/dmgpalette_during_m3/scx3/dmgpalette_during_m3_2_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn dmgpalette_during_m3_3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/dmgpalette_during_m3/scx3/dmgpalette_during_m3_3.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/dmgpalette_during_m3/scx3/dmgpalette_during_m3_3_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn dmgpalette_during_m3_4_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/dmgpalette_during_m3/scx3/dmgpalette_during_m3_4.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/dmgpalette_during_m3/scx3/dmgpalette_during_m3_4_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn dmgpalette_during_m3_5_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/dmgpalette_during_m3/scx3/dmgpalette_during_m3_5.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/dmgpalette_during_m3/scx3/dmgpalette_during_m3_5_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }
    }


    mod dmgpalette_during_m3_other {
        use super::*;


        #[test]
        #[ignore]
        fn dmgpalette_during_m3_1_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/dmgpalette_during_m3/dmgpalette_during_m3_1.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/dmgpalette_during_m3/dmgpalette_during_m3_1_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn dmgpalette_during_m3_2_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/dmgpalette_during_m3/dmgpalette_during_m3_2.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/dmgpalette_during_m3/dmgpalette_during_m3_2_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn dmgpalette_during_m3_3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/dmgpalette_during_m3/dmgpalette_during_m3_3.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/dmgpalette_during_m3/dmgpalette_during_m3_3_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn dmgpalette_during_m3_4_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/dmgpalette_during_m3/dmgpalette_during_m3_4.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/dmgpalette_during_m3/dmgpalette_during_m3_4_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn dmgpalette_during_m3_5_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/dmgpalette_during_m3/dmgpalette_during_m3_5.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/dmgpalette_during_m3/dmgpalette_during_m3_5_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn dmgpalette_during_m3_scx1_1_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/dmgpalette_during_m3/dmgpalette_during_m3_scx1_1.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/dmgpalette_during_m3/dmgpalette_during_m3_scx1_1_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn dmgpalette_during_m3_scx1_4_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/dmgpalette_during_m3/dmgpalette_during_m3_scx1_4.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/dmgpalette_during_m3/dmgpalette_during_m3_scx1_4_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn dmgpalette_during_m3_scx2_1_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/dmgpalette_during_m3/dmgpalette_during_m3_scx2_1.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/dmgpalette_during_m3/dmgpalette_during_m3_scx2_1_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn lycint_dmgpalette_during_m3_1_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/dmgpalette_during_m3/lycint_dmgpalette_during_m3_1.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/dmgpalette_during_m3/lycint_dmgpalette_during_m3_1_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn lycint_dmgpalette_during_m3_2_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/dmgpalette_during_m3/lycint_dmgpalette_during_m3_2.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/dmgpalette_during_m3/lycint_dmgpalette_during_m3_2_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn lycint_dmgpalette_during_m3_3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/dmgpalette_during_m3/lycint_dmgpalette_during_m3_3.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/dmgpalette_during_m3/lycint_dmgpalette_during_m3_3_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn lycint_dmgpalette_during_m3_4_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/dmgpalette_during_m3/lycint_dmgpalette_during_m3_4.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/dmgpalette_during_m3/lycint_dmgpalette_during_m3_4_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }
    }
}


mod enable_display {
    use super::*;


    #[test]
    #[ignore]
    fn enable_display_ly0_m0irq_trigger_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/enable_display_ly0_m0irq_trigger_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_display_ly0_m0irq_trigger_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/enable_display_ly0_m0irq_trigger_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_display_ly0_m2irq_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/enable_display_ly0_m2irq_dmg08_out0_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_display_ly0_m2irq_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/enable_display_ly0_m2irq_dmg08_out0_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_display_ly0_oambusy_read_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/enable_display_ly0_oambusy_read_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_display_ly0_oambusy_read_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/enable_display_ly0_oambusy_read_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_display_ly0_oambusy_read_2_out7_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/enable_display_ly0_oambusy_read_2_dmg08_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_display_ly0_oambusy_read_2_out7_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/enable_display_ly0_oambusy_read_2_dmg08_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_display_ly0_oambusy_read_ds_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/enable_display_ly0_oambusy_read_ds_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_display_ly0_oambusy_read_ds_2_out7_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/enable_display_ly0_oambusy_read_ds_2_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_display_ly0_sprites_m0stat_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/enable_display_ly0_sprites_m0stat_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_display_ly0_sprites_m0stat_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/enable_display_ly0_sprites_m0stat_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_display_ly0_sprites_m0stat_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/enable_display_ly0_sprites_m0stat_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_display_ly0_sprites_m0stat_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/enable_display_ly0_sprites_m0stat_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_display_ly0_wemaster_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/enable_display_ly0_wemaster_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_display_ly0_wemaster_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/enable_display_ly0_wemaster_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_display_ly0_wemaster_2_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/enable_display_ly0_wemaster_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_display_ly0_wemaster_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/enable_display_ly0_wemaster_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_ly_count_1_out99_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_ly_count_1_dmg08_cgb04c_out99.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("99".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_ly_count_1_out99_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_ly_count_1_dmg08_cgb04c_out99.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("99".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_ly_count_2_out9a_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_ly_count_2_dmg08_cgb04c_out9A.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("9A".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_ly_count_2_out9a_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_ly_count_2_dmg08_cgb04c_out9A.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("9A".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_ly_count_ds_1_out99_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_ly_count_ds_1_cgb04c_out99.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("99".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_ly_count_ds_2_out9a_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_ly_count_ds_2_cgb04c_out9A.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("9A".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m0irq_count_scx2_1_out90_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m0irq_count_scx2_1_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m0irq_count_scx2_1_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m0irq_count_scx2_1_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m0irq_count_scx2_2_out90_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m0irq_count_scx2_2_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m0irq_count_scx2_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m0irq_count_scx2_2_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m0irq_count_scx2_ds_1_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m0irq_count_scx2_ds_1_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m0irq_count_scx2_ds_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m0irq_count_scx2_ds_2_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m0irq_count_scx3_1_out90_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m0irq_count_scx3_1_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m0irq_count_scx3_1_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m0irq_count_scx3_1_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m0irq_count_scx3_2_out90_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m0irq_count_scx3_2_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m0irq_count_scx3_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m0irq_count_scx3_2_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m0irq_count_scx3_ds_1_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m0irq_count_scx3_ds_1_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m0irq_count_scx3_ds_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m0irq_count_scx3_ds_2_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m1stat_1_out80_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m1stat_1_dmg08_cgb04c_out80.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("80".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m1stat_1_out80_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m1stat_1_dmg08_cgb04c_out80.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("80".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m1stat_2_out81_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m1stat_2_dmg08_cgb04c_out81.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("81".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m1stat_2_out81_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m1stat_2_dmg08_cgb04c_out81.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("81".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m1stat_ds_1_out80_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m1stat_ds_1_cgb04c_out80.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("80".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m1stat_ds_2_out81_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m1stat_ds_2_cgb04c_out81.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("81".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m2irq_count_1_out98_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m2irq_count_1_dmg08_cgb04c_out98.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("98".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m2irq_count_1_out98_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m2irq_count_1_dmg08_cgb04c_out98.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("98".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m2irq_count_2_out91_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m2irq_count_2_dmg08_cgb04c_out91.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("91".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m2irq_count_2_out91_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m2irq_count_2_dmg08_cgb04c_out91.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("91".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m2irq_count_ds_1_out98_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m2irq_count_ds_1_cgb04c_out98.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("98".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m2irq_count_ds_2_out91_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m2irq_count_ds_2_cgb04c_out91.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("91".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m2stat_count_1_out91_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m2stat_count_1_dmg08_cgb04c_out91.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("91".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m2stat_count_1_out91_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m2stat_count_1_dmg08_cgb04c_out91.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("91".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m2stat_count_2_out90_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m2stat_count_2_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m2stat_count_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m2stat_count_2_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m2stat_count_ds_1_out91_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m2stat_count_ds_1_cgb04c_out91.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("91".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m2stat_count_ds_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m2stat_count_ds_2_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m3stat_count_1_out90_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m3stat_count_1_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m3stat_count_1_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m3stat_count_1_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m3stat_count_2_out90_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m3stat_count_2_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m3stat_count_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m3stat_count_2_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m3stat_count_ds_1_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m3stat_count_ds_1_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame0_m3stat_count_ds_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame0_m3stat_count_ds_2_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_ly_count_1_out99_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_ly_count_1_dmg08_cgb04c_out99.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("99".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_ly_count_1_out99_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_ly_count_1_dmg08_cgb04c_out99.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("99".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_ly_count_2_out9a_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_ly_count_2_dmg08_cgb04c_out9A.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("9A".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_ly_count_2_out9a_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_ly_count_2_dmg08_cgb04c_out9A.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("9A".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_ly_count_ds_1_out99_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_ly_count_ds_1_cgb04c_out99.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("99".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_ly_count_ds_2_out9a_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_ly_count_ds_2_cgb04c_out9A.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("9A".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m0irq_count_scx2_1_out90_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m0irq_count_scx2_1_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m0irq_count_scx2_1_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m0irq_count_scx2_1_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m0irq_count_scx2_2_out90_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m0irq_count_scx2_2_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m0irq_count_scx2_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m0irq_count_scx2_2_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m0irq_count_scx2_ds_1_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m0irq_count_scx2_ds_1_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m0irq_count_scx2_ds_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m0irq_count_scx2_ds_2_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m0irq_count_scx3_1_out90_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m0irq_count_scx3_1_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m0irq_count_scx3_1_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m0irq_count_scx3_1_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m0irq_count_scx3_2_out90_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m0irq_count_scx3_2_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m0irq_count_scx3_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m0irq_count_scx3_2_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m0irq_count_scx3_ds_1_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m0irq_count_scx3_ds_1_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m0irq_count_scx3_ds_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m0irq_count_scx3_ds_2_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m1stat_1_out80_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m1stat_1_dmg08_cgb04c_out80.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("80".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m1stat_1_out80_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m1stat_1_dmg08_cgb04c_out80.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("80".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m1stat_2_out81_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m1stat_2_dmg08_cgb04c_out81.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("81".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m1stat_2_out81_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m1stat_2_dmg08_cgb04c_out81.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("81".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m1stat_ds_1_out80_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m1stat_ds_1_cgb04c_out80.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("80".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m1stat_ds_2_out81_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m1stat_ds_2_cgb04c_out81.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("81".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m2irq_count_1_out98_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m2irq_count_1_dmg08_cgb04c_out98.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("98".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m2irq_count_1_out98_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m2irq_count_1_dmg08_cgb04c_out98.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("98".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m2irq_count_2_out91_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m2irq_count_2_dmg08_cgb04c_out91.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("91".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m2irq_count_2_out91_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m2irq_count_2_dmg08_cgb04c_out91.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("91".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m2irq_count_ds_1_out98_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m2irq_count_ds_1_cgb04c_out98.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("98".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m2irq_count_ds_2_out91_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m2irq_count_ds_2_cgb04c_out91.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("91".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m2stat_count_1_out91_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m2stat_count_1_dmg08_cgb04c_out91.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("91".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m2stat_count_1_out91_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m2stat_count_1_dmg08_cgb04c_out91.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("91".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m2stat_count_2_out90_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m2stat_count_2_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m2stat_count_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m2stat_count_2_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m2stat_count_ds_1_out91_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m2stat_count_ds_1_cgb04c_out91.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("91".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m2stat_count_ds_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m2stat_count_ds_2_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m3stat_count_1_out90_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m3stat_count_1_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m3stat_count_1_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m3stat_count_1_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m3stat_count_2_out90_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m3stat_count_2_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m3stat_count_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m3stat_count_2_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m3stat_count_ds_1_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m3stat_count_ds_1_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame1_m3stat_count_ds_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame1_m3stat_count_ds_2_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame2_m0irq_count_scx2_1_out90_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame2_m0irq_count_scx2_1_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame2_m0irq_count_scx2_1_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame2_m0irq_count_scx2_1_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame2_m0irq_count_scx2_2_out90_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame2_m0irq_count_scx2_2_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame2_m0irq_count_scx2_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame2_m0irq_count_scx2_2_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame2_m0irq_count_scx3_1_out90_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame2_m0irq_count_scx3_1_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame2_m0irq_count_scx3_1_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame2_m0irq_count_scx3_1_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame2_m0irq_count_scx3_2_out90_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame2_m0irq_count_scx3_2_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn frame2_m0irq_count_scx3_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/frame2_m0irq_count_scx3_2_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lcdcenable_lyc0irq_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/lcdcenable_lyc0irq_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lcdcenable_lyc0irq_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/lcdcenable_lyc0irq_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lcdcenable_lyc0irq_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/lcdcenable_lyc0irq_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lcdcenable_lyc0irq_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/lcdcenable_lyc0irq_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_cgbpr_1_out55_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_cgbpr_1_cgb04c_out55.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("55".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_cgbpr_2_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_cgbpr_2_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_cgbpr_ds_1_out55_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_cgbpr_ds_1_cgb04c_out55.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("55".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_cgbpr_ds_2_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_cgbpr_ds_2_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_cgbpw_1_outaa_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_cgbpw_1_cgb04c_outAA.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("AA".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_cgbpw_2_out55_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_cgbpw_2_cgb04c_out55.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("55".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_cgbpw_ds_1_outaa_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_cgbpw_ds_1_cgb04c_outAA.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("AA".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_cgbpw_ds_2_out55_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_cgbpw_ds_2_cgb04c_out55.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("55".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_oamw_1_outaa_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_oamw_1_dmg08_cgb04c_outAA.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("AA".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_oamw_1_outaa_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_oamw_1_dmg08_cgb04c_outAA.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("AA".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_oamw_2_out55_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_oamw_2_dmg08_cgb04c_out55.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("55".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_oamw_2_out55_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_oamw_2_dmg08_cgb04c_out55.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("55".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_oamw_ds_1_outaa_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_oamw_ds_1_cgb04c_outAA.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("AA".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_oamw_ds_2_out55_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_oamw_ds_2_cgb04c_out55.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("55".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_scx7_m3stat_scx0_1_out87_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_scx7_m3stat_scx0_1_dmg08_cgb04c_out87.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("87".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_scx7_m3stat_scx0_1_out87_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_scx7_m3stat_scx0_1_dmg08_cgb04c_out87.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("87".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_scx7_m3stat_scx0_2_out87_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_scx7_m3stat_scx0_2_dmg08_out87_cgb04c_out84.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("87".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_scx7_m3stat_scx0_2_out84_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_scx7_m3stat_scx0_2_dmg08_out87_cgb04c_out84.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("84".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_scx7_m3stat_scx0_3_out84_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_scx7_m3stat_scx0_3_dmg08_cgb04c_out84.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("84".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_scx7_m3stat_scx0_3_out84_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_scx7_m3stat_scx0_3_dmg08_cgb04c_out84.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("84".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_scx7_m3stat_scx1_1_out87_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_scx7_m3stat_scx1_1_dmg08_cgb04c_out87.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("87".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_scx7_m3stat_scx1_1_out87_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_scx7_m3stat_scx1_1_dmg08_cgb04c_out87.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("87".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_scx7_m3stat_scx1_2_out84_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_scx7_m3stat_scx1_2_dmg08_cgb04c_out84.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("84".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_scx7_m3stat_scx1_2_out84_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_scx7_m3stat_scx1_2_dmg08_cgb04c_out84.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("84".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_scx7_m3stat_scx3_1_out87_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_scx7_m3stat_scx3_1_dmg08_cgb04c_out87.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("87".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_scx7_m3stat_scx3_1_out87_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_scx7_m3stat_scx3_1_dmg08_cgb04c_out87.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("87".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_scx7_m3stat_scx3_2_out84_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_scx7_m3stat_scx3_2_dmg08_cgb04c_out84.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("84".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_scx7_m3stat_scx3_2_out84_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_scx7_m3stat_scx3_2_dmg08_cgb04c_out84.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("84".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_vramr_1_out55_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_vramr_1_dmg08_cgb04c_out55.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("55".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_vramr_1_out55_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_vramr_1_dmg08_cgb04c_out55.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("55".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_vramr_2_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_vramr_2_dmg08_outFF_cgb04c_out55.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_vramr_2_out55_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_vramr_2_dmg08_outFF_cgb04c_out55.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("55".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_vramr_3_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_vramr_3_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_vramr_3_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_vramr_3_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_vramr_ds_1_out55_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_vramr_ds_1_cgb04c_out55.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("55".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_vramr_ds_2_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_vramr_ds_2_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_vramw_1_outaa_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_vramw_1_dmg08_cgb04c_outAA.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("AA".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_vramw_1_outaa_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_vramw_1_dmg08_cgb04c_outAA.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("AA".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_vramw_2_out55_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_vramw_2_dmg08_out55_cgb04c_outAA.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("55".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_vramw_2_outaa_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_vramw_2_dmg08_out55_cgb04c_outAA.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("AA".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_vramw_3_out55_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_vramw_3_dmg08_cgb04c_out55.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("55".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_late_vramw_3_out55_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_late_vramw_3_dmg08_cgb04c_out55.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("55".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_m0irq_scx0_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_m0irq_scx0_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_m0irq_scx0_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_m0irq_scx0_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_m0irq_scx0_2_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_m0irq_scx0_2_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_m0irq_scx0_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_m0irq_scx0_2_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_m0irq_scx0_ds_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_m0irq_scx0_ds_1_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_m0irq_scx0_ds_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_m0irq_scx0_ds_2_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_m0irq_scx1_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_m0irq_scx1_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_m0irq_scx1_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_m0irq_scx1_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_m0irq_scx1_2_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_m0irq_scx1_2_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_m0irq_scx1_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_m0irq_scx1_2_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_m0irq_scx1_ds_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_m0irq_scx1_ds_1_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly0_m0irq_scx1_ds_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly0_m0irq_scx1_ds_2_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly1_late_cgbpw_1_outaa_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly1_late_cgbpw_1_cgb04c_outAA.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("AA".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly1_late_cgbpw_2_out55_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly1_late_cgbpw_2_cgb04c_out55.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("55".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly_out00_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/ly_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn nextstat_1_out84_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/nextstat_1_dmg08_cgb04c_out84.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("84".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn nextstat_1_out84_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/nextstat_1_dmg08_cgb04c_out84.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("84".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn nextstat_2_out87_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/nextstat_2_dmg08_cgb04c_out87.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("87".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn nextstat_2_out87_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/nextstat_2_dmg08_cgb04c_out87.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("87".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn stat_out84_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/stat_dmg08_cgb04c_out84.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("84".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn stat_out84_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/enable_display/stat_dmg08_cgb04c_out84.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("84".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod halt {
    use super::*;


    #[test]
    #[ignore]
    fn ifandie_ei_halt_m2int_m0stat_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/ifandie_ei_halt_m2int_m0stat_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ifandie_ei_halt_m2int_m0stat_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/ifandie_ei_halt_m2int_m0stat_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ifandie_ei_halt_m2int_m0stat_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/ifandie_ei_halt_m2int_m0stat_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ifandie_ei_halt_m2int_m0stat_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/ifandie_ei_halt_m2int_m0stat_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ifandie_ei_halt_sra_out0a_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/ifandie_ei_halt_sra_dmg08_cgb04c_out0A.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0A".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ifandie_ei_halt_sra_out0a_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/ifandie_ei_halt_sra_dmg08_cgb04c_out0A.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0A".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx2_1a_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx2_1a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx2_1a_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx2_1a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx2_1b_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx2_1b_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx2_1b_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx2_1b_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx2_2a_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx2_2a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx2_2a_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx2_2a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx2_2b_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx2_2b_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx2_2b_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx2_2b_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx2_3a_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx2_3a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx2_3a_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx2_3a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx2_3b_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx2_3b_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx2_3b_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx2_3b_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx2_4a_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx2_4a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx2_4a_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx2_4a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx2_4b_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx2_4b_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx2_4b_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx2_4b_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx3_1a_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx3_1a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx3_1a_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx3_1a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx3_1b_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx3_1b_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx3_1b_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx3_1b_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx3_1c_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx3_1c_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx3_1c_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx3_1c_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx3_2a_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx3_2a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx3_2a_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx3_2a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx3_2b_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx3_2b_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx3_2b_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx3_2b_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx3_3a_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx3_3a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx3_3a_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx3_3a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx3_3b_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx3_3b_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx3_3b_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx3_3b_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx3_3c_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx3_3c_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx3_3c_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx3_3c_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx3_4a_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx3_4a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx3_4a_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx3_4a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx3_4b_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx3_4b_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx3_4b_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx3_4b_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx3_4c_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx3_4c_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0int_halt_m0stat_scx3_4c_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0int_halt_m0stat_scx3_4c_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_dec_scx2_1_out7_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_dec_scx2_1_dmg08_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_dec_scx2_1_out7_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_dec_scx2_1_dmg08_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_dec_scx2_2_out6_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_dec_scx2_2_dmg08_cgb04c_out6.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("6".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_dec_scx2_2_out6_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_dec_scx2_2_dmg08_cgb04c_out6.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("6".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_dec_scx3_1_out7_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_dec_scx3_1_dmg08_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_dec_scx3_1_out7_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_dec_scx3_1_dmg08_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_dec_scx3_2_out6_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_dec_scx3_2_dmg08_cgb04c_out6.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("6".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_dec_scx3_2_out6_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_dec_scx3_2_dmg08_cgb04c_out6.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("6".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx2_1a_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx2_1a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx2_1a_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx2_1a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx2_1b_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx2_1b_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx2_1b_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx2_1b_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx2_2a_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx2_2a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx2_2a_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx2_2a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx2_2b_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx2_2b_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx2_2b_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx2_2b_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx2_3a_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx2_3a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx2_3a_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx2_3a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx2_3b_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx2_3b_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx2_3b_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx2_3b_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx2_4a_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx2_4a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx2_4a_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx2_4a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx2_4b_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx2_4b_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx2_4b_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx2_4b_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx3_1a_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx3_1a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx3_1a_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx3_1a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx3_1b_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx3_1b_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx3_1b_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx3_1b_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx3_1c_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx3_1c_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx3_1c_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx3_1c_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx3_2a_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx3_2a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx3_2a_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx3_2a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx3_2b_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx3_2b_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx3_2b_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx3_2b_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx3_3a_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx3_3a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx3_3a_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx3_3a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx3_3b_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx3_3b_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx3_3b_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx3_3b_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx3_4a_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx3_4a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx3_4a_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx3_4a_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx3_4b_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx3_4b_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_halt_m0stat_scx3_4b_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/late_m0irq_halt_m0stat_scx3_4b_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycirq_m2stat_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/lycirq_m2stat_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycirq_m2stat_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/lycirq_m2stat_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycirq_m2stat_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/lycirq_m2stat_2_dmg08_out2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycirq_m2stat_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/lycirq_m2stat_2_dmg08_out2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycirq_m2stat_3_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/lycirq_m2stat_3_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycirq_m2stat_3_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/lycirq_m2stat_3_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx2_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0int_m0stat_scx2_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx2_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0int_m0stat_scx2_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx2_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0int_m0stat_scx2_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx2_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0int_m0stat_scx2_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx2_ds_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0int_m0stat_scx2_ds_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx2_ds_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0int_m0stat_scx2_ds_2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx3_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0int_m0stat_scx3_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx3_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0int_m0stat_scx3_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx3_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0int_m0stat_scx3_2_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx3_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0int_m0stat_scx3_2_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx3_3_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0int_m0stat_scx3_3_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx3_3_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0int_m0stat_scx3_3_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx3_ds_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0int_m0stat_scx3_ds_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx3_ds_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0int_m0stat_scx3_ds_2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx4_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0int_m0stat_scx4_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx4_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0int_m0stat_scx4_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx4_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0int_m0stat_scx4_2_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx4_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0int_m0stat_scx4_2_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx4_3_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0int_m0stat_scx4_3_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx4_3_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0int_m0stat_scx4_3_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx5_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0int_m0stat_scx5_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx5_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0int_m0stat_scx5_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx5_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0int_m0stat_scx5_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx5_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0int_m0stat_scx5_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_m0stat_scx2_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0irq_m0stat_scx2_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_m0stat_scx2_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0irq_m0stat_scx2_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_m0stat_scx2_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0irq_m0stat_scx2_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_m0stat_scx2_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0irq_m0stat_scx2_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_m0stat_scx2_ds_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0irq_m0stat_scx2_ds_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_m0stat_scx2_ds_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0irq_m0stat_scx2_ds_2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_m0stat_scx3_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0irq_m0stat_scx3_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_m0stat_scx3_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0irq_m0stat_scx3_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_m0stat_scx3_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0irq_m0stat_scx3_2_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_m0stat_scx3_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0irq_m0stat_scx3_2_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_m0stat_scx3_3_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0irq_m0stat_scx3_3_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_m0stat_scx3_3_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0irq_m0stat_scx3_3_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_m0stat_scx3_ds_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0irq_m0stat_scx3_ds_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_m0stat_scx3_ds_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0irq_m0stat_scx3_ds_2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_m0stat_scx4_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0irq_m0stat_scx4_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_m0stat_scx4_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0irq_m0stat_scx4_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_m0stat_scx4_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0irq_m0stat_scx4_2_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_m0stat_scx4_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0irq_m0stat_scx4_2_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_m0stat_scx4_3_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0irq_m0stat_scx4_3_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_m0stat_scx4_3_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0irq_m0stat_scx4_3_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_m0stat_scx5_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0irq_m0stat_scx5_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_m0stat_scx5_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0irq_m0stat_scx5_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_m0stat_scx5_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0irq_m0stat_scx5_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_m0stat_scx5_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m0irq_m0stat_scx5_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1int_ly_1_out90_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m1int_ly_1_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1int_ly_1_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m1int_ly_1_dmg08_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1int_ly_2_out90_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m1int_ly_2_dmg08_out90_cgb04c_out91.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1int_ly_2_out91_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m1int_ly_2_dmg08_out90_cgb04c_out91.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("91".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1int_ly_3_out91_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m1int_ly_3_dmg08_cgb04c_out91.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("91".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1int_ly_3_out91_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/m1int_ly_3_dmg08_cgb04c_out91.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("91".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn noime_ifandie_halt_lda_3c_out3f_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/noime_ifandie_halt_lda_3c_dmg08_cgb04c_out3F.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3F".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn noime_ifandie_halt_lda_3c_out3f_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/noime_ifandie_halt_lda_3c_dmg08_cgb04c_out3F.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3F".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn noime_ifandie_halt_sra_outf1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/noime_ifandie_halt_sra_dmg08_cgb04c_outF1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn noime_ifandie_halt_sra_outf1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/noime_ifandie_halt_sra_dmg08_cgb04c_outF1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn noime_ifandie_m2int_m0stat_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/noime_ifandie_m2int_m0stat_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn noime_ifandie_m2int_m0stat_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/noime_ifandie_m2int_m0stat_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn noime_ifandie_m2int_m0stat_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/noime_ifandie_m2int_m0stat_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn noime_ifandie_m2int_m0stat_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/noime_ifandie_m2int_m0stat_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn noime_m2irq_m0stat_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/noime_m2irq_m0stat_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn noime_m2irq_m0stat_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/noime_m2irq_m0stat_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn noime_m2irq_m0stat_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/noime_m2irq_m0stat_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn noime_m2irq_m0stat_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/halt/noime_m2irq_m0stat_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod irq_precedence {
    use super::*;


    #[test]
    #[ignore]
    fn if_and_ie_0_if_1_oute4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/if_and_ie_0_if_1_dmg08_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn if_and_ie_0_if_1_oute4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/if_and_ie_0_if_1_dmg08_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn if_and_ie_0_if_2_oute1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/if_and_ie_0_if_2_dmg08_cgb04c_outE1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn if_and_ie_0_if_2_oute1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/if_and_ie_0_if_2_dmg08_cgb04c_outE1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn if_and_ie_0_vector_1_out00_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/if_and_ie_0_vector_1_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn if_and_ie_0_vector_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/if_and_ie_0_vector_1_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn if_and_ie_0_vector_2_out50_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/if_and_ie_0_vector_2_dmg08_cgb04c_out50.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("50".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn if_and_ie_0_vector_2_out50_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/if_and_ie_0_vector_2_dmg08_cgb04c_out50.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("50".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn if_and_ie_0_vector_3_out00_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/if_and_ie_0_vector_3_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn if_and_ie_0_vector_3_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/if_and_ie_0_vector_3_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn if_and_ie_0_vector_4_out50_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/if_and_ie_0_vector_4_dmg08_cgb04c_out50.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("50".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn if_and_ie_0_vector_4_out50_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/if_and_ie_0_vector_4_dmg08_cgb04c_out50.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("50".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_if_via_sp_if_1_outfd_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_if_via_sp_if_1_dmg08_cgb04c_outFD.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FD".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_if_via_sp_if_1_outfd_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_if_via_sp_if_1_dmg08_cgb04c_outFD.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FD".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_if_via_sp_if_2_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_if_via_sp_if_2_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_if_via_sp_if_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_if_via_sp_if_2_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_retrigger_1_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_m0irq_retrigger_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_retrigger_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_m0irq_retrigger_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_retrigger_2_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_m0irq_retrigger_2_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_retrigger_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_m0irq_retrigger_2_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_retrigger_ds_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_m0irq_retrigger_ds_1_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_retrigger_ds_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_m0irq_retrigger_ds_2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_retrigger_scx1_1_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_m0irq_retrigger_scx1_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_retrigger_scx1_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_m0irq_retrigger_scx1_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_retrigger_scx1_2_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_m0irq_retrigger_scx1_2_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_retrigger_scx1_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_m0irq_retrigger_scx1_2_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_retrigger_scx1_ds_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_m0irq_retrigger_scx1_ds_1_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_retrigger_scx1_ds_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_m0irq_retrigger_scx1_ds_2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_vs_tima_scx2_1_out4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_m0irq_vs_tima_scx2_1_dmg08_cgb04c_out4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_vs_tima_scx2_1_out4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_m0irq_vs_tima_scx2_1_dmg08_cgb04c_out4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_vs_tima_scx2_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_m0irq_vs_tima_scx2_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_vs_tima_scx2_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_m0irq_vs_tima_scx2_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_vs_tima_scx2_halt_1_out4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_m0irq_vs_tima_scx2_halt_1_dmg08_cgb04c_out4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_vs_tima_scx2_halt_1_out4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_m0irq_vs_tima_scx2_halt_1_dmg08_cgb04c_out4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_vs_tima_scx2_halt_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_m0irq_vs_tima_scx2_halt_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_vs_tima_scx2_halt_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_m0irq_vs_tima_scx2_halt_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_vs_tima_scx3_1_out4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_m0irq_vs_tima_scx3_1_dmg08_cgb04c_out4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_vs_tima_scx3_1_out4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_m0irq_vs_tima_scx3_1_dmg08_cgb04c_out4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_vs_tima_scx3_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_m0irq_vs_tima_scx3_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_vs_tima_scx3_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_m0irq_vs_tima_scx3_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_vs_tima_scx3_halt_1_out4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_m0irq_vs_tima_scx3_halt_1_dmg08_cgb04c_out4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_vs_tima_scx3_halt_1_out4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_m0irq_vs_tima_scx3_halt_1_dmg08_cgb04c_out4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_vs_tima_scx3_halt_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_m0irq_vs_tima_scx3_halt_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m0irq_vs_tima_scx3_halt_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/irq_precedence/late_m0irq_vs_tima_scx3_halt_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod lcd_offset {
    use super::*;


    #[test]
    #[ignore]
    fn offset1_lyc8fint_m1irq_ds_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc8fint_m1irq_ds_1_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc8fint_m1irq_ds_2_oute3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc8fint_m1irq_ds_2_cgb04c_outE3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc8fint_m1stat_1_outc4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc8fint_m1stat_1_cgb04c_outC4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc8fint_m1stat_2_outc1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc8fint_m1stat_2_cgb04c_outC1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc8fint_m1stat_ds_1_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc8fint_m1stat_ds_1_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc8fint_m1stat_ds_2_outc1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc8fint_m1stat_ds_2_cgb04c_outC1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc98int_ly_count_1_out99_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc98int_ly_count_1_cgb04c_out99.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("99".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc98int_ly_count_2_out9a_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc98int_ly_count_2_cgb04c_out9A.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("9A".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc98int_ly_count_ds_1_out99_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc98int_ly_count_ds_1_cgb04c_out99.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("99".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc98int_ly_count_ds_2_out9a_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc98int_ly_count_ds_2_cgb04c_out9A.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("9A".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc98int_ly_count_ds_3_out9a_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc98int_ly_count_ds_3_cgb04c_out9A.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("9A".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc99int_m0irq_count_scx1_ds_1_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc99int_m0irq_count_scx1_ds_1_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc99int_m0irq_count_scx1_ds_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc99int_m0irq_count_scx1_ds_2_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc99int_m0irq_count_scx2_ds_1_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc99int_m0irq_count_scx2_ds_1_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc99int_m0irq_count_scx2_ds_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc99int_m0irq_count_scx2_ds_2_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc99int_m0stat_count_scx1_ds_1_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc99int_m0stat_count_scx1_ds_1_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc99int_m0stat_count_scx1_ds_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc99int_m0stat_count_scx1_ds_2_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc99int_m0stat_count_scx2_1_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc99int_m0stat_count_scx2_1_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc99int_m0stat_count_scx2_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc99int_m0stat_count_scx2_2_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc99int_m0stat_count_scx2_ds_1_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc99int_m0stat_count_scx2_ds_1_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc99int_m0stat_count_scx2_ds_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc99int_m0stat_count_scx2_ds_2_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc99int_m0stat_count_scx3_1_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc99int_m0stat_count_scx3_1_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc99int_m0stat_count_scx3_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc99int_m0stat_count_scx3_2_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc99int_m2irq_count_1_out98_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc99int_m2irq_count_1_cgb04c_out98.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("98".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc99int_m2irq_count_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc99int_m2irq_count_2_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc99int_m2irq_count_ds_1_out98_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc99int_m2irq_count_ds_1_cgb04c_out98.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("98".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc99int_m2irq_count_ds_2_out91_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc99int_m2irq_count_ds_2_cgb04c_out91.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("91".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc99int_m2stat_count_1_out91_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc99int_m2stat_count_1_cgb04c_out91.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("91".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc99int_m2stat_count_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc99int_m2stat_count_2_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc99int_m2stat_count_ds_1_out91_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc99int_m2stat_count_ds_1_cgb04c_out91.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("91".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc99int_m2stat_count_ds_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc99int_m2stat_count_ds_2_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc99int_m3stat_count_ds_1_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc99int_m3stat_count_ds_1_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset1_lyc99int_m3stat_count_ds_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset1_lyc99int_m3stat_count_ds_2_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset2_lyc8fint_m1irq_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset2_lyc8fint_m1irq_1_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset2_lyc8fint_m1irq_2_oute3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset2_lyc8fint_m1irq_2_cgb04c_outE3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset2_lyc8fint_m1stat_1_outc4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset2_lyc8fint_m1stat_1_cgb04c_outC4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset2_lyc8fint_m1stat_2_outc1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset2_lyc8fint_m1stat_2_cgb04c_outC1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset2_lyc98int_ly_count_1_out99_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset2_lyc98int_ly_count_1_cgb04c_out99.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("99".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset2_lyc98int_ly_count_2_out9a_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset2_lyc98int_ly_count_2_cgb04c_out9A.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("9A".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset2_lyc98int_ly_count_3_out9a_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset2_lyc98int_ly_count_3_cgb04c_out9A.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("9A".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset2_lyc99int_m0stat_count_scx1_1_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset2_lyc99int_m0stat_count_scx1_1_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset2_lyc99int_m0stat_count_scx1_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset2_lyc99int_m0stat_count_scx1_2_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset2_lyc99int_m0stat_count_scx2_1_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset2_lyc99int_m0stat_count_scx2_1_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset2_lyc99int_m0stat_count_scx2_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset2_lyc99int_m0stat_count_scx2_2_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset2_lyc99int_m2irq_count_1_out98_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset2_lyc99int_m2irq_count_1_cgb04c_out98.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("98".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset2_lyc99int_m2irq_count_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset2_lyc99int_m2irq_count_2_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset3_lyc8fint_m1irq_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset3_lyc8fint_m1irq_1_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset3_lyc8fint_m1irq_2_oute3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset3_lyc8fint_m1irq_2_cgb04c_outE3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset3_lyc8fint_m1stat_1_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset3_lyc8fint_m1stat_1_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset3_lyc8fint_m1stat_2_outc1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset3_lyc8fint_m1stat_2_cgb04c_outC1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset3_lyc98int_ly_count_1_out99_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset3_lyc98int_ly_count_1_cgb04c_out99.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("99".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset3_lyc98int_ly_count_2_out9a_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset3_lyc98int_ly_count_2_cgb04c_out9A.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("9A".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset3_lyc99int_m0stat_count_scx0_1_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset3_lyc99int_m0stat_count_scx0_1_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset3_lyc99int_m0stat_count_scx0_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset3_lyc99int_m0stat_count_scx0_2_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset3_lyc99int_m0stat_count_scx1_1_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset3_lyc99int_m0stat_count_scx1_1_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset3_lyc99int_m0stat_count_scx1_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset3_lyc99int_m0stat_count_scx1_2_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset3_lyc99int_m2irq_count_1_out98_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset3_lyc99int_m2irq_count_1_cgb04c_out98.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("98".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset3_lyc99int_m2irq_count_2_out91_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset3_lyc99int_m2irq_count_2_cgb04c_out91.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("91".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset3_lyc99int_m2stat_count_1_out91_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset3_lyc99int_m2stat_count_1_cgb04c_out91.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("91".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset3_lyc99int_m2stat_count_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset3_lyc99int_m2stat_count_2_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset3_lyc99int_m3stat_count_1_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset3_lyc99int_m3stat_count_1_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn offset3_lyc99int_m3stat_count_2_out90_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcd_offset/offset3_lyc99int_m3stat_count_2_cgb04c_out90.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("90".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod lcdirq_precedence {
    use super::*;


    #[test]
    #[ignore]
    fn lcdirqprecedence_lycirq_ly44_lcdstat58_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/lcdirqprecedence_lycirq_ly44_lcdstat58_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lcdirqprecedence_lycirq_ly44_lcdstat58_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/lcdirqprecedence_lycirq_ly44_lcdstat58_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lcdirqprecedence_lycirq_ly44_lcdstat68_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/lcdirqprecedence_lycirq_ly44_lcdstat68_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lcdirqprecedence_lycirq_ly44_lcdstat68_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/lcdirqprecedence_lycirq_ly44_lcdstat68_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lcdirqprecedence_lycirq_ly90_lcdstat68_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/lcdirqprecedence_lycirq_ly90_lcdstat68_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lcdirqprecedence_lycirq_ly90_lcdstat68_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/lcdirqprecedence_lycirq_ly90_lcdstat68_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lcdirqprecedence_lycirq_ly91_lcdstat68_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/lcdirqprecedence_lycirq_ly91_lcdstat68_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lcdirqprecedence_lycirq_ly91_lcdstat68_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/lcdirqprecedence_lycirq_ly91_lcdstat68_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lcdirqprecedence_m0irq_ly00_lcdstat48_lyc00_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/lcdirqprecedence_m0irq_ly00_lcdstat48_lyc00_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lcdirqprecedence_m0irq_ly00_lcdstat48_lyc00_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/lcdirqprecedence_m0irq_ly00_lcdstat48_lyc00_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lcdirqprecedence_m0irq_ly00_lcdstat48_lyc99_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/lcdirqprecedence_m0irq_ly00_lcdstat48_lyc99_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lcdirqprecedence_m0irq_ly00_lcdstat48_lyc99_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/lcdirqprecedence_m0irq_ly00_lcdstat48_lyc99_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lcdirqprecedence_m0irq_ly00_lcdstat58_lyc00_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/lcdirqprecedence_m0irq_ly00_lcdstat58_lyc00_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lcdirqprecedence_m0irq_ly00_lcdstat58_lyc00_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/lcdirqprecedence_m0irq_ly00_lcdstat58_lyc00_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lcdirqprecedence_m0irq_ly00_lcdstat58_lyc99_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/lcdirqprecedence_m0irq_ly00_lcdstat58_lyc99_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lcdirqprecedence_m0irq_ly00_lcdstat58_lyc99_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/lcdirqprecedence_m0irq_ly00_lcdstat58_lyc99_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycirq_ly00_lcdstat50_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/lycirq_ly00_lcdstat50_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycirq_ly00_lcdstat50_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/lycirq_ly00_lcdstat50_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycirq_ly44_lcdstat48_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/lycirq_ly44_lcdstat48_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycirq_ly44_lcdstat48_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/lycirq_ly44_lcdstat48_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycirq_ly44_lcdstat50_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/lycirq_ly44_lcdstat50_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycirq_ly44_lcdstat50_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/lycirq_ly44_lcdstat50_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycirq_ly8f_lcdstat50_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/lycirq_ly8f_lcdstat50_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycirq_ly8f_lcdstat50_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/lycirq_ly8f_lcdstat50_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycirq_ly91_lcdstat50_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/lycirq_ly91_lcdstat50_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycirq_ly91_lcdstat50_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/lycirq_ly91_lcdstat50_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycirq_ly99_lcdstat50_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/lycirq_ly99_lcdstat50_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycirq_ly99_lcdstat50_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/lycirq_ly99_lcdstat50_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_ly00_lcdstat18_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m0irq_ly00_lcdstat18_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_ly00_lcdstat18_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m0irq_ly00_lcdstat18_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_ly44_lcdstat18_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m0irq_ly44_lcdstat18_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_ly44_lcdstat18_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m0irq_ly44_lcdstat18_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_ly44_lcdstat28_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m0irq_ly44_lcdstat28_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_ly44_lcdstat28_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m0irq_ly44_lcdstat28_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_ly44_lcdstat48_lyc43_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m0irq_ly44_lcdstat48_lyc43_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_ly44_lcdstat48_lyc43_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m0irq_ly44_lcdstat48_lyc43_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_ly44_lcdstat48_lyc44_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m0irq_ly44_lcdstat48_lyc44_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_ly44_lcdstat48_lyc44_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m0irq_ly44_lcdstat48_lyc44_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_ly44_lcdstat48_lyc45_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m0irq_ly44_lcdstat48_lyc45_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_ly44_lcdstat48_lyc45_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m0irq_ly44_lcdstat48_lyc45_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_ly8f_lcdstat18_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m0irq_ly8f_lcdstat18_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0irq_ly8f_lcdstat18_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m0irq_ly8f_lcdstat18_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_lcdstat18_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m1irq_lcdstat18_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_lcdstat18_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m1irq_lcdstat18_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_lcdstat30_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m1irq_lcdstat30_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_lcdstat30_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m1irq_lcdstat30_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_lcdstat50_lyc8f_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m1irq_lcdstat50_lyc8f_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_lcdstat50_lyc8f_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m1irq_lcdstat50_lyc8f_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_lcdstat50_lyc90_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m1irq_lcdstat50_lyc90_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_lcdstat50_lyc90_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m1irq_lcdstat50_lyc90_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_lcdstat50_lyc91_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m1irq_lcdstat50_lyc91_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_lcdstat50_lyc91_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m1irq_lcdstat50_lyc91_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2irq_ly00_lcdstat28_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m2irq_ly00_lcdstat28_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2irq_ly00_lcdstat28_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m2irq_ly00_lcdstat28_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2irq_ly00_lcdstat30_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m2irq_ly00_lcdstat30_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2irq_ly00_lcdstat30_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m2irq_ly00_lcdstat30_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2irq_ly44_lcdstat30_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m2irq_ly44_lcdstat30_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2irq_ly44_lcdstat30_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m2irq_ly44_lcdstat30_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2irq_ly8f_lcdstat28_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m2irq_ly8f_lcdstat28_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2irq_ly8f_lcdstat28_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m2irq_ly8f_lcdstat28_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2irq_ly8f_lcdstat30_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m2irq_ly8f_lcdstat30_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2irq_ly8f_lcdstat30_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lcdirq_precedence/m2irq_ly8f_lcdstat30_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod ly0 {
    use super::*;


    #[test]
    #[ignore]
    fn lycint152_ly0stat_1_outc1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_ly0stat_1_dmg08_cgb04c_outC1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_ly0stat_1_outc1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_ly0stat_1_dmg08_cgb04c_outC1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_ly0stat_2_outc0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_ly0stat_2_dmg08_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_ly0stat_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_ly0stat_2_dmg08_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_ly0stat_3_outc2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_ly0stat_3_dmg08_cgb04c_outC2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_ly0stat_3_outc2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_ly0stat_3_dmg08_cgb04c_outC2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_ly0stat_ds_1_outc1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_ly0stat_ds_1_cgb04c_outC1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_ly0stat_ds_2_outc1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_ly0stat_ds_2_cgb04c_outC1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_ly0stat_ds_3_outc2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_ly0stat_ds_3_cgb04c_outC2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_ly153_1_out98_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_ly153_1_dmg08_cgb04c_out98.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("98".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_ly153_1_out98_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_ly153_1_dmg08_cgb04c_out98.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("98".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_ly153_2_out99_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_ly153_2_dmg08_cgb04c_out99.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("99".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_ly153_2_out99_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_ly153_2_dmg08_cgb04c_out99.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("99".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_ly153_3_out00_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_ly153_3_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_ly153_3_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_ly153_3_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_ly153_ds_1_out98_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_ly153_ds_1_cgb04c_out98.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("98".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_ly153_ds_2_out99_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_ly153_ds_2_cgb04c_out99.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("99".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_ly153_ds_3_out99_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_ly153_ds_3_cgb04c_out99.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("99".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_ly153_ds_4_out99_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_ly153_ds_4_cgb04c_out99.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("99".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_ly153_ds_5_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_ly153_ds_5_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_ly1_m2irq_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_ly1_m2irq_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_ly1_m2irq_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_ly1_m2irq_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_ly1_m2irq_2_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_ly1_m2irq_2_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_ly1_m2irq_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_ly1_m2irq_2_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc0flag_1_outc1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc0flag_1_dmg08_cgb04c_outC1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc0flag_1_outc1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc0flag_1_dmg08_cgb04c_outC1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc0flag_2_outc5_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc0flag_2_dmg08_cgb04c_outC5.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc0flag_2_outc5_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc0flag_2_dmg08_cgb04c_outC5.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc0flag_3_outc4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc0flag_3_dmg08_cgb04c_outC4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc0flag_3_outc4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc0flag_3_dmg08_cgb04c_outC4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc0flag_4_outc0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc0flag_4_dmg08_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc0flag_4_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc0flag_4_dmg08_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc0flag_ds_1_outc1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc0flag_ds_1_cgb04c_outC1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc0flag_ds_2_outc5_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc0flag_ds_2_cgb04c_outC5.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc0flag_ds_3_outc4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc0flag_ds_3_cgb04c_outC4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc0flag_ds_4_outc2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc0flag_ds_4_cgb04c_outC2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc0irq_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc0irq_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc0irq_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc0irq_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc0irq_2_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc0irq_2_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc0irq_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc0irq_2_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc0irq_ds_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc0irq_ds_1_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc0irq_ds_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc0irq_ds_2_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc0irq_ifw_1_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc0irq_ifw_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc0irq_ifw_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc0irq_ifw_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc0irq_ifw_2_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc0irq_ifw_2_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc0irq_ifw_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc0irq_ifw_2_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc0irq_ifw_ds_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc0irq_ifw_ds_1_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc0irq_ifw_ds_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc0irq_ifw_ds_2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc0irq_late_retrigger_1_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc0irq_late_retrigger_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc0irq_late_retrigger_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc0irq_late_retrigger_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc0irq_late_retrigger_2_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc0irq_late_retrigger_2_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc0irq_late_retrigger_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc0irq_late_retrigger_2_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc0irq_late_retrigger_ds_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc0irq_late_retrigger_ds_1_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc0irq_late_retrigger_ds_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc0irq_late_retrigger_ds_2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc153flag_1_outc1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc153flag_1_dmg08_cgb04c_outC1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc153flag_1_outc1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc153flag_1_dmg08_cgb04c_outC1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc153flag_2_outc5_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc153flag_2_dmg08_cgb04c_outC5.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc153flag_2_outc5_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc153flag_2_dmg08_cgb04c_outC5.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc153flag_3_outc1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc153flag_3_dmg08_cgb04c_outC1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc153flag_3_outc1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc153flag_3_dmg08_cgb04c_outC1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc153flag_ds_1_outc1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc153flag_ds_1_cgb04c_outC1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc153flag_ds_2_outc5_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc153flag_ds_2_cgb04c_outC5.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc153flag_ds_3_outc5_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc153flag_ds_3_cgb04c_outC5.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc153flag_ds_4_outc1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc153flag_ds_4_cgb04c_outC1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc153irq_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc153irq_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc153irq_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc153irq_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc153irq_2_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc153irq_2_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc153irq_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc153irq_2_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc153irq_ds_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc153irq_ds_1_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc153irq_ds_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc153irq_ds_2_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc153irq_ifw_1_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc153irq_ifw_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc153irq_ifw_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc153irq_ifw_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc153irq_ifw_2_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc153irq_ifw_2_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc153irq_ifw_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc153irq_ifw_2_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc153irq_ifw_ds_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc153irq_ifw_ds_1_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc153irq_ifw_ds_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc153irq_ifw_ds_2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc153irq_late_retrigger_1_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc153irq_late_retrigger_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc153irq_late_retrigger_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc153irq_late_retrigger_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc153irq_late_retrigger_2_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc153irq_late_retrigger_2_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc153irq_late_retrigger_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc153irq_late_retrigger_2_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc153irq_late_retrigger_ds_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc153irq_late_retrigger_ds_1_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_lyc153irq_late_retrigger_ds_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_lyc153irq_late_retrigger_ds_2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_m0irq_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_m0irq_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_m0irq_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_m0irq_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_m0irq_2_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_m0irq_2_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_m0irq_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_m0irq_2_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_m2irq_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_m2irq_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_m2irq_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_m2irq_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_m2irq_2_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_m2irq_2_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_m2irq_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_m2irq_2_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_m2irq_ds_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_m2irq_ds_1_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_m2irq_ds_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_m2irq_ds_2_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_m2stat_1_outc2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_m2stat_1_dmg08_cgb04c_outC2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_m2stat_1_outc2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_m2stat_1_dmg08_cgb04c_outC2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_m2stat_2_outc3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_m2stat_2_dmg08_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint152_m2stat_2_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/ly0/lycint152_m2stat_2_dmg08_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod lyc0int_m0irq {
    use super::*;


    #[test]
    #[ignore]
    fn lyc0int_m0irq_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lyc0int_m0irq/lyc0int_m0irq_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0int_m0irq_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lyc0int_m0irq/lyc0int_m0irq_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0int_m0irq_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lyc0int_m0irq/lyc0int_m0irq_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0int_m0irq_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lyc0int_m0irq/lyc0int_m0irq_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0int_m0irq_ds_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lyc0int_m0irq/lyc0int_m0irq_ds_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0int_m0irq_ds_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lyc0int_m0irq/lyc0int_m0irq_ds_2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod lyc153int_m2irq {
    use super::*;


    #[test]
    #[ignore]
    fn lyc153int_m2irq_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lyc153int_m2irq/lyc153int_m2irq_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153int_m2irq_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lyc153int_m2irq/lyc153int_m2irq_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153int_m2irq_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lyc153int_m2irq/lyc153int_m2irq_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153int_m2irq_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lyc153int_m2irq/lyc153int_m2irq_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153int_m2irq_ifw_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lyc153int_m2irq/lyc153int_m2irq_ifw_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153int_m2irq_ifw_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lyc153int_m2irq/lyc153int_m2irq_ifw_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153int_m2irq_ifw_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lyc153int_m2irq/lyc153int_m2irq_ifw_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153int_m2irq_ifw_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lyc153int_m2irq/lyc153int_m2irq_ifw_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153int_m2irq_ifw_ds_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lyc153int_m2irq/lyc153int_m2irq_ifw_ds_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153int_m2irq_ifw_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lyc153int_m2irq/lyc153int_m2irq_ifw_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153int_m2irq_late_retrigger_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lyc153int_m2irq/lyc153int_m2irq_late_retrigger_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153int_m2irq_late_retrigger_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lyc153int_m2irq/lyc153int_m2irq_late_retrigger_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153int_m2irq_late_retrigger_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lyc153int_m2irq/lyc153int_m2irq_late_retrigger_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153int_m2irq_late_retrigger_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lyc153int_m2irq/lyc153int_m2irq_late_retrigger_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153int_m2irq_late_retrigger_ds_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lyc153int_m2irq/lyc153int_m2irq_late_retrigger_ds_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153int_m2irq_late_retrigger_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lyc153int_m2irq/lyc153int_m2irq_late_retrigger_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod lycenable {
    use super::*;


    #[test]
    #[ignore]
    fn early_ff41_response_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/early_ff41_response_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn early_ff41_response_2_out7_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/early_ff41_response_2_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn early_ff45_response_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/early_ff45_response_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn early_ff45_response_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/early_ff45_response_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn early_ff45_response_2_out7_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/early_ff45_response_2_dmg08_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn early_ff45_response_2_out7_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/early_ff45_response_2_dmg08_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff40_disable_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff40_disable_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff40_disable_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff40_disable_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff40_disable_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff40_disable_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff40_disable_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff40_disable_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff41_disable_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff41_disable_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff41_disable_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff41_disable_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff41_disable_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff41_disable_2_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff41_disable_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff41_disable_2_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff41_disable_3_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff41_disable_3_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff41_disable_3_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff41_disable_3_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff41_disable_ds_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff41_disable_ds_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff41_disable_ds_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff41_disable_ds_2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff41_reenable_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff41_reenable_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff41_reenable_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff41_reenable_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff41_reenable_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff41_reenable_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff41_reenable_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff41_reenable_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff41_reenable_3_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff41_reenable_3_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff41_reenable_3_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff41_reenable_3_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_disable_1_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_disable_1_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_disable_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_disable_1_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_disable_2_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_disable_2_dmg08_out1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_disable_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_disable_2_dmg08_out1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_disable_3_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_disable_3_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_disable_3_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_disable_3_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_disable_ds_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_disable_ds_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_disable_ds_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_disable_ds_2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_enable_weirdpoint_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_enable_weirdpoint_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_enable_weirdpoint_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_enable_weirdpoint_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_enable_weirdpoint_2_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_enable_weirdpoint_2_dmg08_out3_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_enable_weirdpoint_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_enable_weirdpoint_2_dmg08_out3_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_enable_weirdpoint_3_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_enable_weirdpoint_3_dmg08_out1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_enable_weirdpoint_3_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_enable_weirdpoint_3_dmg08_out1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_enable_weirdpoint_4_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_enable_weirdpoint_4_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_enable_weirdpoint_4_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_enable_weirdpoint_4_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_enable_weirdpoint_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_enable_weirdpoint_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_enable_weirdpoint_ds_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_enable_weirdpoint_ds_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_enable_weirdpoint_ds_3_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_enable_weirdpoint_ds_3_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_enable_weirdpoint_ds_4_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_enable_weirdpoint_ds_4_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_enable_weirdpoint_ds_lcdoffset1_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_enable_weirdpoint_ds_lcdoffset1_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_enable_weirdpoint_ds_lcdoffset1_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_enable_weirdpoint_ds_lcdoffset1_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_enable_weirdpoint_ds_lcdoffset1_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_enable_weirdpoint_ds_lcdoffset1_3_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_enable_weirdpoint_ds_lcdoffset1_4_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_enable_weirdpoint_ds_lcdoffset1_4_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_enable_weirdpoint_lcdoffset1_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_enable_weirdpoint_lcdoffset1_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_enable_weirdpoint_lcdoffset1_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_enable_weirdpoint_lcdoffset1_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_enable_weirdpoint_lcdoffset1_3_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_enable_weirdpoint_lcdoffset1_3_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_reenable_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_reenable_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_reenable_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_reenable_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_reenable_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_reenable_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_reenable_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_reenable_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_reenable_3_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_reenable_3_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ff45_reenable_3_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/ff45_reenable_3_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_ff41_enable_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/late_ff41_enable_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_ff41_enable_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/late_ff41_enable_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_ff41_enable_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/late_ff41_enable_2_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_ff41_enable_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/late_ff41_enable_2_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_ff41_enable_3_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/late_ff41_enable_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_ff41_enable_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/late_ff41_enable_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_ff41_enable_after_m2int_disable_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/late_ff41_enable_after_m2int_disable_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_ff41_enable_after_m2int_disable_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/late_ff41_enable_after_m2int_disable_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_ff41_enable_after_m2int_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/late_ff41_enable_after_m2int_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_ff41_enable_after_m2int_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/late_ff41_enable_after_m2int_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_ff41_enable_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/late_ff41_enable_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_ff41_enable_ds_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/late_ff41_enable_ds_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_ff41_enable_ds_lcdoffset1_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/late_ff41_enable_ds_lcdoffset1_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_ff41_enable_ds_lcdoffset1_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/late_ff41_enable_ds_lcdoffset1_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_ff41_enable_lcdoffset1_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/late_ff41_enable_lcdoffset1_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_ff41_enable_lcdoffset1_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/late_ff41_enable_lcdoffset1_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_ff45_enable_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/late_ff45_enable_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_ff45_enable_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/late_ff45_enable_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_ff45_enable_2_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/late_ff45_enable_2_dmg08_out3_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_ff45_enable_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/late_ff45_enable_2_dmg08_out3_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_ff45_enable_3_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/late_ff45_enable_3_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_ff45_enable_3_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/late_ff45_enable_3_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_ff45_enable_after_m2int_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/late_ff45_enable_after_m2int_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_ff45_enable_after_m2int_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/late_ff45_enable_after_m2int_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_ff45_enable_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/late_ff45_enable_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_ff45_enable_ds_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/late_ff45_enable_ds_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_ff45_enable_ds_lcdoffset1_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/late_ff45_enable_ds_lcdoffset1_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_ff45_enable_ds_lcdoffset1_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/late_ff45_enable_ds_lcdoffset1_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_ff45_enable_lcdoffset1_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/late_ff45_enable_lcdoffset1_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_ff45_enable_lcdoffset1_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/late_ff45_enable_lcdoffset1_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lcdoff_lycirqen_1_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lcdoff_lycirqen_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lcdoff_lycirqen_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lcdoff_lycirqen_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lcdoff_lycirqen_2_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lcdoff_lycirqen_2_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lcdoff_lycirqen_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lcdoff_lycirqen_2_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lcdoff_lycirqen_3_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lcdoff_lycirqen_3_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lcdoff_lycirqen_3_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lcdoff_lycirqen_3_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lcdoff_lycirqen_4_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lcdoff_lycirqen_4_dmg08_outE2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lcdoff_lycirqen_4_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lcdoff_lycirqen_4_dmg08_outE2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_ff41_disable_1_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_ff41_disable_1_dmg08_outE2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_ff41_disable_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_ff41_disable_1_dmg08_outE2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_ff41_disable_2_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_ff41_disable_2_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_ff41_disable_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_ff41_disable_2_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_ff41_disable_ds_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_ff41_disable_ds_1_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_ff41_disable_ds_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_ff41_disable_ds_2_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_ff45_disable_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_ff45_disable_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_ff45_disable_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_ff45_disable_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_ff45_disable_2_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_ff45_disable_2_dmg08_outE0_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_ff45_disable_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_ff45_disable_2_dmg08_outE0_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_ff45_disable_3_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_ff45_disable_3_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_ff45_disable_3_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_ff45_disable_3_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_ff45_disable_ds_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_ff45_disable_ds_1_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_ff45_disable_ds_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_ff45_disable_ds_2_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_ff45_enable_weirdpoint_1_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_ff45_enable_weirdpoint_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_ff45_enable_weirdpoint_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_ff45_enable_weirdpoint_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_ff45_enable_weirdpoint_2_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_ff45_enable_weirdpoint_2_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_ff45_enable_weirdpoint_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_ff45_enable_weirdpoint_2_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_ff45_enable_weirdpoint_3_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_ff45_enable_weirdpoint_3_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_ff45_enable_weirdpoint_3_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_ff45_enable_weirdpoint_3_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_ff45_enable_weirdpoint_4_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_ff45_enable_weirdpoint_4_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_ff45_enable_weirdpoint_4_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_ff45_enable_weirdpoint_4_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_late_ff45_enable_1_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_late_ff45_enable_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_late_ff45_enable_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_late_ff45_enable_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_late_ff45_enable_2_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_late_ff45_enable_2_dmg08_outE2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_late_ff45_enable_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_late_ff45_enable_2_dmg08_outE2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_late_ff45_enable_3_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_late_ff45_enable_3_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_late_ff45_enable_3_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_late_ff45_enable_3_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_m1disable_1_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_m1disable_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_m1disable_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_m1disable_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_m1disable_2_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_m1disable_2_dmg08_outE2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_m1disable_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_m1disable_2_dmg08_outE2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_m1disable_3_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_m1disable_3_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_m1disable_3_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_m1disable_3_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_m1disable_ds_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_m1disable_ds_1_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_m1disable_ds_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc0_m1disable_ds_2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_enable_m1disable_1_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_enable_m1disable_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_enable_m1disable_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_enable_m1disable_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_enable_m1disable_2_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_enable_m1disable_2_dmg08_outE2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_enable_m1disable_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_enable_m1disable_2_dmg08_outE2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_enable_m1disable_3_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_enable_m1disable_3_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_enable_m1disable_3_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_enable_m1disable_3_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_ff41_enable_1_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_ff41_enable_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_ff41_enable_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_ff41_enable_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_ff41_enable_2_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_ff41_enable_2_dmg08_outE2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_ff41_enable_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_ff41_enable_2_dmg08_outE2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_ff41_enable_ds_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_ff41_enable_ds_1_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_ff41_enable_ds_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_ff41_enable_ds_2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_ff41_enable_ds_lcdoffset1_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_ff41_enable_ds_lcdoffset1_1_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_ff41_enable_ds_lcdoffset1_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_ff41_enable_ds_lcdoffset1_2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_ff41_enable_lcdoffset1_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_ff41_enable_lcdoffset1_1_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_ff41_enable_lcdoffset1_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_ff41_enable_lcdoffset1_2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_ff45_enable_1_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_ff45_enable_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_ff45_enable_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_ff45_enable_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_ff45_enable_2_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_ff45_enable_2_dmg08_outE2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_ff45_enable_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_ff45_enable_2_dmg08_outE2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_ff45_enable_3_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_ff45_enable_3_dmg08_outE0_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_ff45_enable_3_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_ff45_enable_3_dmg08_outE0_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_ff45_enable_4_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_ff45_enable_4_dmg08_outE2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_ff45_enable_4_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_ff45_enable_4_dmg08_outE2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_ff45_enable_5_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_ff45_enable_5_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_ff45_enable_5_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_ff45_enable_5_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_ff45_enable_ds_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_ff45_enable_ds_1_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_ff45_enable_ds_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_ff45_enable_ds_2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_ff45_enable_ds_3_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_ff45_enable_ds_3_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_ff45_enable_ds_4_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_ff45_enable_ds_4_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_ff45_enable_ds_5_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_ff45_enable_ds_5_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_ff45_enable_ds_6_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_ff45_enable_ds_6_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_ff45_enable_ds_lcdoffset1_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_ff45_enable_ds_lcdoffset1_1_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_ff45_enable_ds_lcdoffset1_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_ff45_enable_ds_lcdoffset1_2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_ff45_enable_lcdoffset1_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_ff45_enable_lcdoffset1_1_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_ff45_enable_lcdoffset1_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_ff45_enable_lcdoffset1_2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_m1disable_1_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_m1disable_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_m1disable_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_m1disable_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_m1disable_2_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_m1disable_2_dmg08_outE2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_m1disable_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_m1disable_2_dmg08_outE2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_m1disable_3_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_m1disable_3_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_late_m1disable_3_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_late_m1disable_3_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_m1disable_ds_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_m1disable_ds_1_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc153_m1disable_ds_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc153_m1disable_ds_2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff41_enable_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff41_enable_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff41_enable_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff41_enable_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff41_enable_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff41_enable_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff41_enable_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff41_enable_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff41_enable_3_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff41_enable_3_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff41_enable_3_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff41_enable_3_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff41_enable_4_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff41_enable_4_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff41_enable_4_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff41_enable_4_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff41_enable_5_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff41_enable_5_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff41_enable_5_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff41_enable_5_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff41_enable_ds_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff41_enable_ds_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff41_enable_ds_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff41_enable_ds_2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff41_enable_ds_3_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff41_enable_ds_3_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff41_enable_ds_4_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff41_enable_ds_4_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff41_enable_ds_5_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff41_enable_ds_5_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff41_enable_ds_6_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff41_enable_ds_6_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff41_trigger_delay_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff41_trigger_delay_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff41_trigger_delay_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff41_trigger_delay_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff41_trigger_delay_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff41_trigger_delay_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff41_trigger_delay_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff41_trigger_delay_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff45_disable2_1_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff45_disable2_1_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff45_disable2_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff45_disable2_1_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff45_disable2_2_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff45_disable2_2_dmg08_out1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff45_disable2_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff45_disable2_2_dmg08_out1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff45_disable2_3_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff45_disable2_3_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff45_disable2_3_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff45_disable2_3_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff45_disable2_ds_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff45_disable2_ds_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff45_disable2_ds_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff45_disable2_ds_2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff45_trigger_delay_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff45_trigger_delay_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff45_trigger_delay_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff45_trigger_delay_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff45_trigger_delay_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff45_trigger_delay_2_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff45_trigger_delay_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff45_trigger_delay_2_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff45_trigger_delay_3_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff45_trigger_delay_3_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff45_trigger_delay_3_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff45_trigger_delay_3_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff45_trigger_delay_ds_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff45_trigger_delay_ds_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc_ff45_trigger_delay_ds_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lyc_ff45_trigger_delay_ds_2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_ly00_stat50_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lycwirq_trigger_ly00_stat50_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_ly00_stat50_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lycwirq_trigger_ly00_stat50_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_ly00_stat50_2_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lycwirq_trigger_ly00_stat50_2_dmg08_outE0_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_ly00_stat50_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lycwirq_trigger_ly00_stat50_2_dmg08_outE0_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_ly00_stat50_3_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lycwirq_trigger_ly00_stat50_3_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_ly00_stat50_3_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lycwirq_trigger_ly00_stat50_3_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_ly00_stat50_ds_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lycwirq_trigger_ly00_stat50_ds_1_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_ly00_stat50_ds_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lycwirq_trigger_ly00_stat50_ds_2_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_ly00_stat50_ds_lcdoffset1_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lycwirq_trigger_ly00_stat50_ds_lcdoffset1_1_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_ly00_stat50_ds_lcdoffset1_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lycwirq_trigger_ly00_stat50_ds_lcdoffset1_2_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_ly00_stat50_lcdoffset1_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lycwirq_trigger_ly00_stat50_lcdoffset1_1_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_ly00_stat50_lcdoffset1_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lycwirq_trigger_ly00_stat50_lcdoffset1_2_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_ly94_stat50_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lycwirq_trigger_ly94_stat50_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_ly94_stat50_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycEnable/lycwirq_trigger_ly94_stat50_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod lycint_ly {
    use super::*;


    #[test]
    #[ignore]
    fn lycint_ly_1_out5_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycint_ly/lycint_ly_1_dmg08_cgb04c_out5.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_ly_1_out5_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycint_ly/lycint_ly_1_dmg08_cgb04c_out5.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_ly_2_out6_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycint_ly/lycint_ly_2_dmg08_cgb04c_out6.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("6".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_ly_2_out6_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycint_ly/lycint_ly_2_dmg08_cgb04c_out6.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("6".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_ly_ds_1_out5_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycint_ly/lycint_ly_ds_1_cgb04c_out5.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_ly_ds_2_out6_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycint_ly/lycint_ly_ds_2_cgb04c_out6.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("6".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod lycint_lycflag {
    use super::*;


    #[test]
    #[ignore]
    fn lycint_lycflag_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycint_lycflag/lycint_lycflag_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_lycflag_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycint_lycflag/lycint_lycflag_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_lycflag_2_out6_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycint_lycflag/lycint_lycflag_2_dmg08_cgb04c_out6.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("6".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_lycflag_2_out6_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycint_lycflag/lycint_lycflag_2_dmg08_cgb04c_out6.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("6".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_lycflag_3_out4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycint_lycflag/lycint_lycflag_3_dmg08_cgb04c_out4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_lycflag_3_out4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycint_lycflag/lycint_lycflag_3_dmg08_cgb04c_out4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_lycflag_4_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycint_lycflag/lycint_lycflag_4_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_lycflag_4_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycint_lycflag/lycint_lycflag_4_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_lycflag_ds_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycint_lycflag/lycint_lycflag_ds_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_lycflag_ds_2_out6_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycint_lycflag/lycint_lycflag_ds_2_cgb04c_out6.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("6".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_lycflag_ds_3_out4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycint_lycflag/lycint_lycflag_ds_3_cgb04c_out4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_lycflag_ds_4_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycint_lycflag/lycint_lycflag_ds_4_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod lycint_lycirq {
    use super::*;


    #[test]
    #[ignore]
    fn lycint_lycirq_1_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycint_lycirq/lycint_lycirq_1_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_lycirq_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycint_lycirq/lycint_lycirq_1_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_lycirq_2_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycint_lycirq/lycint_lycirq_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_lycirq_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycint_lycirq/lycint_lycirq_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod lycint_m0stat {
    use super::*;


    #[test]
    #[ignore]
    fn lycint_m0stat_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycint_m0stat/lycint_m0stat_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_m0stat_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycint_m0stat/lycint_m0stat_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_m0stat_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycint_m0stat/lycint_m0stat_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_m0stat_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycint_m0stat/lycint_m0stat_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_m0stat_ds_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycint_m0stat/lycint_m0stat_ds_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_m0stat_ds_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycint_m0stat/lycint_m0stat_ds_2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod lycm2int {
    use super::*;


    #[test]
    #[ignore]
    fn lyc0m2int_m2irq_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycm2int/lyc0m2int_m2irq_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0m2int_m2irq_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycm2int/lyc0m2int_m2irq_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0m2int_m2irq_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycm2int/lyc0m2int_m2irq_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0m2int_m2irq_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycm2int/lyc0m2int_m2irq_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0m2int_stat_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycm2int/lyc0m2int_stat_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0m2int_stat_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycm2int/lyc0m2int_stat_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycm2int_m0stat_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycm2int/lycm2int_m0stat_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycm2int_m0stat_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycm2int/lycm2int_m0stat_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycm2int_m0stat_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycm2int/lycm2int_m0stat_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycm2int_m0stat_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycm2int/lycm2int_m0stat_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycm2int_m2irq_1_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycm2int/lycm2int_m2irq_1_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycm2int_m2irq_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycm2int/lycm2int_m2irq_1_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycm2int_m2irq_2_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycm2int/lycm2int_m2irq_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycm2int_m2irq_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycm2int/lycm2int_m2irq_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2irq_before_lycint_1_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycm2int/m2irq_before_lycint_1_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2irq_before_lycint_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycm2int/m2irq_before_lycint_1_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2irq_before_lycint_2_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycm2int/m2irq_before_lycint_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2irq_before_lycint_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lycm2int/m2irq_before_lycint_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod lywrite {
    use super::*;


    #[test]
    #[ignore]
    fn lywrite77_ly44_m3_ly_out44_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lywrite/lywrite77_ly44_m3_ly_dmg08_cgb04c_out44.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("44".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lywrite77_ly44_m3_ly_out44_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lywrite/lywrite77_ly44_m3_ly_dmg08_cgb04c_out44.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("44".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lywrite77_ly44_m3_stat_outc7_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lywrite/lywrite77_ly44_m3_stat_dmg08_cgb04c_outC7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lywrite77_ly44_m3_stat_outc7_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lywrite/lywrite77_ly44_m3_stat_dmg08_cgb04c_outC7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lywrite77_ly97_ly_out97_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lywrite/lywrite77_ly97_ly_dmg08_cgb04c_out97.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("97".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lywrite77_ly97_ly_out97_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lywrite/lywrite77_ly97_ly_dmg08_cgb04c_out97.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("97".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lywrite77_ly97_stat_outc5_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lywrite/lywrite77_ly97_stat_dmg08_cgb04c_outC5.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lywrite77_ly97_stat_outc5_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/lywrite/lywrite77_ly97_stat_dmg08_cgb04c_outC5.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod m0enable {
    use super::*;


    #[test]
    #[ignore]
    fn disable_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_2_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_2_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_3_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_3_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_3_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_3_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_ds_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_ds_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_ds_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_ds_2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx1_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx1_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx1_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx1_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx1_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx1_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx1_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx1_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx2_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx2_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx2_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx2_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx2_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx2_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx2_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx2_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx3_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx3_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx3_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx3_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx3_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx3_2_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx3_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx3_2_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx3_3_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx3_3_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx3_3_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx3_3_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx4_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx4_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx4_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx4_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx4_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx4_2_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx4_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx4_2_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx4_3_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx4_3_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx4_3_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx4_3_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx5_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx5_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx5_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx5_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx5_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx5_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx5_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx5_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx5_ds_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx5_ds_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx5_ds_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx5_ds_2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx7_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx7_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx7_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx7_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx7_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx7_2_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx7_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx7_2_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx7_3_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx7_3_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_scx7_3_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/disable_scx7_3_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_after_lyc_during_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_after_lyc_during_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_after_lyc_during_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_after_lyc_during_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_after_lyc_during_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_after_lyc_during_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_after_lyc_during_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_after_lyc_during_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_after_lyc_prior_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_after_lyc_prior_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_after_lyc_prior_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_after_lyc_prior_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_after_lyc_prior_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_after_lyc_prior_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_after_lyc_prior_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_after_lyc_prior_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_after_m2_during_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_after_m2_during_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_after_m2_during_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_after_m2_during_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_after_m2_during_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_after_m2_during_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_after_m2_during_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_after_m2_during_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_after_m2_prior_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_after_m2_prior_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_after_m2_prior_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_after_m2_prior_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_after_m2_prior_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_after_m2_prior_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_after_m2_prior_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_after_m2_prior_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_before_lycint_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_before_lycint_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_before_lycint_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_before_lycint_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_before_lycint_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_before_lycint_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_before_lycint_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_before_lycint_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_twice_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_twice_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_twice_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_twice_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_wxa6_2x_spxa7_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_wxA6_2x_spxA7_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_wxa6_2x_spxa7_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_wxA6_2x_spxA7_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_wxa6_2x_spxa7_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_wxA6_2x_spxA7_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_wxa6_2x_spxa7_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_wxA6_2x_spxA7_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_wxa6_2x_spxa7_3_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_wxA6_2x_spxA7_3_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_wxa6_2x_spxa7_3_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_wxA6_2x_spxA7_3_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_wxa6_2x_spxa7_4_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_wxA6_2x_spxA7_4_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_wxa6_2x_spxa7_4_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_wxA6_2x_spxA7_4_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_wxa6_2x_spxa7_ds_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_wxA6_2x_spxA7_ds_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_wxa6_2x_spxa7_ds_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_wxA6_2x_spxA7_ds_2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_wxa6_2x_spxa7_ds_3_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_wxA6_2x_spxA7_ds_3_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_wxa6_2x_spxa7_ds_4_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/enable_wxA6_2x_spxA7_ds_4_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/late_enable_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/late_enable_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/late_enable_2_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/late_enable_2_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_3_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/late_enable_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/late_enable_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/late_enable_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_ds_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/late_enable_ds_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_ds_lcdoffset1_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/late_enable_ds_lcdoffset1_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_ds_lcdoffset1_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/late_enable_ds_lcdoffset1_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_lcdoffset1_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/late_enable_lcdoffset1_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_lcdoffset1_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/late_enable_lcdoffset1_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff41_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff41_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff41_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff41_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff41_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff41_2_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff41_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff41_2_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff41_3_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff41_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff41_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff41_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff41_ds_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff41_ds_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff41_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff41_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff41_scx1_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff41_scx1_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff41_scx1_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff41_scx1_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff41_scx1_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff41_scx1_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff41_scx1_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff41_scx1_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff41_scx1_ds_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff41_scx1_ds_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff41_scx1_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff41_scx1_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff41_scx2_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff41_scx2_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff41_scx2_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff41_scx2_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff41_scx2_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff41_scx2_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff41_scx2_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff41_scx2_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff41_scx3_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff41_scx3_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff41_scx3_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff41_scx3_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff41_scx3_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff41_scx3_2_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff41_scx3_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff41_scx3_2_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff41_scx3_3_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff41_scx3_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff41_scx3_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff41_scx3_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff45_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff45_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff45_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff45_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff45_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff45_2_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff45_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff45_2_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff45_3_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff45_3_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff45_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff45_3_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff45_4_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff45_4_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff45_4_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff45_4_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff45_ds_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff45_ds_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff45_scx1_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff45_scx1_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff45_scx1_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff45_scx1_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff45_scx1_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff45_scx1_2_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff45_scx1_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff45_scx1_2_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff45_scx1_3_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff45_scx1_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff45_scx1_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff45_scx1_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff45_scx1_ds_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff45_scx1_ds_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff45_scx1_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff45_scx1_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff45_scx2_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff45_scx2_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff45_scx2_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff45_scx2_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff45_scx2_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff45_scx2_2_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff45_scx2_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff45_scx2_2_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff45_scx2_3_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff45_scx2_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff45_scx2_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff45_scx2_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff45_scx3_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff45_scx3_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff45_scx3_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff45_scx3_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff45_scx3_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff45_scx3_2_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff45_scx3_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff45_scx3_2_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff45_scx3_3_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff45_scx3_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycdisable_ff45_scx3_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/lycdisable_ff45_scx3_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0_enable_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/m0_enable_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0_enable_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/m0_enable_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0_enable_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/m0_enable_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0_enable_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/m0_enable_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0_enable_3_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/m0_enable_3_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0_enable_3_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/m0_enable_3_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0_enable_4_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/m0_enable_4_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0_enable_4_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/m0_enable_4_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0_enable_5_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/m0_enable_5_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0_enable_5_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/m0_enable_5_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0_enable_ds_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/m0_enable_ds_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0_enable_ds_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/m0_enable_ds_2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0_enable_ds_3_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/m0_enable_ds_3_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0_enable_ds_4_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/m0_enable_ds_4_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0_enable_ds_5_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/m0_enable_ds_5_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0_enable_ds_6_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/m0_enable_ds_6_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0_enable_ds_7_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/m0_enable_ds_7_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0_enable_ds_8_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/m0_enable_ds_8_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0_trigger_delay_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/m0_trigger_delay_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0_trigger_delay_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/m0_trigger_delay_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0_trigger_delay_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/m0_trigger_delay_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0_trigger_delay_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/m0_trigger_delay_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn reenable_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/reenable_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn reenable_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/reenable_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn reenable_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/reenable_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn reenable_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/reenable_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn reenable_3_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/reenable_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn reenable_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0enable/reenable_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod m0int_m0irq {
    use super::*;


    #[test]
    #[ignore]
    fn m0int_m0irq_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0int_m0irq/m0int_m0irq_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0irq_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0int_m0irq/m0int_m0irq_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0irq_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0int_m0irq/m0int_m0irq_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0irq_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0int_m0irq/m0int_m0irq_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod m0int_m0stat {
    use super::*;


    #[test]
    #[ignore]
    fn m0int_m0stat_ds_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0int_m0stat/m0int_m0stat_ds_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_ds_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0int_m0stat/m0int_m0stat_ds_2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx2_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0int_m0stat/m0int_m0stat_scx2_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx2_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0int_m0stat/m0int_m0stat_scx2_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx2_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0int_m0stat/m0int_m0stat_scx2_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx2_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0int_m0stat/m0int_m0stat_scx2_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx3_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0int_m0stat/m0int_m0stat_scx3_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx3_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0int_m0stat/m0int_m0stat_scx3_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx3_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0int_m0stat/m0int_m0stat_scx3_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx3_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0int_m0stat/m0int_m0stat_scx3_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx5_ds_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0int_m0stat/m0int_m0stat_scx5_ds_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m0stat_scx5_ds_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0int_m0stat/m0int_m0stat_scx5_ds_2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod m0int_m3stat {
    use super::*;


    #[test]
    #[ignore]
    fn m0int_m3stat_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0int_m3stat/m0int_m3stat_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m3stat_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0int_m3stat/m0int_m3stat_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m3stat_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0int_m3stat/m0int_m3stat_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m3stat_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0int_m3stat/m0int_m3stat_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m3stat_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0int_m3stat/m0int_m3stat_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0int_m3stat_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m0int_m3stat/m0int_m3stat_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod m1 {
    use super::*;


    #[test]
    #[ignore]
    fn ly143_late_m0enable_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/ly143_late_m0enable_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly143_late_m0enable_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/ly143_late_m0enable_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly143_late_m0enable_2_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/ly143_late_m0enable_2_dmg08_out3_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly143_late_m0enable_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/ly143_late_m0enable_2_dmg08_out3_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly143_late_m0enable_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/ly143_late_m0enable_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly143_late_m0enable_ds_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/ly143_late_m0enable_ds_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly143_late_m0enable_ds_lcdoffset1_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/ly143_late_m0enable_ds_lcdoffset1_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly143_late_m0enable_ds_lcdoffset1_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/ly143_late_m0enable_ds_lcdoffset1_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly143_late_m0enable_lcdoffset1_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/ly143_late_m0enable_lcdoffset1_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly143_late_m0enable_lcdoffset1_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/ly143_late_m0enable_lcdoffset1_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly143_late_m2enable_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/ly143_late_m2enable_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly143_late_m2enable_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/ly143_late_m2enable_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly143_late_m2enable_2_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/ly143_late_m2enable_2_dmg08_out3_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly143_late_m2enable_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/ly143_late_m2enable_2_dmg08_out3_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly143_late_m2enable_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/ly143_late_m2enable_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly143_late_m2enable_ds_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/ly143_late_m2enable_ds_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly143_late_m2enable_ds_lcdoffset1_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/ly143_late_m2enable_ds_lcdoffset1_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ly143_late_m2enable_ds_lcdoffset1_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/ly143_late_m2enable_ds_lcdoffset1_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc143_late_m0enable_lycdisable_1_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lyc143_late_m0enable_lycdisable_1_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc143_late_m0enable_lycdisable_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lyc143_late_m0enable_lycdisable_1_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc143_late_m0enable_lycdisable_2_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lyc143_late_m0enable_lycdisable_2_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc143_late_m0enable_lycdisable_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lyc143_late_m0enable_lycdisable_2_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc143_late_m0enable_lycdisable_3_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lyc143_late_m0enable_lycdisable_3_dmg08_out3_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc143_late_m0enable_lycdisable_3_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lyc143_late_m0enable_lycdisable_3_dmg08_out3_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc143_late_m0enable_lycdisable_ds_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lyc143_late_m0enable_lycdisable_ds_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc143_late_m0enable_lycdisable_ds_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lyc143_late_m0enable_lycdisable_ds_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc143_late_m2enable_lycdisable_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lyc143_late_m2enable_lycdisable_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc143_late_m2enable_lycdisable_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lyc143_late_m2enable_lycdisable_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc143_late_m2enable_lycdisable_2_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lyc143_late_m2enable_lycdisable_2_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc143_late_m2enable_lycdisable_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lyc143_late_m2enable_lycdisable_2_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc143_late_m2enable_lycdisable_3_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lyc143_late_m2enable_lycdisable_3_dmg08_out3_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc143_late_m2enable_lycdisable_3_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lyc143_late_m2enable_lycdisable_3_dmg08_out3_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc143_late_m2enable_lycdisable_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lyc143_late_m2enable_lycdisable_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc143_late_m2enable_lycdisable_ds_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lyc143_late_m2enable_lycdisable_ds_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc147_ly148_push_m1irq_late_enable_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lyc147++_ly148_push_m1irq_late_enable_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc147_ly148_push_m1irq_late_enable_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lyc147++_ly148_push_m1irq_late_enable_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc147_ly148_push_m1irq_late_enable_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lyc147_ly148_push_m1irq_late_enable_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc147_ly148_push_m1irq_late_enable_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lyc147_ly148_push_m1irq_late_enable_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc148_ly148_m1irq_late_enable_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lyc148_ly148_m1irq_late_enable_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc148_ly148_m1irq_late_enable_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lyc148_ly148_m1irq_late_enable_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc148_ly148_push_m1irq_late_enable_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lyc148_ly148_push_m1irq_late_enable_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc148_ly148_push_m1irq_late_enable_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lyc148_ly148_push_m1irq_late_enable_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint143_m1irq_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint143_m1irq_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint143_m1irq_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint143_m1irq_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint143_m1irq_2_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint143_m1irq_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint143_m1irq_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint143_m1irq_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint143_m1irq_ds_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint143_m1irq_ds_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint143_m1irq_ds_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint143_m1irq_ds_2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint143_m1irq_ifw_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint143_m1irq_ifw_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint143_m1irq_ifw_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint143_m1irq_ifw_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint143_m1irq_ifw_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint143_m1irq_ifw_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint143_m1irq_ifw_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint143_m1irq_ifw_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint143_m1irq_ifw_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint143_m1irq_ifw_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint143_m1irq_ifw_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint143_m1irq_ifw_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint143_m1irq_late_retrigger_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint143_m1irq_late_retrigger_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint143_m1irq_late_retrigger_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint143_m1irq_late_retrigger_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint143_m1irq_late_retrigger_2_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint143_m1irq_late_retrigger_2_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint143_m1irq_late_retrigger_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint143_m1irq_late_retrigger_2_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint143_m1irq_late_retrigger_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint143_m1irq_late_retrigger_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint143_m1irq_late_retrigger_ds_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint143_m1irq_late_retrigger_ds_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_m1intirq_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint_m1intirq_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_m1intirq_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint_m1intirq_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_m1intirq_2_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint_m1intirq_2_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_m1intirq_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint_m1intirq_2_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_m1stat_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint_m1stat_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_m1stat_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint_m1stat_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_m1stat_2_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint_m1stat_2_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_m1stat_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint_m1stat_2_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_vblankintirq_1_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint_vblankintirq_1_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_vblankintirq_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint_vblankintirq_1_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_vblankintirq_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint_vblankintirq_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_vblankintirq_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint_vblankintirq_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_vblankirq_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint_vblankirq_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_vblankirq_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint_vblankirq_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_vblankirq_2_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint_vblankirq_2_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_vblankirq_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint_vblankirq_2_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_vblankirq_late_retrigger_1_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint_vblankirq_late_retrigger_1_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_vblankirq_late_retrigger_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint_vblankirq_late_retrigger_1_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_vblankirq_late_retrigger_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint_vblankirq_late_retrigger_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_vblankirq_late_retrigger_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint_vblankirq_late_retrigger_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_vblankirq_late_retrigger_ds_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint_vblankirq_late_retrigger_ds_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycint_vblankirq_late_retrigger_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/lycint_vblankirq_late_retrigger_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_disable_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_disable_1_dmg08_out3_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_disable_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_disable_1_dmg08_out3_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_disable_2_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_disable_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_disable_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_disable_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_disable_ds_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_disable_ds_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_disable_ds_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_disable_ds_2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_enable_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_enable_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_enable_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_enable_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_enable_2_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_enable_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_enable_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_enable_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_enable_3_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_enable_3_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_enable_3_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_enable_3_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_enable_4_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_enable_4_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_enable_4_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_enable_4_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_enable_after_lyc144_1_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_enable_after_lyc144_1_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_enable_after_lyc144_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_enable_after_lyc144_1_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_enable_after_lyc144_2_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_enable_after_lyc144_2_dmg08_out1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_enable_after_lyc144_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_enable_after_lyc144_2_dmg08_out1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_enable_after_lyc144_3_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_enable_after_lyc144_3_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_enable_after_lyc144_3_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_enable_after_lyc144_3_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_enable_after_lyc153_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_enable_after_lyc153_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_enable_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_enable_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_enable_ds_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_enable_ds_2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_enable_ds_3_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_enable_ds_3_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_enable_ds_4_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_enable_ds_4_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_late_enable_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_late_enable_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_late_enable_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_late_enable_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_late_enable_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_late_enable_2_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_late_enable_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_late_enable_2_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_late_enable_3_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_late_enable_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_late_enable_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_late_enable_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_late_enable_ds_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_late_enable_ds_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_late_enable_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_late_enable_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_late_enable_ds_lcdoffset1_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_late_enable_ds_lcdoffset1_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_late_enable_ds_lcdoffset1_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_late_enable_ds_lcdoffset1_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_late_enable_lcdoffset1_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_late_enable_lcdoffset1_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_late_enable_lcdoffset1_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_late_enable_lcdoffset1_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m0disable_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m0disable_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m0disable_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m0disable_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m0disable_2_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m0disable_2_dmg08_out3_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m0disable_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m0disable_2_dmg08_out3_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m0disable_3_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m0disable_3_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m0disable_3_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m0disable_3_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m0disable_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m0disable_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m0disable_ds_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m0disable_ds_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m0enable_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m0enable_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m0enable_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m0enable_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m0enable_2_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m0enable_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m0enable_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m0enable_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m0enable_3_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m0enable_3_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m0enable_3_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m0enable_3_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m0enable_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m0enable_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m0enable_ds_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m0enable_ds_2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m2disable_lycdisable_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m2disable_lycdisable_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m2disable_lycdisable_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m2disable_lycdisable_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m2disable_lycdisable_2_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m2disable_lycdisable_2_dmg08_out3_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m2disable_lycdisable_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m2disable_lycdisable_2_dmg08_out3_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m2disable_lycdisable_3_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m2disable_lycdisable_3_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m2disable_lycdisable_3_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m2disable_lycdisable_3_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m2disable_lycdisable_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m2disable_lycdisable_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m2disable_lycdisable_ds_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m2disable_lycdisable_ds_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m2enable_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m2enable_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m2enable_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m2enable_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m2enable_2_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m2enable_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m2enable_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m2enable_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m2enable_3_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m2enable_3_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m2enable_3_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m2enable_3_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m2enable_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m2enable_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m2enable_ds_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m2enable_ds_2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m2enable_lyc_1_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m2enable_lyc_1_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m2enable_lyc_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m2enable_lyc_1_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m2enable_lyc_2_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m2enable_lyc_2_dmg08_out1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m2enable_lyc_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m2enable_lyc_2_dmg08_out1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m2enable_lyc_3_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m2enable_lyc_3_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m2enable_lyc_3_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m2enable_lyc_3_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m2enable_lyc_ds_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m2enable_lyc_ds_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1irq_m2enable_lyc_ds_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m1irq_m2enable_lyc_ds_2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2m1irq_ifw_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m2m1irq_ifw_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2m1irq_ifw_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m2m1irq_ifw_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2m1irq_ifw_2_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m2m1irq_ifw_2_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2m1irq_ifw_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m2m1irq_ifw_2_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2m1irq_ifw_3_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m2m1irq_ifw_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2m1irq_ifw_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m2m1irq_ifw_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2m1irq_ifw_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m2m1irq_ifw_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2m1irq_ifw_ds_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m2m1irq_ifw_ds_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2m1irq_ifw_ds_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/m2m1irq_ifw_ds_3_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vblankint_lcd147_int_m1irq_enable_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/vblankint_lcd147++int_m1irq_enable_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vblankint_lcd147_int_m1irq_enable_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m1/vblankint_lcd147++int_m1irq_enable_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod m2enable {
    use super::*;


    #[test]
    #[ignore]
    fn disable_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/disable_1_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/disable_1_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/disable_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/disable_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_by_m1enable_ly0_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/disable_by_m1enable_ly0_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_by_m1enable_ly0_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/disable_by_m1enable_ly0_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_by_m1enable_ly0_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/disable_by_m1enable_ly0_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_by_m1enable_ly0_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/disable_by_m1enable_ly0_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_by_m1enable_ly0_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/disable_by_m1enable_ly0_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_ds_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/disable_ds_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_ds_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/disable_ds_2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_ly0_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/disable_ly0_1_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_ly0_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/disable_ly0_1_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_ly0_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/disable_ly0_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_ly0_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/disable_ly0_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_ly0_ds_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/disable_ly0_ds_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn disable_ly0_ds_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/disable_ly0_ds_2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_after_lycint_1_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/enable_after_lycint_1_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_after_lycint_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/enable_after_lycint_1_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_after_lycint_2_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/enable_after_lycint_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_after_lycint_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/enable_after_lycint_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_after_lycint_disable_1_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/enable_after_lycint_disable_1_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_after_lycint_disable_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/enable_after_lycint_disable_1_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_after_lycint_disable_2_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/enable_after_lycint_disable_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn enable_after_lycint_disable_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/enable_after_lycint_disable_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_after_lycint_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_after_lycint_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_after_lycint_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_after_lycint_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_after_lycint_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_after_lycint_2_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_after_lycint_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_after_lycint_2_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_after_lycint_3_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_after_lycint_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_after_lycint_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_after_lycint_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_after_lycint_4_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_after_lycint_4_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_after_lycint_4_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_after_lycint_4_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_after_lycint_disable_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_after_lycint_disable_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_after_lycint_disable_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_after_lycint_disable_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_after_lycint_disable_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_after_lycint_disable_2_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_after_lycint_disable_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_after_lycint_disable_2_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_after_lycint_disable_3_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_after_lycint_disable_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_after_lycint_disable_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_after_lycint_disable_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_ds_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_ds_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_ds_lcdoffset1_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_ds_lcdoffset1_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_ds_lcdoffset1_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_ds_lcdoffset1_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_lcdoffset2_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_lcdoffset2_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_lcdoffset2_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_lcdoffset2_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_lcdoffset3_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_lcdoffset3_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_lcdoffset3_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_lcdoffset3_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_ly0_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_ly0_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_ly0_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_ly0_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_ly0_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_ly0_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_ly0_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_ly0_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_ly0_ds_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_ly0_ds_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_ly0_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_ly0_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_ly0_ds_lcdoffset1_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_ly0_ds_lcdoffset1_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_ly0_ds_lcdoffset1_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_ly0_ds_lcdoffset1_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_ly0_lcdoffset2_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_ly0_lcdoffset2_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_ly0_lcdoffset2_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_ly0_lcdoffset2_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_m0disable_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_m0disable_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_m0disable_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_m0disable_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_m0disable_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_m0disable_2_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_m0disable_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_m0disable_2_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_m0disable_3_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_m0disable_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_m0disable_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_m0disable_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_m0disable_ds_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_m0disable_ds_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_m0disable_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_m0disable_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_m1disable_ly0_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_m1disable_ly0_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_m1disable_ly0_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_m1disable_ly0_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_m1disable_ly0_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_m1disable_ly0_2_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_m1disable_ly0_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_m1disable_ly0_2_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_m1disable_ly0_3_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_m1disable_ly0_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_m1disable_ly0_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_m1disable_ly0_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_m1disable_ly0_ds_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_m1disable_ly0_ds_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_enable_m1disable_ly0_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_enable_m1disable_ly0_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m1disable_ly0_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_m1disable_ly0_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m1disable_ly0_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_m1disable_ly0_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m1disable_ly0_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_m1disable_ly0_2_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m1disable_ly0_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_m1disable_ly0_2_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m1disable_ly0_3_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_m1disable_ly0_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_m1disable_ly0_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/late_m1disable_ly0_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_late_m2enable_lycdisable_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/lyc0_late_m2enable_lycdisable_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_late_m2enable_lycdisable_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/lyc0_late_m2enable_lycdisable_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_late_m2enable_lycdisable_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/lyc0_late_m2enable_lycdisable_2_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_late_m2enable_lycdisable_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/lyc0_late_m2enable_lycdisable_2_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_late_m2enable_lycdisable_3_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/lyc0_late_m2enable_lycdisable_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_late_m2enable_lycdisable_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/lyc0_late_m2enable_lycdisable_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_late_m2enable_lycdisable_ds_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/lyc0_late_m2enable_lycdisable_ds_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc0_late_m2enable_lycdisable_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/lyc0_late_m2enable_lycdisable_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc1_late_m2enable_lycdisable_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/lyc1_late_m2enable_lycdisable_1_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc1_late_m2enable_lycdisable_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/lyc1_late_m2enable_lycdisable_1_dmg08_out0_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc1_late_m2enable_lycdisable_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/lyc1_late_m2enable_lycdisable_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc1_late_m2enable_lycdisable_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/lyc1_late_m2enable_lycdisable_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc1_late_m2enable_lycdisable_ds_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/lyc1_late_m2enable_lycdisable_ds_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc1_late_m2enable_lycdisable_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/lyc1_late_m2enable_lycdisable_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc1_late_m2enable_lycdisable_ds_3_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/lyc1_late_m2enable_lycdisable_ds_3_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc1_m2irq_late_lyc255_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/lyc1_m2irq_late_lyc255_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc1_m2irq_late_lyc255_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/lyc1_m2irq_late_lyc255_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc1_m2irq_late_lyc255_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/lyc1_m2irq_late_lyc255_2_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc1_m2irq_late_lyc255_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/lyc1_m2irq_late_lyc255_2_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc1_m2irq_late_lyc255_3_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/lyc1_m2irq_late_lyc255_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc1_m2irq_late_lyc255_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/lyc1_m2irq_late_lyc255_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc1_m2irq_late_lyc255_ds_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/lyc1_m2irq_late_lyc255_ds_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc1_m2irq_late_lyc255_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/lyc1_m2irq_late_lyc255_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc1_m2irq_late_lycdisable_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/lyc1_m2irq_late_lycdisable_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc1_m2irq_late_lycdisable_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/lyc1_m2irq_late_lycdisable_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc1_m2irq_late_lycdisable_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/lyc1_m2irq_late_lycdisable_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc1_m2irq_late_lycdisable_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/lyc1_m2irq_late_lycdisable_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc1_m2irq_late_lycdisable_ds_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/lyc1_m2irq_late_lycdisable_ds_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lyc1_m2irq_late_lycdisable_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/lyc1_m2irq_late_lycdisable_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2_late_m0disable_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/m2_late_m0disable_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2_late_m0disable_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/m2_late_m0disable_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2_late_m0disable_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/m2_late_m0disable_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2_late_m0disable_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/m2_late_m0disable_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2_late_m0disable_ds_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/m2_late_m0disable_ds_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2_late_m0disable_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/m2_late_m0disable_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2_late_m1disable_ly0_ds_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/m2_late_m1disable_ly0_ds_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2_late_m1disable_ly0_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2enable/m2_late_m1disable_ly0_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod m2int_m0irq {
    use super::*;


    #[test]
    #[ignore]
    fn m2int_m0irq_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_ds_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_ds_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_ds_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_ds_2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx2_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx2_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx2_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx2_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx2_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx2_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx2_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx2_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx2_di_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx2_di_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx2_di_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx2_di_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx2_di_1_out8_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx2_di_1_dmg08_cgb04c_out8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx2_di_1_out8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx2_di_1_dmg08_cgb04c_out8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx2_ei_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx2_ei_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx2_ei_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx2_ei_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx2_ei_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx2_ei_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx2_ei_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx2_ei_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx2_ie_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx2_ie_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx2_ie_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx2_ie_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx2_ie_2_out8_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx2_ie_2_dmg08_cgb04c_out8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx2_ie_2_out8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx2_ie_2_dmg08_cgb04c_out8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx2_reti_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx2_reti_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx2_reti_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx2_reti_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx2_reti_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx2_reti_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx2_reti_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx2_reti_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx3_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx3_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx3_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx3_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx3_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx3_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx3_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx3_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx3_di_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx3_di_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx3_di_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx3_di_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx3_di_2_out8_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx3_di_2_dmg08_cgb04c_out8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx3_di_2_out8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx3_di_2_dmg08_cgb04c_out8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx3_ei_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx3_ei_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx3_ei_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx3_ei_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx3_ei_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx3_ei_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx3_ei_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx3_ei_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx3_ie_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx3_ie_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx3_ie_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx3_ie_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx3_ie_2_out8_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx3_ie_2_dmg08_cgb04c_out8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx3_ie_2_out8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx3_ie_2_dmg08_cgb04c_out8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx3_ifw_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx3_ifw_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx3_ifw_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx3_ifw_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx3_ifw_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx3_ifw_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx3_ifw_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx3_ifw_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx3_ifw_3_out8_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx3_ifw_3_dmg08_cgb04c_out8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx3_ifw_3_out8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx3_ifw_3_dmg08_cgb04c_out8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx3_ifw_4_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx3_ifw_4_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx3_ifw_4_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx3_ifw_4_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx3_ifw_ds_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx3_ifw_ds_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx3_ifw_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx3_ifw_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx3_reti_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx3_reti_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx3_reti_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx3_reti_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx3_reti_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx3_reti_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx3_reti_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx3_reti_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx4_ifw_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx4_ifw_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx4_ifw_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx4_ifw_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx4_ifw_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx4_ifw_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx4_ifw_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx4_ifw_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx4_ifw_3_out8_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx4_ifw_3_dmg08_cgb04c_out8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx4_ifw_3_out8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx4_ifw_3_dmg08_cgb04c_out8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx4_ifw_4_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx4_ifw_4_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx4_ifw_4_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx4_ifw_4_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx4_ifw_ds_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx4_ifw_ds_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx4_ifw_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx4_ifw_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx5_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx5_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx5_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx5_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx5_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx5_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx5_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx5_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx5_ds_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx5_ds_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0irq_scx5_ds_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0irq/m2int_m0irq_scx5_ds_2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod m2int_m0stat {
    use super::*;


    #[test]
    #[ignore]
    fn m2int_m0stat_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0stat/m2int_m0stat_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0stat_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0stat/m2int_m0stat_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0stat_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0stat/m2int_m0stat_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0stat_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0stat/m2int_m0stat_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0stat_ds_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0stat/m2int_m0stat_ds_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m0stat_ds_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m0stat/m2int_m0stat_ds_2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod m2int_m2irq {
    use super::*;


    #[test]
    #[ignore]
    fn m2int_m2irq_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m2irq/m2int_m2irq_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m2irq_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m2irq/m2int_m2irq_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m2irq_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m2irq/m2int_m2irq_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m2irq_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m2irq/m2int_m2irq_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m2irq_ds_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m2irq/m2int_m2irq_ds_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m2irq_ds_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m2irq/m2int_m2irq_ds_2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m2irq_ifw_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m2irq/m2int_m2irq_ifw_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m2irq_ifw_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m2irq/m2int_m2irq_ifw_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m2irq_ifw_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m2irq/m2int_m2irq_ifw_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m2irq_ifw_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m2irq/m2int_m2irq_ifw_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m2irq_ifw_ds_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m2irq/m2int_m2irq_ifw_ds_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m2irq_ifw_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m2irq/m2int_m2irq_ifw_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m2irq_late_retrigger_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m2irq/m2int_m2irq_late_retrigger_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m2irq_late_retrigger_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m2irq/m2int_m2irq_late_retrigger_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m2irq_late_retrigger_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m2irq/m2int_m2irq_late_retrigger_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m2irq_late_retrigger_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m2irq/m2int_m2irq_late_retrigger_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m2irq_late_retrigger_ds_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m2irq/m2int_m2irq_late_retrigger_ds_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m2irq_late_retrigger_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m2irq/m2int_m2irq_late_retrigger_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod m2int_m2stat {
    use super::*;


    #[test]
    #[ignore]
    fn m2int_m2stat_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m2stat/m2int_m2stat_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m2stat_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m2stat/m2int_m2stat_1_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m2stat_2_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m2stat/m2int_m2stat_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m2stat_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m2stat/m2int_m2stat_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m2stat_ds_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m2stat/m2int_m2stat_ds_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m2stat_ds_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m2stat/m2int_m2stat_ds_2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_scx4_m2stat_ds_1_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m2stat/m2int_scx4_m2stat_ds_1_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_scx4_m2stat_ds_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/m2int_m2stat/m2int_scx4_m2stat_ds_2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod m2int_m3stat {
    use super::*;


    mod nobg {
        use super::*;


        #[test]
        #[ignore]
        fn m2int_nobg_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/nobg/m2int_nobg_m3stat_1_cgb04c_out3.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_nobg_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/nobg/m2int_nobg_m3stat_2_cgb04c_out0.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_nobg_scx7_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/nobg/m2int_nobg_scx7_m3stat_1_cgb04c_out3.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_nobg_scx7_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/nobg/m2int_nobg_scx7_m3stat_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }
    }


    mod scx {
        use super::*;


        #[test]
        #[ignore]
        fn late_scx4_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/late_scx4_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_scx4_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/late_scx4_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_scx4_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/late_scx4_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_scx4_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/late_scx4_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_scx4_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/late_scx4_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_scx4_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/late_scx4_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_scx1_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/m2int_scx1_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_scx1_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/m2int_scx1_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_scx2_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/m2int_scx2_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_scx2_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/m2int_scx2_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_scx2_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/m2int_scx2_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_scx2_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/m2int_scx2_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_scx2_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/m2int_scx2_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_scx2_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/m2int_scx2_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_scx3_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/m2int_scx3_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_scx3_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/m2int_scx3_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_scx3_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/m2int_scx3_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_scx3_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/m2int_scx3_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_scx3_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/m2int_scx3_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_scx3_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/m2int_scx3_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_scx4_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/m2int_scx4_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_scx4_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/m2int_scx4_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_scx5_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/m2int_scx5_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_scx5_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/m2int_scx5_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_scx5_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/m2int_scx5_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_scx5_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/m2int_scx5_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_scx5_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/m2int_scx5_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_scx5_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/m2int_scx5_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_scx6_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/m2int_scx6_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_scx6_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/m2int_scx6_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_scx7_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/m2int_scx7_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_scx7_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/m2int_scx7_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_scx8_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/m2int_scx8_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_scx8_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/scx/m2int_scx8_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }
    }


    mod m2int_m3stat_other {
        use super::*;


        #[test]
        #[ignore]
        fn m2int_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/m2int_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/m2int_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/m2int_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/m2int_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/m2int_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/m2int_m3stat/m2int_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }
    }
}


mod miscmstatirq {
    use super::*;


    #[test]
    #[ignore]
    fn lcdoff_statirqen_if_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lcdoff_statirqen_if_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lcdoff_statirqen_if_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lcdoff_statirqen_if_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycflag_statwirq_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycflag_statwirq_1_dmg08_out2.gb")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycflag_statwirq_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycflag_statwirq_2_dmg08_out2.gb")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycflag_statwirq_3_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycflag_statwirq_3_dmg08_out2.gb")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycflag_statwirq_4_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycflag_statwirq_4_dmg08_out0.gb")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_00_00_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_00_00_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_00_00_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_00_00_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_00_40_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_00_40_dmg08_out2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_00_40_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_00_40_dmg08_out2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_00_bf_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_00_bf_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_00_bf_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_00_bf_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_00_ff_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_00_ff_dmg08_out2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_00_ff_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_00_ff_dmg08_out2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_40_00_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_40_00_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_40_00_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_40_00_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_40_40_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_40_40_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_40_40_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_40_40_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_40_bf_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_40_bf_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_40_bf_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_40_bf_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_40_ff_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_40_ff_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_40_ff_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_40_ff_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_bf_00_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_bf_00_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_bf_00_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_bf_00_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_bf_40_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_bf_40_dmg08_out2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_bf_40_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_bf_40_dmg08_out2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_bf_bf_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_bf_bf_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_bf_bf_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_bf_bf_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_bf_ff_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_bf_ff_dmg08_out2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_bf_ff_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_bf_ff_dmg08_out2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_ff_00_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_ff_00_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_ff_00_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_ff_00_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_ff_40_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_ff_40_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_ff_40_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_ff_40_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_ff_bf_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_ff_bf_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_ff_bf_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_ff_bf_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_ff_ff_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_ff_ff_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_ff_ff_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_ff_ff_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_ly00_10_50_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_ly00_10_50_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_ly00_10_50_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_ly00_10_50_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_ly00_10_50_2_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_ly00_10_50_2_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_ly00_10_50_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_ly00_10_50_2_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_ly00_10_50_ds_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_ly00_10_50_ds_1_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_ly00_10_50_ds_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_ly00_10_50_ds_2_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_ly00_10_50_ds_lcdoffset1_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_ly00_10_50_ds_lcdoffset1_1_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_ly00_10_50_ds_lcdoffset1_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_ly00_10_50_ds_lcdoffset1_2_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_ly00_10_50_lcdoffset3_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_ly00_10_50_lcdoffset3_1_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_ly00_10_50_lcdoffset3_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_ly00_10_50_lcdoffset3_2_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_ly94_00_50_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_ly94_00_50_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_ly94_00_50_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_ly94_00_50_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_ly94_10_40_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_ly94_10_40_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_ly94_10_40_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_ly94_10_40_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_ly94_10_50_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_ly94_10_50_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_ly94_10_50_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_ly94_10_50_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_1_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_2_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_2_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_2_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_3_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_3_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_3_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_3_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_4_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_4_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_4_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_4_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_5_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_5_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_5_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_5_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_6_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_6_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_6_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_6_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_7_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_7_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_7_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_7_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_8_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_8_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_8_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_8_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_9_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_9_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_9_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_early_ly44_lyc44_08_40_9_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_late_ly44_lyc44_08_40_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_late_ly44_lyc44_08_40_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_late_ly44_lyc44_08_40_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_late_ly44_lyc44_08_40_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_late_ly44_lyc44_08_40_2_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_late_ly44_lyc44_08_40_2_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_late_ly44_lyc44_08_40_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_late_ly44_lyc44_08_40_2_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_late_ly44_lyc44_08_40_3_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_late_ly44_lyc44_08_40_3_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_late_ly44_lyc44_08_40_3_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_late_ly44_lyc44_08_40_3_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_late_ly44_lyc44_08_40_4_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_late_ly44_lyc44_08_40_4_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_late_ly44_lyc44_08_40_4_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_late_ly44_lyc44_08_40_4_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_late_ly44_lyc44_08_40_ds_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_late_ly44_lyc44_08_40_ds_1_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_late_ly44_lyc44_08_40_ds_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_late_ly44_lyc44_08_40_ds_2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_late_ly44_lyc44_08_40_ds_3_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_late_ly44_lyc44_08_40_ds_3_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_late_ly44_lyc44_08_40_ds_4_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_late_ly44_lyc44_08_40_ds_4_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_ly44_lyc44_00_40_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_ly44_lyc44_00_40_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_ly44_lyc44_00_40_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_ly44_lyc44_00_40_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_ly44_lyc44_00_48_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_ly44_lyc44_00_48_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_ly44_lyc44_00_48_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_ly44_lyc44_00_48_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_ly44_lyc44_08_40_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_ly44_lyc44_08_40_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_ly44_lyc44_08_40_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_ly44_lyc44_08_40_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_ly44_lyc44_08_48_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_ly44_lyc44_08_48_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_ly44_lyc44_08_48_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_ly44_lyc44_08_48_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_ly44_lyc44_08_ff_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_ly44_lyc44_08_ff_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_ly44_lyc44_08_ff_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_ly44_lyc44_08_ff_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_ly44_lyc44_b7_40_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_ly44_lyc44_b7_40_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_ly44_lyc44_b7_40_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_ly44_lyc44_b7_40_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_ly44_lyc44_b7_f7_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_ly44_lyc44_b7_f7_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_ly44_lyc44_b7_f7_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_ly44_lyc44_b7_f7_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_ly44_lyc44_bf_40_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_ly44_lyc44_bf_40_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_ly44_lyc44_bf_40_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_ly44_lyc44_bf_40_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_ly44_lyc44_bf_ff_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_ly44_lyc44_bf_ff_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycstatwirq_trigger_m0_ly44_lyc44_bf_ff_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycstatwirq_trigger_m0_ly44_lyc44_bf_ff_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_early_ly44_1_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_early_ly44_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_early_ly44_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_early_ly44_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_early_ly44_2_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_early_ly44_2_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_early_ly44_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_early_ly44_2_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_early_ly44_3_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_early_ly44_3_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_early_ly44_3_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_early_ly44_3_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_early_ly44_4_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_early_ly44_4_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_early_ly44_4_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_early_ly44_4_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_early_ly44_5_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_early_ly44_5_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_early_ly44_5_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_early_ly44_5_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_early_ly44_6_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_early_ly44_6_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_early_ly44_6_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_early_ly44_6_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_early_ly44_7_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_early_ly44_7_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_early_ly44_7_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_early_ly44_7_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_early_ly44_8_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_early_ly44_8_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_early_ly44_8_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_early_ly44_8_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_early_ly44_9_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_early_ly44_9_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_early_ly44_9_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_early_ly44_9_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_late_ly44_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_late_ly44_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_late_ly44_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_late_ly44_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_late_ly44_2_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_late_ly44_2_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_late_ly44_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_late_ly44_2_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_late_ly44_3_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_late_ly44_3_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_late_ly44_3_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_late_ly44_3_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_late_ly44_4_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_late_ly44_4_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_late_ly44_4_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_late_ly44_4_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_late_ly44_ds_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_late_ly44_ds_1_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_late_ly44_ds_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_late_ly44_ds_2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_late_ly44_ds_3_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_late_ly44_ds_3_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_late_ly44_ds_4_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_late_ly44_ds_4_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_late_ly44_lyc45_1_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_late_ly44_lyc45_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_late_ly44_lyc45_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_late_ly44_lyc45_1_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_late_ly44_lyc45_2_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_late_ly44_lyc45_2_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_late_ly44_lyc45_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_late_ly44_lyc45_2_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_late_ly44_lyc45_3_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_late_ly44_lyc45_3_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_late_ly44_lyc45_3_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_late_ly44_lyc45_3_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_late_ly44_lyc45_4_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_late_ly44_lyc45_4_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_late_ly44_lyc45_4_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_late_ly44_lyc45_4_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_late_ly44_lyc45_5_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_late_ly44_lyc45_5_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_late_ly44_lyc45_5_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_late_ly44_lyc45_5_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_late_ly44_lyc45_ds_1_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_late_ly44_lyc45_ds_1_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_late_ly44_lyc45_ds_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_late_ly44_lyc45_ds_2_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_late_ly44_lyc45_ds_3_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_late_ly44_lyc45_ds_3_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn lycwirq_trigger_m0_late_ly44_lyc45_ds_4_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/lycwirq_trigger_m0_late_ly44_lyc45_ds_4_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_1_dmg08_out2.gb")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_2_dmg08_out0.gb")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_3_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_3_dmg08_out0.gb")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_4_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_4_dmg08_out2.gb")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_scx2_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_scx2_1_dmg08_out0.gb")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_scx2_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_scx2_2_dmg08_out2.gb")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_scx3_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_scx3_1_dmg08_out0.gb")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_scx3_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_scx3_2_dmg08_out2.gb")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_scx5_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_scx5_1_dmg08_out0.gb")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_scx5_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_scx5_2_dmg08_out2.gb")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_00_00_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_00_00_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_00_00_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_00_00_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_00_08_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_00_08_dmg08_out2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_00_08_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_00_08_dmg08_out2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_00_f7_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_00_f7_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_00_f7_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_00_f7_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_00_ff_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_00_ff_dmg08_out2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_00_ff_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_00_ff_dmg08_out2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_08_00_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_08_00_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_08_00_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_08_00_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_08_08_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_08_08_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_08_08_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_08_08_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_08_f7_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_08_f7_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_08_f7_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_08_f7_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_08_ff_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_08_ff_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_08_ff_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_08_ff_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_f7_00_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_f7_00_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_f7_00_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_f7_00_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_f7_08_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_f7_08_dmg08_out2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_f7_08_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_f7_08_dmg08_out2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_f7_f7_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_f7_f7_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_f7_f7_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_f7_f7_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_f7_ff_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_f7_ff_dmg08_out2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_f7_ff_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_f7_ff_dmg08_out2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_ff_00_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_ff_00_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_ff_00_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_ff_00_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_ff_08_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_ff_08_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_ff_08_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_ff_08_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_ff_f7_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_ff_f7_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_ff_f7_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_ff_f7_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_ff_ff_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_ff_ff_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_ff_ff_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_ff_ff_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_ly44_lyc44_00_08_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_ly44_lyc44_00_08_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_ly44_lyc44_00_08_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_ly44_lyc44_00_08_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_ly44_lyc44_40_08_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_ly44_lyc44_40_08_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_ly44_lyc44_40_08_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_ly44_lyc44_40_08_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_ly44_lyc44_40_48_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_ly44_lyc44_40_48_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m0statwirq_trigger_ly44_lyc44_40_48_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m0statwirq_trigger_ly44_lyc44_40_48_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_1_dmg08_out3.gb")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_2_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_2_dmg08_out3.gb")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_3_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_3_dmg08_out2.gb")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_4_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_4_dmg08_out0.gb")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_00_00_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_00_00_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_00_00_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_00_00_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_00_10_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_00_10_dmg08_out2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_00_10_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_00_10_dmg08_out2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_00_ef_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_00_ef_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_00_ef_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_00_ef_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_00_ff_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_00_ff_dmg08_out2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_00_ff_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_00_ff_dmg08_out2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_10_00_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_10_00_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_10_00_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_10_00_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_10_10_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_10_10_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_10_10_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_10_10_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_10_ef_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_10_ef_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_10_ef_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_10_ef_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_10_ff_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_10_ff_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_10_ff_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_10_ff_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ef_00_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ef_00_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ef_00_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ef_00_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ef_10_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ef_10_dmg08_out2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ef_10_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ef_10_dmg08_out2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ef_ef_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ef_ef_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ef_ef_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ef_ef_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ef_ff_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ef_ff_dmg08_out2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ef_ff_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ef_ff_dmg08_out2_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ff_00_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ff_00_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ff_00_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ff_00_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ff_10_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ff_10_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ff_10_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ff_10_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ff_ef_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ff_ef_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ff_ef_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ff_ef_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ff_ff_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ff_ff_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ff_ff_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ff_ff_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ly94_lyc94_00_10_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ly94_lyc94_00_10_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ly94_lyc94_00_10_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ly94_lyc94_00_10_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ly94_lyc94_00_50_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ly94_lyc94_00_50_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ly94_lyc94_00_50_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ly94_lyc94_00_50_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ly94_lyc94_40_10_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ly94_lyc94_40_10_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ly94_lyc94_40_10_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ly94_lyc94_40_10_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ly94_lyc94_40_50_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ly94_lyc94_40_50_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ly94_lyc94_40_50_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ly94_lyc94_40_50_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ly94_lyc94_40_50_2_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ly94_lyc94_40_50_2_dmg08_outE0_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ly94_lyc94_40_50_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ly94_lyc94_40_50_2_dmg08_outE0_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ly94_lyc94_40_50_3_oute2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ly94_lyc94_40_50_3_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ly94_lyc94_40_50_3_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ly94_lyc94_40_50_3_dmg08_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ly94_lyc94_40_50_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ly94_lyc94_40_50_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ly94_lyc94_40_50_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ly94_lyc94_40_50_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ly94_lyc94_40_50_ds_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ly94_lyc94_40_50_ds_1_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m1statwirq_trigger_ly94_lyc94_40_50_ds_2_oute2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m1statwirq_trigger_ly94_lyc94_40_50_ds_2_cgb04c_outE2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_00_00_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_00_00_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_00_00_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_00_00_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_00_20_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_00_20_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_00_20_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_00_20_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_00_df_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_00_df_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_00_df_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_00_df_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_00_ff_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_00_ff_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_00_ff_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_00_ff_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_20_00_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_20_00_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_20_00_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_20_00_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_20_20_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_20_20_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_20_20_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_20_20_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_20_df_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_20_df_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_20_df_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_20_df_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_20_ff_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_20_ff_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_20_ff_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_20_ff_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_df_00_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_df_00_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_df_00_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_df_00_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_df_20_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_df_20_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_df_20_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_df_20_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_df_df_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_df_df_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_df_df_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_df_df_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_df_ff_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_df_ff_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_df_ff_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_df_ff_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_ff_00_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_ff_00_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_ff_00_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_ff_00_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_ff_20_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_ff_20_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_ff_20_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_ff_20_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_ff_df_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_ff_df_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_ff_df_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_ff_df_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_ff_ff_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_ff_ff_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2statwirq_trigger_ff_ff_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/miscmstatirq/m2statwirq_trigger_ff_ff_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod oam_access {
    use super::*;


    #[test]
    #[ignore]
    fn oam_access_10spritesprline_postread_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/10spritesprline_postread_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oam_access_10spritesprline_postread_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/10spritesprline_postread_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oam_access_10spritesprline_postread_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/10spritesprline_postread_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oam_access_10spritesprline_postread_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/10spritesprline_postread_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn midread_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/midread_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn midread_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/midread_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn midread_2_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/midread_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn midread_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/midread_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn midread_3_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/midread_3_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn midread_3_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/midread_3_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn midwrite_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/midwrite_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn midwrite_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/midwrite_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn midwrite_2_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/midwrite_2_dmg08_out1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn midwrite_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/midwrite_2_dmg08_out1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn midwrite_3_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/midwrite_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn midwrite_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/midwrite_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/postread_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/postread_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/postread_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/postread_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/postread_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/postread_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_scx2_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/postread_scx2_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_scx2_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/postread_scx2_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_scx2_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/postread_scx2_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_scx2_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/postread_scx2_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_scx3_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/postread_scx3_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_scx3_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/postread_scx3_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_scx3_3_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/postread_scx3_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_scx3_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/postread_scx3_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_scx5_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/postread_scx5_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_scx5_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/postread_scx5_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_scx5_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/postread_scx5_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_scx5_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/postread_scx5_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_scx5_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/postread_scx5_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_scx5_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/postread_scx5_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postwrite_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/postwrite_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postwrite_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/postwrite_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postwrite_2_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/postwrite_2_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postwrite_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/postwrite_2_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postwrite_2_scx3_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/postwrite_2_scx3_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postwrite_2_scx3_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/postwrite_2_scx3_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postwrite_ds_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/postwrite_ds_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postwrite_ds_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/postwrite_ds_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postwrite_scx1_ds_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/postwrite_scx1_ds_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postwrite_scx1_ds_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/postwrite_scx1_ds_2_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn preread_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/preread_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn preread_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/preread_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn preread_2_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/preread_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn preread_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/preread_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn preread_ds_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/preread_ds_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn preread_ds_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/preread_ds_2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn preread_ds_lcdoffset1_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/preread_ds_lcdoffset1_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn preread_ds_lcdoffset1_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/preread_ds_lcdoffset1_2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn preread_lcdoffset1_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/preread_lcdoffset1_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn preread_lcdoffset1_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/preread_lcdoffset1_2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn prewrite_1_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/prewrite_1_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn prewrite_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/prewrite_1_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn prewrite_2_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/prewrite_2_dmg08_out1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn prewrite_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/prewrite_2_dmg08_out1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn prewrite_3_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/prewrite_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn prewrite_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/prewrite_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn prewrite_ds_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/prewrite_ds_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn prewrite_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/prewrite_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn prewrite_ds_lcdoffset1_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/prewrite_ds_lcdoffset1_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn prewrite_ds_lcdoffset1_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/prewrite_ds_lcdoffset1_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn prewrite_lcdoffset1_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/prewrite_lcdoffset1_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn prewrite_lcdoffset1_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oam_access/prewrite_lcdoffset1_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod oamdma {
    use super::*;


    #[test]
    #[ignore]
    fn late_sp00x_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp00x_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp00x_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp00x_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp00x_2_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp00x_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp00x_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp00x_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp00x_ds_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp00x_ds_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp00x_ds_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp00x_ds_2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp00y_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp00y_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp00y_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp00y_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp00y_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp00y_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp00y_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp00y_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp00y_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp00y_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp00y_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp00y_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp01x_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp01x_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp01x_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp01x_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp01x_2_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp01x_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp01x_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp01x_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp01x_ds_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp01x_ds_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp01x_ds_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp01x_ds_2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp01y_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp01y_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp01y_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp01y_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp01y_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp01y_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp01y_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp01y_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp01y_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp01y_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp01y_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp01y_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp02x_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp02x_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp02x_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp02x_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp02x_2_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp02x_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp02x_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp02x_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp02y_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp02y_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp02y_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp02y_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp02y_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp02y_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp02y_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp02y_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp39x_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp39x_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp39x_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp39x_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp39x_2_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp39x_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp39x_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp39x_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp39x_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp39x_3_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp39x_4_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp39x_4_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp39x_ds_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp39x_ds_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp39x_ds_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp39x_ds_2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp39y_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp39y_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp39y_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp39y_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp39y_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp39y_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp39y_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp39y_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp39y_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp39y_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn late_sp39y_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/late_sp39y_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_busydelay_1_out5_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_busydelay_1_dmg08_cgb04c_out5.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_busydelay_1_out5_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_busydelay_1_dmg08_cgb04c_out5.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_late_halt_stat_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_late_halt_stat_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_late_halt_stat_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_late_halt_stat_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_late_halt_stat_2_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_late_halt_stat_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_late_halt_stat_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_late_halt_stat_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_late_speedchange_stat_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_late_speedchange_stat_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_late_speedchange_stat_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_late_speedchange_stat_2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_busyread0000_1_out4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_busyread0000_1_dmg08_cgb04c_out4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_busyread0000_1_out4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_busyread0000_1_dmg08_cgb04c_out4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_busyread0000_2_out5_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_busyread0000_2_dmg08_cgb04c_out5.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_busyread0000_2_out5_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_busyread0000_2_dmg08_cgb04c_out5.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_busyread0000_3_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_busyread0000_3_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_busyread0000_3_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_busyread0000_3_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_busyread0000_4_out5_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_busyread0000_4_dmg08_cgb04c_out5.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_busyread0000_4_out5_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_busyread0000_4_dmg08_cgb04c_out5.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_busyread0000_ds_1_out4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_busyread0000_ds_1_cgb04c_out4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_busyread0000_ds_2_out5_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_busyread0000_ds_2_cgb04c_out5.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_busyread0000_ds_3_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_busyread0000_ds_3_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_busyread8000_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_busyread8000_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_busyread8000_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_busyread8000_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_busyreada000_1_out5_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_busyreadA000_1_dmg08_cgb04c_out5.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_busyreada000_1_out5_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_busyreadA000_1_dmg08_cgb04c_out5.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_busyreada000_2_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_busyreadA000_2_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_busyreada000_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_busyreadA000_2_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_busyreadc000_1_out5_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_busyreadC000_1_dmg08_out5_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_busyreadc000_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_busyreadC000_1_dmg08_out5_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_busyreadc000_2_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_busyreadC000_2_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_busyreadc000_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_busyreadC000_2_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_busyreadfe00_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_busyreadFE00_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_busyreadfe00_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_busyreadFE00_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_busyreadfe00_2_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_busyreadFE00_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_busyreadfe00_2_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_busyreadFE00_2_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_busyreadff4b_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_busyreadFF4B_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_busyreadff4b_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_busyreadFF4B_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_rombankchange_1_out4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_rombankchange_1_dmg08_cgb04c_out4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_rombankchange_1_out4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_rombankchange_1_dmg08_cgb04c_out4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_rombankchange_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_rombankchange_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_rombankchange_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_rombankchange_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_srambankchange_1_out4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_srambankchange_1_dmg08_cgb04c_out4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_srambankchange_1_out4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_srambankchange_1_dmg08_cgb04c_out4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_srambankchange_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_srambankchange_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_srambankchange_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_srambankchange_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src0000_wrambankchange_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src0000_wrambankchange_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src8000_busyread0000_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src8000_busyread0000_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src8000_busyread0000_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src8000_busyread0000_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src8000_busyread8000_1_out5_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src8000_busyread8000_1_dmg08_cgb04c_out5.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src8000_busyread8000_1_out5_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src8000_busyread8000_1_dmg08_cgb04c_out5.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src8000_busyread8000_2_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src8000_busyread8000_2_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src8000_busyread8000_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src8000_busyread8000_2_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src8000_busyreada000_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src8000_busyreadA000_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src8000_busyreada000_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src8000_busyreadA000_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src8000_busyreadc000_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src8000_busyreadC000_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src8000_busyreadc000_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src8000_busyreadC000_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src8000_busywrite8000_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src8000_busywrite8000_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src8000_busywrite8000_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src8000_busywrite8000_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src8000_srcchange0000_busyinc_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src8000_srcchange0000_busyinc_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src8000_srcchange0000_busyinc_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src8000_srcchange0000_busyinc_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src8000_srcchange0000_busyread0000_1_out5_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src8000_srcchange0000_busyread0000_1_dmg08_cgb04c_out5.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src8000_srcchange0000_busyread0000_1_out5_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src8000_srcchange0000_busyread0000_1_dmg08_cgb04c_out5.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src8000_srcchange0000_busyread0000_2_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src8000_srcchange0000_busyread0000_2_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src8000_srcchange0000_busyread0000_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src8000_srcchange0000_busyread0000_2_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src8000_srcchangec000_busyread8000_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src8000_srcchangeC000_busyread8000_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src8000_srcchangec000_busyread8000_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src8000_srcchangeC000_busyread8000_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src8000_vrambankchange_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src8000_vrambankchange_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src8000_vrambankchange_2_out4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src8000_vrambankchange_2_cgb04c_out4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src8000_vrambankchange_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src8000_vrambankchange_3_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_src8000_vrambankchange_4_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_src8000_vrambankchange_4_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srca000_busyread0000_1_out5_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcA000_busyread0000_1_dmg08_cgb04c_out5.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srca000_busyread0000_1_out5_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcA000_busyread0000_1_dmg08_cgb04c_out5.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srca000_busyread0000_2_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcA000_busyread0000_2_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srca000_busyread0000_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcA000_busyread0000_2_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srca000_busyreadc000_1_out5_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcA000_busyreadC000_1_dmg08_out5_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srca000_busyreadc000_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcA000_busyreadC000_1_dmg08_out5_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srca000_busyreadc000_2_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcA000_busyreadC000_2_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srca000_busyreadc000_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcA000_busyreadC000_2_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srca000_busywrite4000_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcA000_busywrite4000_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srca000_busywrite4000_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcA000_busywrite4000_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srca000_srambankchange_1_out4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcA000_srambankchange_1_dmg08_cgb04c_out4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srca000_srambankchange_1_out4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcA000_srambankchange_1_dmg08_cgb04c_out4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srca000_srambankchange_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcA000_srambankchange_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srca000_srambankchange_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcA000_srambankchange_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcc000_busyreada000_1_out5_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcC000_busyreadA000_1_dmg08_out5_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcc000_busyreada000_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcC000_busyreadA000_1_dmg08_out5_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcc000_busyreada000_2_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcC000_busyreadA000_2_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcc000_busyreada000_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcC000_busyreadA000_2_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcc000_srambankchange_1_out4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcC000_srambankchange_1_dmg08_out4_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcc000_srambankchange_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcC000_srambankchange_1_dmg08_out4_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcc000_srambankchange_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcC000_srambankchange_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcc000_srambankchange_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcC000_srambankchange_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcd000_wrambankchange_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcD000_wrambankchange_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcd000_wrambankchange_2_out4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcD000_wrambankchange_2_cgb04c_out4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcdf00_readfe00_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcDF00_readFE00_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcdf00_readfe00_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcDF00_readFE00_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srce000_readfe00_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcE000_readFE00_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srce000_readfe00_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcE000_readFE00_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcf000_busyread0000_1_out9_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcF000_busyread0000_1_dmg08_out9_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("9".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcf000_busyread0000_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcF000_busyread0000_1_dmg08_out9_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcf000_busyread0000_2_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcF000_busyread0000_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcf000_busyread0000_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcF000_busyread0000_2_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcf000_busyread8000_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcF000_busyread8000_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcf000_busyread8000_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcF000_busyread8000_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcf000_busyreada000_out6_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcF000_busyreadA000_dmg08_out6_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("6".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcf000_busyreada000_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcF000_busyreadA000_dmg08_out6_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcf000_busyreadc000_out6_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcF000_busyreadC000_dmg08_out6_cgb_xoutblank.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("6".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcfd00_readfe00_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcFD00_readFE00_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcfd00_readfe00_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcFD00_readFE00_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcfe00_busyread0000_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcFE00_busyread0000_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcfe00_busyread0000_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcFE00_busyread0000_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcfe00_busyread8000_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcFE00_busyread8000_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcfe00_busyread8000_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcFE00_busyread8000_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcfe00_busyreada000_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcFE00_busyreadA000_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcfe00_busyreada000_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcFE00_busyreadA000_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcfe00_busyreadc000_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcFE00_busyreadC000_dmg08_out0_cgb_xoutblank.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcfe00_readfe00_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcFE00_readFE00_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcfe00_readfe00_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcFE00_readFE00_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcff00_busyread0000_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcFF00_busyread0000_dmg08_out1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcff00_busyread0000_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcFF00_busyread0000_dmg08_out1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcff00_busyread8000_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcFF00_busyread8000_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcff00_busyread8000_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcFF00_busyread8000_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcff00_busyreada000_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcFF00_busyreadA000_dmg08_out1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcff00_busyreada000_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcFF00_busyreadA000_dmg08_out1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcff00_busyreadc000_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcFF00_busyreadC000_dmg08_out1_cgb_xoutblank.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcff00_busyreadff4b_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcFF00_busyreadFF4B_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcff00_busyreadff4b_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcFF00_busyreadFF4B_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcff00_readfe00_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcFF00_readFE00_dmg08_out1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcff00_readfe00_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcFF00_readFE00_dmg08_out1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcff00_readfe45_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcFF00_readFE45_dmg08_out1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdma_srcff00_readfe45_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdma_srcFF00_readFE45_dmg08_out1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdmasrc80_halt_lycirq_read8000_out81_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdmasrc80_halt_lycirq_read8000_dmg08_cgb04c_out81.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("81".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdmasrc80_halt_lycirq_read8000_out81_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdmasrc80_halt_lycirq_read8000_dmg08_cgb04c_out81.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("81".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdmasrc80_halt_m2irq_read8000_out81_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdmasrc80_halt_m2irq_read8000_dmg08_cgb04c_out81.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("81".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdmasrc80_halt_m2irq_read8000_out81_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdmasrc80_halt_m2irq_read8000_dmg08_cgb04c_out81.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("81".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn oamdmasrcc0_speedchange_readc000_out11_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/oamdma/oamdmasrcC0_speedchange_readC000_cgb04c_out11.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("11".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod scx_during_m3 {
    use super::*;


    mod scx_0060c0 {
        use super::*;


        #[test]
        #[ignore]
        fn scx_during_m3_1_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_1_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_1_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_1_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_2_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_2_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_2_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_3_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_3_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_4_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_4_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_4_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_4_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_5_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_5_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_5_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_5_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_6_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_6.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_6_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_6_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_6.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_6_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_1_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_ds_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_ds_1_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_ds_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_ds_2_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_ds_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_ds_3_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_4_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_ds_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_ds_4_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_5_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_ds_5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_ds_5_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_6_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_ds_6.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_ds_6_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_7_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_ds_7.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_ds_7_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_8_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_ds_8.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0060c0/scx_during_m3_ds_8_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }
    }


    mod scx_0063c0 {
        use super::*;


        #[test]
        #[ignore]
        fn scx_during_m3_1_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_1_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_1_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_1_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_2_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_2_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_2_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_3_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_3_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_4_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_4_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_4_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_4_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_5_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_5_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_5_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_5_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_6_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_6.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_6_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_6_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_6.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_6_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_1_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_ds_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_ds_1_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_ds_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_ds_2_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_ds_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_ds_3_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_4_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_ds_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_ds_4_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_5_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_ds_5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_ds_5_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_6_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_ds_6.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_ds_6_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_7_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_ds_7.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_ds_7_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_8_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_ds_8.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0063c0/scx_during_m3_ds_8_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }
    }


    mod scx_0360c0 {
        use super::*;


        #[test]
        #[ignore]
        fn scx_during_m3_1_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_1_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_1_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_1_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_2_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_2_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_2_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_3_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_3_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_4_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_4_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_4_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_4_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_5_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_5_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_5_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_5_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_6_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_6.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_6_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_6_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_6.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_6_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_1_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_ds_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_ds_1_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_ds_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_ds_2_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_ds_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_ds_3_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_4_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_ds_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_ds_4_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_5_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_ds_5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_ds_5_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_6_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_ds_6.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_ds_6_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_7_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_ds_7.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_ds_7_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_8_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_ds_8.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0360c0/scx_during_m3_ds_8_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }
    }


    mod scx_0363c0 {
        use super::*;


        #[test]
        #[ignore]
        fn scx_during_m3_1_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_1_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_1_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_1_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_2_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_2_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_2_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_3_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_3_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_4_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_4_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_4_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_4_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_5_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_5_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_5_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_5_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_6_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_6.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_6_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_6_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_6.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_6_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_1_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_ds_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_ds_1_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_ds_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_ds_2_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_ds_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_ds_3_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_4_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_ds_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_ds_4_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_5_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_ds_5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_ds_5_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_6_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_ds_6.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_ds_6_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_7_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_ds_7.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_ds_7_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_8_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_ds_8.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0363c0/scx_during_m3_ds_8_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }
    }


    mod scx_0367c0 {
        use super::*;


        #[test]
        #[ignore]
        fn scx_during_m3_1_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_1_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_1_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_1_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_2_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_2_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_2_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_3_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_3_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_4_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_4_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_4_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_4_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_5_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_5_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_5_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_5_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_6_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_6.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_6_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_6_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_6.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_6_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_1_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_ds_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_ds_1_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_ds_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_ds_2_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_ds_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_ds_3_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_4_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_ds_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_ds_4_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_5_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_ds_5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_ds_5_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_6_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_ds_6.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_ds_6_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_7_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_ds_7.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_ds_7_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_8_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_ds_8.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0367c0/scx_during_m3_ds_8_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }
    }


    mod scx_0761c0 {
        use super::*;


        #[test]
        #[ignore]
        fn scx_during_m3_1_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_1_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_1_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_1_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_2_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_2_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_2_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_3_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_3_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_4_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_4_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_4_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_4_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_5_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_5_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_5_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_5_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_6_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_6.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_6_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_6_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_6.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_6_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_1_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_ds_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_ds_1_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_ds_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_ds_2_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_ds_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_ds_3_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_4_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_ds_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_ds_4_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_5_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_ds_5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_ds_5_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_6_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_ds_6.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_ds_6_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_7_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_ds_7.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_ds_7_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_ds_8_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_ds_8.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_0761c0/scx_during_m3_ds_8_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }
    }


    mod scx_during_m3_other {
        use super::*;


        #[test]
        #[ignore]
        fn scx1_scx0_during_m3_1_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx1_scx0_during_m3_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx1_scx0_during_m3_1_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx1_scx0_during_m3_1_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx1_scx0_during_m3_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx1_scx0_during_m3_1_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx2_scx0_during_m3_1_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx2_scx0_during_m3_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx2_scx0_during_m3_1_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx2_scx0_during_m3_1_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx2_scx0_during_m3_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx2_scx0_during_m3_1_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx2_scx1_during_m3_1_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx2_scx1_during_m3_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx2_scx1_during_m3_1_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx2_scx1_during_m3_1_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx2_scx1_during_m3_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx2_scx1_during_m3_1_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_attrib_during_m3_spx1_ds_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_attrib_during_m3_spx1_ds.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_attrib_during_m3_spx1_ds_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_attrib_during_m3_spx2_ds_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_attrib_during_m3_spx2_ds.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_attrib_during_m3_spx2_ds_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_spx0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_during_m3_spx0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_during_m3_spx0_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_spx0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_during_m3_spx0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_during_m3_spx0_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_spx1_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_during_m3_spx1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_during_m3_spx1_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_spx1_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_during_m3_spx1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_during_m3_spx1_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_spx2_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_during_m3_spx2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_during_m3_spx2_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_spx2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_during_m3_spx2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_during_m3_spx2_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_during_m3_spx2_ds_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_during_m3_spx2_ds.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scx_during_m3/scx_during_m3_spx2_ds_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_m3_extend_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_m3_extend_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_m3_extend_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_m3_extend_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_m3_extend_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_m3_extend_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_m3_extend_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_m3_extend_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_m3_extend_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_m3_extend_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scx_m3_extend_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scx_during_m3/scx_m3_extend_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }
    }
}


mod scy {
    use super::*;


    mod scx3 {
        use super::*;


        #[test]
        #[ignore]
        fn scy_during_m3_1_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scy/scx3/scy_during_m3_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scx3/scy_during_m3_1_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_1_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scx3/scy_during_m3_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scx3/scy_during_m3_1_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_2_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scy/scx3/scy_during_m3_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scx3/scy_during_m3_2_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scx3/scy_during_m3_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scx3/scy_during_m3_2_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scy/scx3/scy_during_m3_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scx3/scy_during_m3_3_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scx3/scy_during_m3_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scx3/scy_during_m3_3_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_4_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scy/scx3/scy_during_m3_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scx3/scy_during_m3_4_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_4_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scx3/scy_during_m3_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scx3/scy_during_m3_4_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_5_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scy/scx3/scy_during_m3_5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scx3/scy_during_m3_5_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_5_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scx3/scy_during_m3_5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scx3/scy_during_m3_5_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_6_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scy/scx3/scy_during_m3_6.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scx3/scy_during_m3_6_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_6_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scx3/scy_during_m3_6.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scx3/scy_during_m3_6_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }
    }


    mod scy_other {
        use super::*;


        #[test]
        #[ignore]
        fn scy_during_m3_1_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_1_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_1_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_1_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_2_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_2_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_2_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_3_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_3_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_4_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_4_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_4_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_4_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_5_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_5_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_5_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_5_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_6_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_6.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_6_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_6_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_6.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_6_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_ds_1_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_ds_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_ds_1_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_ds_2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_ds_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_ds_2_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_ds_3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_ds_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_ds_3_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_ds_4_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_ds_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_ds_4_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_ds_5_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_ds_5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_ds_5_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_ds_6_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_ds_6.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_ds_6_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_ds_7_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_ds_7.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_ds_7_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx08_1_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx08_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx08_1_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx08_1_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx08_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx08_1_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx08_2_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx08_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx08_2_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx08_2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx08_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx08_2_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx08_3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx08_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx08_3_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx08_3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx08_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx08_3_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx08_4_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx08_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx08_4_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx08_ds_1_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx08_ds_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx08_ds_1_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx08_ds_2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx08_ds_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx08_ds_2_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx08_ds_3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx08_ds_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx08_ds_3_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx08_ds_4_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx08_ds_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx08_ds_4_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx09_1_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx09_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx09_1_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx09_1_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx09_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx09_1_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx09_2_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx09_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx09_2_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx09_2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx09_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx09_2_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx09_3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx09_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx09_3_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx09_3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx09_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx09_3_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx09_4_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx09_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx09_4_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx09_ds_1_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx09_ds_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx09_ds_1_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx09_ds_2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx09_ds_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx09_ds_2_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx09_ds_3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx09_ds_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx09_ds_3_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx09_ds_4_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx09_ds_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx09_ds_4_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx0a_1_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx0A_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx0A_1_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx0a_1_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx0A_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx0A_1_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx0a_2_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx0A_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx0A_2_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx0a_2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx0A_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx0A_2_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx0a_3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx0A_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx0A_3_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx0a_3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx0A_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx0A_3_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx0a_4_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx0A_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx0A_4_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx0b_1_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx0B_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx0B_1_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx0b_1_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx0B_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx0B_1_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx0b_2_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx0B_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx0B_2_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx0b_2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx0B_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx0B_2_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx0b_3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx0B_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx0B_3_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx0b_3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx0B_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx0B_3_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn scy_during_m3_spx0b_4_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/scy/scy_during_m3_spx0B_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/scy/scy_during_m3_spx0B_4_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }
    }
}


mod serial {
    use super::*;


    #[test]
    #[ignore]
    fn div_write_start_wait_read_if_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/div_write_start_wait_read_if_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn div_write_start_wait_read_if_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/div_write_start_wait_read_if_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn div_write_start_wait_read_if_2_oute8_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/div_write_start_wait_read_if_2_dmg08_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn div_write_start_wait_read_if_2_oute8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/div_write_start_wait_read_if_2_dmg08_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn nopx1_div_write_start_wait_read_if_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/nopx1_div_write_start_wait_read_if_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn nopx1_div_write_start_wait_read_if_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/nopx1_div_write_start_wait_read_if_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn nopx1_div_write_start_wait_read_if_2_oute8_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/nopx1_div_write_start_wait_read_if_2_dmg08_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn nopx1_div_write_start_wait_read_if_2_oute8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/nopx1_div_write_start_wait_read_if_2_dmg08_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn nopx1_start83_wait_read_if_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/nopx1_start83_wait_read_if_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn nopx1_start83_wait_read_if_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/nopx1_start83_wait_read_if_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn nopx1_start83_wait_read_if_2_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/nopx1_start83_wait_read_if_2_dmg08_outE0_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn nopx1_start83_wait_read_if_2_oute8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/nopx1_start83_wait_read_if_2_dmg08_outE0_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn nopx1_start_wait_read_if_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/nopx1_start_wait_read_if_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn nopx1_start_wait_read_if_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/nopx1_start_wait_read_if_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn nopx1_start_wait_read_if_2_oute8_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/nopx1_start_wait_read_if_2_dmg08_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn nopx1_start_wait_read_if_2_oute8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/nopx1_start_wait_read_if_2_dmg08_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn nopx2_start83_wait_read_if_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/nopx2_start83_wait_read_if_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn nopx2_start83_wait_read_if_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/nopx2_start83_wait_read_if_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn nopx2_start83_wait_read_if_2_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/nopx2_start83_wait_read_if_2_dmg08_outE0_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn nopx2_start83_wait_read_if_2_oute8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/nopx2_start83_wait_read_if_2_dmg08_outE0_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn nopx2_start_wait_read_if_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/nopx2_start_wait_read_if_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn nopx2_start_wait_read_if_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/nopx2_start_wait_read_if_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn nopx2_start_wait_read_if_2_oute8_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/nopx2_start_wait_read_if_2_dmg08_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn nopx2_start_wait_read_if_2_oute8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/nopx2_start_wait_read_if_2_dmg08_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start83_late_div_write_wait_read_if_1a_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start83_late_div_write_wait_read_if_1a_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start83_late_div_write_wait_read_if_1b_oute8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start83_late_div_write_wait_read_if_1b_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start83_late_div_write_wait_read_if_2a_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start83_late_div_write_wait_read_if_2a_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start83_late_div_write_wait_read_if_2b_oute8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start83_late_div_write_wait_read_if_2b_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_late_div_write_wait_read_if_1a_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_late_div_write_wait_read_if_1a_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_late_div_write_wait_read_if_1a_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_late_div_write_wait_read_if_1a_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_late_div_write_wait_read_if_1b_oute8_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_late_div_write_wait_read_if_1b_dmg08_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_late_div_write_wait_read_if_1b_oute8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_late_div_write_wait_read_if_1b_dmg08_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_late_div_write_wait_read_if_2a_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_late_div_write_wait_read_if_2a_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_late_div_write_wait_read_if_2a_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_late_div_write_wait_read_if_2a_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_late_div_write_wait_read_if_2b_oute8_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_late_div_write_wait_read_if_2b_dmg08_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_late_div_write_wait_read_if_2b_oute8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_late_div_write_wait_read_if_2b_dmg08_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_late_div_write_wait_read_if_3a_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_late_div_write_wait_read_if_3a_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_late_div_write_wait_read_if_3a_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_late_div_write_wait_read_if_3a_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_late_div_write_wait_read_if_3b_oute8_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_late_div_write_wait_read_if_3b_dmg08_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_late_div_write_wait_read_if_3b_oute8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_late_div_write_wait_read_if_3b_dmg08_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_late_div_write_wait_read_if_4_oute8_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_late_div_write_wait_read_if_4_dmg08_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_late_div_write_wait_read_if_4_oute8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_late_div_write_wait_read_if_4_dmg08_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_clear_if_read_if_1_oute8_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_clear_if_read_if_1_dmg08_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_clear_if_read_if_1_oute8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_clear_if_read_if_1_dmg08_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_clear_if_read_if_2_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_clear_if_read_if_2_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_clear_if_read_if_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_clear_if_read_if_2_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_clear_if_read_if_ds_1_oute8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_clear_if_read_if_ds_1_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_clear_if_read_if_ds_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_clear_if_read_if_ds_2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_read_if_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_read_if_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_read_if_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_read_if_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_read_if_2_oute8_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_read_if_2_dmg08_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_read_if_2_oute8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_read_if_2_dmg08_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_read_if_ds_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_read_if_ds_1_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_read_if_ds_2_oute8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_read_if_ds_2_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_read_sb_1_out7f_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_read_sb_1_dmg08_cgb04c_out7F.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7F".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_read_sb_1_out7f_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_read_sb_1_dmg08_cgb04c_out7F.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7F".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_read_sb_2_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_read_sb_2_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_read_sb_2_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_read_sb_2_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_read_sc_1_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_read_sc_1_dmg08_outFF_cgb04c_outFD.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_read_sc_1_outfd_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_read_sc_1_dmg08_outFF_cgb04c_outFD.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FD".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_read_sc_2_out7f_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_read_sc_2_dmg08_out7F_cgb04c_out7D.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7F".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_read_sc_2_out7d_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_read_sc_2_dmg08_out7F_cgb04c_out7D.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7D".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_restart_read_if_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_restart_read_if_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_restart_read_if_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_restart_read_if_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_restart_read_if_2_oute8_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_restart_read_if_2_dmg08_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_restart_read_if_2_oute8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_restart_read_if_2_dmg08_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_sc80_read_if_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_sc80_read_if_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_sc80_read_if_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_sc80_read_if_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_sc80_read_if_2_oute8_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_sc80_read_if_2_dmg08_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_sc80_read_if_2_oute8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_sc80_read_if_2_dmg08_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_stop_read_if_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_stop_read_if_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_stop_read_if_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_stop_read_if_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_stop_read_if_2_oute8_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_stop_read_if_2_dmg08_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_stop_read_if_2_oute8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_stop_read_if_2_dmg08_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_trigger_int8_read_if_1_oute8_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_trigger_int8_read_if_1_dmg08_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_trigger_int8_read_if_1_oute8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_trigger_int8_read_if_1_dmg08_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_trigger_int8_read_if_2_oute8_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_trigger_int8_read_if_2_dmg08_outE8_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_trigger_int8_read_if_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_trigger_int8_read_if_2_dmg08_outE8_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_trigger_int8_read_if_3_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_trigger_int8_read_if_3_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_trigger_int8_read_if_3_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_trigger_int8_read_if_3_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_trigger_int8_read_if_ds_1_oute8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_trigger_int8_read_if_ds_1_cgb04c_outE8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn start_wait_trigger_int8_read_if_ds_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/serial/start_wait_trigger_int8_read_if_ds_2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod sound {
    use super::*;


    #[test]
    #[ignore]
    fn ch1_div_write_reset_length_counter_timing_nr52_1_outf1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch1_div_write_reset_length_counter_timing_nr52_1_dmg08_cgb04c_outF1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch1_div_write_reset_length_counter_timing_nr52_1_outf1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch1_div_write_reset_length_counter_timing_nr52_1_dmg08_cgb04c_outF1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch1_div_write_reset_length_counter_timing_nr52_2_outf0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch1_div_write_reset_length_counter_timing_nr52_2_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch1_div_write_reset_length_counter_timing_nr52_2_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch1_div_write_reset_length_counter_timing_nr52_2_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch1_init_reset_sweep_counter_timing_nr52_1_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch1_init_reset_sweep_counter_timing_nr52_1_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch1_init_reset_sweep_counter_timing_nr52_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch1_init_reset_sweep_counter_timing_nr52_1_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch1_init_reset_sweep_counter_timing_nr52_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch1_init_reset_sweep_counter_timing_nr52_2_dmg08_out0_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch1_init_reset_sweep_counter_timing_nr52_2_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch1_init_reset_sweep_counter_timing_nr52_2_dmg08_out0_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch1_init_reset_sweep_counter_timing_nr52_3_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch1_init_reset_sweep_counter_timing_nr52_3_dmg08_out0_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch1_init_reset_sweep_counter_timing_nr52_3_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch1_init_reset_sweep_counter_timing_nr52_3_dmg08_out0_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch1_init_reset_sweep_counter_timing_nr52_4_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch1_init_reset_sweep_counter_timing_nr52_4_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch1_init_reset_sweep_counter_timing_nr52_4_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch1_init_reset_sweep_counter_timing_nr52_4_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch1_late_div_write_nr52_1a_outf1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch1_late_div_write_nr52_1a_dmg08_cgb04c_outF1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch1_late_div_write_nr52_1a_outf1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch1_late_div_write_nr52_1a_dmg08_cgb04c_outF1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch1_late_div_write_nr52_1b_outf0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch1_late_div_write_nr52_1b_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch1_late_div_write_nr52_1b_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch1_late_div_write_nr52_1b_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch1_late_div_write_nr52_2a_outf1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch1_late_div_write_nr52_2a_dmg08_cgb04c_outF1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch1_late_div_write_nr52_2a_outf1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch1_late_div_write_nr52_2a_dmg08_cgb04c_outF1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch1_late_div_write_nr52_2b_outf0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch1_late_div_write_nr52_2b_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch1_late_div_write_nr52_2b_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch1_late_div_write_nr52_2b_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_div_write_reset_length_counter_timing_nr52_1_outf2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_div_write_reset_length_counter_timing_nr52_1_dmg08_cgb04c_outF2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_div_write_reset_length_counter_timing_nr52_1_outf2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_div_write_reset_length_counter_timing_nr52_1_dmg08_cgb04c_outF2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_div_write_reset_length_counter_timing_nr52_2_outf0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_div_write_reset_length_counter_timing_nr52_2_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_div_write_reset_length_counter_timing_nr52_2_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_div_write_reset_length_counter_timing_nr52_2_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_init_reset_length_counter_timing_nr52_1_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_init_reset_length_counter_timing_nr52_1_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_init_reset_length_counter_timing_nr52_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_init_reset_length_counter_timing_nr52_1_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_init_reset_length_counter_timing_nr52_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_init_reset_length_counter_timing_nr52_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_init_reset_length_counter_timing_nr52_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_init_reset_length_counter_timing_nr52_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_init_reset_length_counter_timing_nr52_3_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_init_reset_length_counter_timing_nr52_3_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_init_reset_length_counter_timing_nr52_3_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_init_reset_length_counter_timing_nr52_3_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_init_reset_length_counter_timing_nr52_4_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_init_reset_length_counter_timing_nr52_4_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_init_reset_length_counter_timing_nr52_4_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_init_reset_length_counter_timing_nr52_4_dmg08_out2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_late_div_write_nr52_1a_outf2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_late_div_write_nr52_1a_dmg08_cgb04c_outF2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_late_div_write_nr52_1a_outf2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_late_div_write_nr52_1a_dmg08_cgb04c_outF2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_late_div_write_nr52_1b_outf0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_late_div_write_nr52_1b_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_late_div_write_nr52_1b_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_late_div_write_nr52_1b_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_late_div_write_nr52_2a_outf2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_late_div_write_nr52_2a_dmg08_cgb04c_outF2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_late_div_write_nr52_2a_outf2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_late_div_write_nr52_2a_dmg08_cgb04c_outF2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_late_div_write_nr52_2b_outf0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_late_div_write_nr52_2b_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_late_div_write_nr52_2b_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_late_div_write_nr52_2b_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_late_div_write_nr52_ds_1a_outf2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_late_div_write_nr52_ds_1a_cgb04c_outF2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_late_div_write_nr52_ds_1b_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_late_div_write_nr52_ds_1b_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_late_div_write_nr52_ds_2a_outf2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_late_div_write_nr52_ds_2a_cgb04c_outF2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_late_div_write_nr52_ds_2b_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_late_div_write_nr52_ds_2b_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_late_reset_nr52_1a_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_late_reset_nr52_1a_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_late_reset_nr52_1a_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_late_reset_nr52_1a_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_late_reset_nr52_1b_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_late_reset_nr52_1b_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_late_reset_nr52_1b_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_late_reset_nr52_1b_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_late_reset_nr52_2a_out2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_late_reset_nr52_2a_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_late_reset_nr52_2a_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_late_reset_nr52_2a_dmg08_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_late_reset_nr52_2b_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_late_reset_nr52_2b_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_late_reset_nr52_2b_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_late_reset_nr52_2b_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_late_reset_nr52_ds_1a_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_late_reset_nr52_ds_1a_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_late_reset_nr52_ds_1b_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_late_reset_nr52_ds_1b_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_late_reset_nr52_ds_2a_out2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_late_reset_nr52_ds_2a_cgb04c_out2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_late_reset_nr52_ds_2b_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_late_reset_nr52_ds_2b_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_reset_length_counter_timing_nr52_ds_1_outf2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_reset_length_counter_timing_nr52_ds_1_cgb04c_outF2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch2_reset_length_counter_timing_nr52_ds_2_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch2_reset_length_counter_timing_nr52_ds_2_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_div_write_reset_length_counter_timing_nr52_1_outf4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_div_write_reset_length_counter_timing_nr52_1_dmg08_cgb04c_outF4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_div_write_reset_length_counter_timing_nr52_1_outf4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_div_write_reset_length_counter_timing_nr52_1_dmg08_cgb04c_outF4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_div_write_reset_length_counter_timing_nr52_2_outf0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_div_write_reset_length_counter_timing_nr52_2_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_div_write_reset_length_counter_timing_nr52_2_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_div_write_reset_length_counter_timing_nr52_2_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_late_div_write_nr52_1a_outf4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_late_div_write_nr52_1a_dmg08_cgb04c_outF4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_late_div_write_nr52_1a_outf4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_late_div_write_nr52_1a_dmg08_cgb04c_outF4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_late_div_write_nr52_1b_outf0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_late_div_write_nr52_1b_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_late_div_write_nr52_1b_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_late_div_write_nr52_1b_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_late_div_write_nr52_2a_outf4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_late_div_write_nr52_2a_dmg08_cgb04c_outF4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_late_div_write_nr52_2a_outf4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_late_div_write_nr52_2a_dmg08_cgb04c_outF4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_late_div_write_nr52_2b_outf0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_late_div_write_nr52_2b_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_late_div_write_nr52_2b_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_late_div_write_nr52_2b_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nop_nr4init_freq7ff_read_ff30_ds_1_out10_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nop_nr4init_freq7ff_read_ff30_ds_1_cgb04c_out10.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("10".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nop_nr4init_freq7ff_read_ff30_ds_2_out32_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nop_nr4init_freq7ff_read_ff30_ds_2_cgb04c_out32.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("32".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7fd_read_ff30_1_out10_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7fd_read_ff30_1_dmg08_cgb04c_out10.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("10".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7fd_read_ff30_1_out10_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7fd_read_ff30_1_dmg08_cgb04c_out10.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("10".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7fd_read_ff30_2_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7fd_read_ff30_2_dmg08_outFF_cgb04c_out10.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7fd_read_ff30_2_out10_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7fd_read_ff30_2_dmg08_outFF_cgb04c_out10.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("10".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7fd_read_ff30_3_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7fd_read_ff30_3_dmg08_outFF_cgb04c_out32.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7fd_read_ff30_3_out32_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7fd_read_ff30_3_dmg08_outFF_cgb04c_out32.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("32".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7fd_read_ff30_4_out32_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7fd_read_ff30_4_dmg08_cgb04c_out32.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("32".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7fd_read_ff30_4_out32_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7fd_read_ff30_4_dmg08_cgb04c_out32.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("32".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7fd_write_ff30_1_out32_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7fd_write_ff30_1_dmg08_cgb04c_out32.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("32".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7fd_write_ff30_1_out32_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7fd_write_ff30_1_dmg08_cgb04c_out32.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("32".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7fd_write_ff30_2_out32_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7fd_write_ff30_2_dmg08_out32_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("32".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7fd_write_ff30_2_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7fd_write_ff30_2_dmg08_out32_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7fd_write_ff30_3_out00_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7fd_write_ff30_3_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7fd_write_ff30_3_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7fd_write_ff30_3_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7fd_write_ff30_4_out32_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7fd_write_ff30_4_dmg08_out32_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("32".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7fd_write_ff30_4_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7fd_write_ff30_4_dmg08_out32_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7fe_read_ff30_1_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7fe_read_ff30_1_dmg08_outFF_cgb04c_out10.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7fe_read_ff30_1_out10_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7fe_read_ff30_1_dmg08_outFF_cgb04c_out10.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("10".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7fe_read_ff30_2_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7fe_read_ff30_2_dmg08_outFF_cgb04c_out32.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7fe_read_ff30_2_out32_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7fe_read_ff30_2_dmg08_outFF_cgb04c_out32.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("32".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7fe_read_ff30_3_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7fe_read_ff30_3_dmg08_outFF_cgb04c_out32.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7fe_read_ff30_3_out32_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7fe_read_ff30_3_dmg08_outFF_cgb04c_out32.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("32".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7fe_read_ff30_4_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7fe_read_ff30_4_dmg08_outFF_cgb04c_out54.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7fe_read_ff30_4_out54_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7fe_read_ff30_4_dmg08_outFF_cgb04c_out54.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("54".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7ff_read_ff30_1_out32_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7ff_read_ff30_1_dmg08_cgb04c_out32.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("32".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7ff_read_ff30_1_out32_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7ff_read_ff30_1_dmg08_cgb04c_out32.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("32".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7ff_read_ff30_2_out54_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7ff_read_ff30_2_dmg08_cgb04c_out54.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("54".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7ff_read_ff30_2_out54_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7ff_read_ff30_2_dmg08_cgb04c_out54.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("54".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7ff_read_ff30_ds_1_out10_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7ff_read_ff30_ds_1_cgb04c_out10.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("10".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7ff_read_ff30_ds_2_out32_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7ff_read_ff30_ds_2_cgb04c_out32.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("32".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7ff_write_ff30_ds_1_out32_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7ff_write_ff30_ds_1_cgb04c_out32.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("32".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch3_reset_nr4init_freq7ff_write_ff30_ds_2_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch3_reset_nr4init_freq7ff_write_ff30_ds_2_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch4_div_write_reset_length_counter_timing_nr52_1_outf8_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch4_div_write_reset_length_counter_timing_nr52_1_dmg08_cgb04c_outF8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch4_div_write_reset_length_counter_timing_nr52_1_outf8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch4_div_write_reset_length_counter_timing_nr52_1_dmg08_cgb04c_outF8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch4_div_write_reset_length_counter_timing_nr52_2_outf0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch4_div_write_reset_length_counter_timing_nr52_2_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch4_div_write_reset_length_counter_timing_nr52_2_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch4_div_write_reset_length_counter_timing_nr52_2_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch4_late_div_write_nr52_1a_outf8_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch4_late_div_write_nr52_1a_dmg08_cgb04c_outF8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch4_late_div_write_nr52_1a_outf8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch4_late_div_write_nr52_1a_dmg08_cgb04c_outF8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch4_late_div_write_nr52_1b_outf0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch4_late_div_write_nr52_1b_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch4_late_div_write_nr52_1b_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch4_late_div_write_nr52_1b_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch4_late_div_write_nr52_2a_outf8_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch4_late_div_write_nr52_2a_dmg08_cgb04c_outF8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch4_late_div_write_nr52_2a_outf8_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch4_late_div_write_nr52_2a_dmg08_cgb04c_outF8.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F8".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch4_late_div_write_nr52_2b_outf0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch4_late_div_write_nr52_2b_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn ch4_late_div_write_nr52_2b_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/sound/ch4_late_div_write_nr52_2b_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod speedchange {
    use super::*;


    #[test]
    #[ignore]
    fn key1_set_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/key1_set_dmg08_outFF_cgb04c_out7F.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn key1_set_out7f_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/key1_set_dmg08_outFF_cgb04c_out7F.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7F".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn key1_set_unset_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/key1_set_unset_dmg08_outFF_cgb04c_out7E.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn key1_set_unset_out7e_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/key1_set_unset_dmg08_outFF_cgb04c_out7E.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7E".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m3stat_lcdoffds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/m2int_m3stat_lcdoffds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m3stat_lcdoffds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/m2int_m3stat_lcdoffds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m3stat_scx1_lcdoffds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/m2int_m3stat_scx1_lcdoffds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn m2int_m3stat_scx1_lcdoffds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/m2int_m3stat_scx1_lcdoffds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_ch2_nr52_1a_outf2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_ch2_nr52_1a_cgb04c_outF2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_ch2_nr52_1b_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_ch2_nr52_1b_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_ch2_nr52_2a_outf2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_ch2_nr52_2a_cgb04c_outF2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_ch2_nr52_2b_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_ch2_nr52_2b_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_ch2_nr52_ds_1a_outf2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_ch2_nr52_ds_1a_cgb04c_outF2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_ch2_nr52_ds_1b_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_ch2_nr52_ds_1b_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_ch2_nr52_ds_2a_outf2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_ch2_nr52_ds_2a_cgb04c_outF2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_ch2_nr52_ds_2b_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_ch2_nr52_ds_2b_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_div_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_div_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_div_2_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_div_2_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_div_nop_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_div_nop_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_div_nop_2_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_div_nop_2_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_frame1_m2int_m3stat_scx2_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_frame1_m2int_m3stat_scx2_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_frame1_m2int_m3stat_scx2_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_frame1_m2int_m3stat_scx2_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_frame1_m2int_m3stat_scx3_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_frame1_m2int_m3stat_scx3_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_frame1_m2int_m3stat_scx3_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_frame1_m2int_m3stat_scx3_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_key1_out7e_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_key1_cgb04c_out7E.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7E".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_lcdoff2_m2int_m3stat_scx3_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_lcdoff2_m2int_m3stat_scx3_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_lcdoff2_m2int_m3stat_scx3_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_lcdoff2_m2int_m3stat_scx3_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_lcdoff2_m2int_m3stat_scx4_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_lcdoff2_m2int_m3stat_scx4_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_lcdoff2_m2int_m3stat_scx4_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_lcdoff2_m2int_m3stat_scx4_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_lcdoff_m2int_m3stat_scx2_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_lcdoff_m2int_m3stat_scx2_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_lcdoff_m2int_m3stat_scx2_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_lcdoff_m2int_m3stat_scx2_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_lcdoff_m2int_m3stat_scx3_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_lcdoff_m2int_m3stat_scx3_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_lcdoff_m2int_m3stat_scx3_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_lcdoff_m2int_m3stat_scx3_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_lcdoff_nop_m2int_m3stat_scx1_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_lcdoff_nop_m2int_m3stat_scx1_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_lcdoff_nop_m2int_m3stat_scx1_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_lcdoff_nop_m2int_m3stat_scx1_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_lcdoff_nop_m2int_m3stat_scx4_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_lcdoff_nop_m2int_m3stat_scx4_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_lcdoff_nop_m2int_m3stat_scx4_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_lcdoff_nop_m2int_m3stat_scx4_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_lcdoff_nopx2_m2int_m3stat_scx2_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_lcdoff_nopx2_m2int_m3stat_scx2_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_lcdoff_nopx2_m2int_m3stat_scx2_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_lcdoff_nopx2_m2int_m3stat_scx2_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_lcdoff_nopx2_m2int_m3stat_scx3_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_lcdoff_nopx2_m2int_m3stat_scx3_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_lcdoff_nopx2_m2int_m3stat_scx3_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_lcdoff_nopx2_m2int_m3stat_scx3_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_ly44_m3_ly_1_out25_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_ly44_m3_ly_1_cgb04c_out25.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("25".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_ly44_m3_m3stat_scx2_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_ly44_m3_m3stat_scx2_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_ly44_m3_m3stat_scx2_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_ly44_m3_m3stat_scx2_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_ly44_m3_m3stat_scx3_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_ly44_m3_m3stat_scx3_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_ly44_m3_m3stat_scx3_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_ly44_m3_m3stat_scx3_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_ly44_m3_nop_m3stat_scx1_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_ly44_m3_nop_m3stat_scx1_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_ly44_m3_nop_m3stat_scx1_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_ly44_m3_nop_m3stat_scx1_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_ly44_m3_nop_m3stat_scx4_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_ly44_m3_nop_m3stat_scx4_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_ly44_m3_nop_m3stat_scx4_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_ly44_m3_nop_m3stat_scx4_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_ly44_m3_nopx2_m3stat_scx2_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_ly44_m3_nopx2_m3stat_scx2_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_ly44_m3_nopx2_m3stat_scx2_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_ly44_m3_nopx2_m3stat_scx2_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_ly44_m3_nopx2_m3stat_scx3_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_ly44_m3_nopx2_m3stat_scx3_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_ly44_m3_nopx2_m3stat_scx3_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_ly44_m3_nopx2_m3stat_scx3_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_ly44_m3_stat_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_ly44_m3_stat_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_ly44_m3_stat_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_ly44_m3_stat_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_ly44_m3_stat_3_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_ly44_m3_stat_3_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_ly44_m3_stat_4_outc2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_ly44_m3_stat_4_cgb04c_outC2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_m2int_m3stat_scx2_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_m2int_m3stat_scx2_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_m2int_m3stat_scx2_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_m2int_m3stat_scx2_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_m2int_m3stat_scx3_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_m2int_m3stat_scx3_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_m2int_m3stat_scx3_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_m2int_m3stat_scx3_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_nop_lcdoff_m2int_m3stat_scx2_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_nop_lcdoff_m2int_m3stat_scx2_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_nop_lcdoff_m2int_m3stat_scx2_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_nop_lcdoff_m2int_m3stat_scx2_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_nop_lcdoff_m2int_m3stat_scx3_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_nop_lcdoff_m2int_m3stat_scx3_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_nop_lcdoff_m2int_m3stat_scx3_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_nop_lcdoff_m2int_m3stat_scx3_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_nop_lcdoff_nop_m2int_m3stat_scx1_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_nop_lcdoff_nop_m2int_m3stat_scx1_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_nop_lcdoff_nop_m2int_m3stat_scx1_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_nop_lcdoff_nop_m2int_m3stat_scx1_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_nop_lcdoff_nop_m2int_m3stat_scx4_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_nop_lcdoff_nop_m2int_m3stat_scx4_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_nop_lcdoff_nop_m2int_m3stat_scx4_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_nop_lcdoff_nop_m2int_m3stat_scx4_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_nop_lcdoff_nopx2_m2int_m3stat_scx2_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_nop_lcdoff_nopx2_m2int_m3stat_scx2_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_nop_lcdoff_nopx2_m2int_m3stat_scx2_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_nop_lcdoff_nopx2_m2int_m3stat_scx2_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_nop_lcdoff_nopx2_m2int_m3stat_scx3_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_nop_lcdoff_nopx2_m2int_m3stat_scx3_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_nop_lcdoff_nopx2_m2int_m3stat_scx3_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_nop_lcdoff_nopx2_m2int_m3stat_scx3_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_nop_ly44_m3_m3stat_scx2_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_nop_ly44_m3_m3stat_scx2_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_nop_ly44_m3_m3stat_scx2_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_nop_ly44_m3_m3stat_scx2_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_nop_ly44_m3_m3stat_scx3_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_nop_ly44_m3_m3stat_scx3_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_nop_ly44_m3_m3stat_scx3_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_nop_ly44_m3_m3stat_scx3_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_nop_ly44_m3_nop_m3stat_scx1_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_nop_ly44_m3_nop_m3stat_scx1_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_nop_ly44_m3_nop_m3stat_scx1_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_nop_ly44_m3_nop_m3stat_scx1_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_nop_ly44_m3_nop_m3stat_scx4_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_nop_ly44_m3_nop_m3stat_scx4_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_nop_ly44_m3_nop_m3stat_scx4_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_nop_ly44_m3_nop_m3stat_scx4_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_nop_m2int_m3stat_scx1_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_nop_m2int_m3stat_scx1_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_nop_m2int_m3stat_scx1_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_nop_m2int_m3stat_scx1_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_nop_m2int_m3stat_scx4_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_nop_m2int_m3stat_scx4_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_nop_m2int_m3stat_scx4_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_nop_m2int_m3stat_scx4_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_tima00_1a_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_tima00_1a_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_tima00_1b_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_tima00_1b_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_tima00_2a_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_tima00_2a_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_tima00_2b_out02_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_tima00_2b_cgb04c_out02.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("02".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_tima01_1_out09_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_tima01_1_cgb04c_out09.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("09".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_tima01_2_out0a_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_tima01_2_cgb04c_out0A.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0A".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_tima01_nop_1_out0a_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_tima01_nop_1_cgb04c_out0A.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0A".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_tima01_nop_2_out0b_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_tima01_nop_2_cgb04c_out0B.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0B".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_tima02_1a_out02_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_tima02_1a_cgb04c_out02.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("02".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_tima02_1b_out03_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_tima02_1b_cgb04c_out03.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("03".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_tima02_2a_out03_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_tima02_2a_cgb04c_out03.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("03".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_tima02_2b_out04_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_tima02_2b_cgb04c_out04.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("04".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_tima03_1a_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_tima03_1a_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_tima03_1b_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_tima03_1b_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_tima03_2a_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_tima03_2a_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange2_tima03_2b_out02_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange2_tima03_2b_cgb04c_out02.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("02".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange3_ch2_nr52_1a_outf2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange3_ch2_nr52_1a_cgb04c_outF2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange3_ch2_nr52_1b_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange3_ch2_nr52_1b_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange3_ch2_nr52_2a_outf2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange3_ch2_nr52_2a_cgb04c_outF2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange3_ch2_nr52_2b_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange3_ch2_nr52_2b_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange3_ly44_m3_m3stat_scx1_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange3_ly44_m3_m3stat_scx1_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange3_ly44_m3_m3stat_scx1_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange3_ly44_m3_m3stat_scx1_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange3_ly44_m3_m3stat_scx2_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange3_ly44_m3_m3stat_scx2_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange3_ly44_m3_m3stat_scx2_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange3_ly44_m3_m3stat_scx2_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange3_ly44_m3_nop_m3stat_scx1_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange3_ly44_m3_nop_m3stat_scx1_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange3_ly44_m3_nop_m3stat_scx1_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange3_ly44_m3_nop_m3stat_scx1_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange3_ly44_m3_nop_m3stat_scx2_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange3_ly44_m3_nop_m3stat_scx2_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange3_ly44_m3_nop_m3stat_scx2_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange3_ly44_m3_nop_m3stat_scx2_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange3_nop_ly44_m3_m3stat_scx1_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange3_nop_ly44_m3_m3stat_scx1_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange3_nop_ly44_m3_m3stat_scx1_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange3_nop_ly44_m3_m3stat_scx1_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange3_nop_ly44_m3_m3stat_scx2_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange3_nop_ly44_m3_m3stat_scx2_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange3_nop_ly44_m3_m3stat_scx2_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange3_nop_ly44_m3_m3stat_scx2_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange4_ch2_nr52_1a_outf2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange4_ch2_nr52_1a_cgb04c_outF2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange4_ch2_nr52_1b_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange4_ch2_nr52_1b_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange4_ch2_nr52_2a_outf2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange4_ch2_nr52_2a_cgb04c_outF2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange4_ch2_nr52_2b_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange4_ch2_nr52_2b_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange4_ly44_m3_m3stat_scx1_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange4_ly44_m3_m3stat_scx1_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange4_ly44_m3_m3stat_scx1_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange4_ly44_m3_m3stat_scx1_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange4_ly44_m3_m3stat_scx2_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange4_ly44_m3_m3stat_scx2_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange4_ly44_m3_m3stat_scx2_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange4_ly44_m3_m3stat_scx2_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange4_ly44_m3_nop_m3stat_scx3_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange4_ly44_m3_nop_m3stat_scx3_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange4_ly44_m3_nop_m3stat_scx3_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange4_ly44_m3_nop_m3stat_scx3_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange4_ly44_m3_nop_m3stat_scx4_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange4_ly44_m3_nop_m3stat_scx4_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange4_ly44_m3_nop_m3stat_scx4_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange4_ly44_m3_nop_m3stat_scx4_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange4_nop_ly44_m3_m3stat_scx1_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange4_nop_ly44_m3_m3stat_scx1_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange4_nop_ly44_m3_m3stat_scx1_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange4_nop_ly44_m3_m3stat_scx1_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange4_nop_ly44_m3_m3stat_scx2_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange4_nop_ly44_m3_m3stat_scx2_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange4_nop_ly44_m3_m3stat_scx2_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange4_nop_ly44_m3_m3stat_scx2_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange5_ch2_nr52_1a_outf2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange5_ch2_nr52_1a_cgb04c_outF2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange5_ch2_nr52_1b_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange5_ch2_nr52_1b_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange5_ch2_nr52_2a_outf2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange5_ch2_nr52_2a_cgb04c_outF2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange5_ch2_nr52_2b_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange5_ch2_nr52_2b_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange5_ly44_m3_m3stat_scx1_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange5_ly44_m3_m3stat_scx1_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange5_ly44_m3_m3stat_scx1_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange5_ly44_m3_m3stat_scx1_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange5_ly44_m3_m3stat_scx2_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange5_ly44_m3_m3stat_scx2_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange5_ly44_m3_m3stat_scx2_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange5_ly44_m3_m3stat_scx2_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange5_ly44_m3_nop_m3stat_scx1_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange5_ly44_m3_nop_m3stat_scx1_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange5_ly44_m3_nop_m3stat_scx1_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange5_ly44_m3_nop_m3stat_scx1_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange5_ly44_m3_nop_m3stat_scx2_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange5_ly44_m3_nop_m3stat_scx2_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange5_ly44_m3_nop_m3stat_scx2_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange5_ly44_m3_nop_m3stat_scx2_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange5_nop_ly44_m3_m3stat_scx1_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange5_nop_ly44_m3_m3stat_scx1_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange5_nop_ly44_m3_m3stat_scx1_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange5_nop_ly44_m3_m3stat_scx1_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange5_nop_ly44_m3_m3stat_scx2_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange5_nop_ly44_m3_m3stat_scx2_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange5_nop_ly44_m3_m3stat_scx2_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange5_nop_ly44_m3_m3stat_scx2_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ch2_nr52_1a_outf2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ch2_nr52_1a_cgb04c_outF2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ch2_nr52_1b_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ch2_nr52_1b_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ch2_nr52_2a_outf2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ch2_nr52_2a_cgb04c_outF2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ch2_nr52_2b_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ch2_nr52_2b_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ch2_nr52_ds_1a_outf2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ch2_nr52_ds_1a_cgb04c_outF2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ch2_nr52_ds_1b_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ch2_nr52_ds_1b_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ch2_nr52_ds_2a_outf2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ch2_nr52_ds_2a_cgb04c_outF2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ch2_nr52_ds_2b_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ch2_nr52_ds_2b_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_div_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_div_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_div_2_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_div_2_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_div_nop_1_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_div_nop_1_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_div_nop_2_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_div_nop_2_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_key1_outfe_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_key1_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_lcdoff_tima00_1_out80_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_lcdoff_tima00_1_cgb04c_out80.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("80".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_lcdoff_tima01_1_out08_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_lcdoff_tima01_1_cgb04c_out08.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("08".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_lcdoff_tima01_2_out09_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_lcdoff_tima01_2_cgb04c_out09.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("09".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ly44_m3_ly_out39_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ly44_m3_ly_cgb04c_out39.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("39".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ly44_m3_m3stat_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ly44_m3_m3stat_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ly44_m3_m3stat_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ly44_m3_m3stat_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ly44_m3_m3stat_scx1_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ly44_m3_m3stat_scx1_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ly44_m3_m3stat_scx1_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ly44_m3_m3stat_scx1_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ly44_m3_nop_m3stat_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ly44_m3_nop_m3stat_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ly44_m3_nop_m3stat_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ly44_m3_nop_m3stat_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ly44_m3_nop_m3stat_scx1_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ly44_m3_nop_m3stat_scx1_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ly44_m3_nop_m3stat_scx1_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ly44_m3_nop_m3stat_scx1_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ly44_m3_nopx2_m3stat_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ly44_m3_nopx2_m3stat_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ly44_m3_nopx2_m3stat_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ly44_m3_nopx2_m3stat_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ly44_m3_nopx2_m3stat_scx1_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ly44_m3_nopx2_m3stat_scx1_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ly44_m3_nopx2_m3stat_scx1_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ly44_m3_nopx2_m3stat_scx1_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ly44_m3_nopx3_m3stat_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ly44_m3_nopx3_m3stat_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ly44_m3_nopx3_m3stat_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ly44_m3_nopx3_m3stat_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ly44_m3_nopx3_m3stat_scx1_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ly44_m3_nopx3_m3stat_scx1_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ly44_m3_nopx3_m3stat_scx1_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ly44_m3_nopx3_m3stat_scx1_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ly44_m3_nopx4_m3stat_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ly44_m3_nopx4_m3stat_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ly44_m3_nopx4_m3stat_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ly44_m3_nopx4_m3stat_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ly44_m3_nopx4_m3stat_scx1_1_outc3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ly44_m3_nopx4_m3stat_scx1_1_cgb04c_outC3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ly44_m3_nopx4_m3stat_scx1_2_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ly44_m3_nopx4_m3stat_scx1_2_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ly44_m3_stat_1_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ly44_m3_stat_1_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ly44_m3_stat_2_outc2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ly44_m3_stat_2_cgb04c_outC2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ly44_m3_stat_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ly44_m3_stat_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ly97_ly_out8c_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ly97_ly_cgb04c_out8C.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("8C".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_ly97_stat_outc0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_ly97_stat_cgb04c_outC0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("C0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_tima00_1a_out80_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_tima00_1a_cgb04c_out80.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("80".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_tima00_1b_out81_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_tima00_1b_cgb04c_out81.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("81".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_tima00_2a_out81_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_tima00_2a_cgb04c_out81.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("81".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_tima00_2b_out82_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_tima00_2b_cgb04c_out82.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("82".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_tima01_1_out07_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_tima01_1_cgb04c_out07.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("07".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_tima01_2_out08_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_tima01_2_cgb04c_out08.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("08".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_tima01_nop_1_out07_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_tima01_nop_1_cgb04c_out07.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("07".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_tima01_nop_2_out08_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_tima01_nop_2_cgb04c_out08.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("08".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_tima02_1a_out02_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_tima02_1a_cgb04c_out02.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("02".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_tima02_1b_out03_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_tima02_1b_cgb04c_out03.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("03".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_tima02_2a_out03_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_tima02_2a_cgb04c_out03.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("03".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_tima02_2b_out04_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_tima02_2b_cgb04c_out04.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("04".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_tima03_1a_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_tima03_1a_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_tima03_1b_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_tima03_1b_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_tima03_2a_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_tima03_2a_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn speedchange_tima03_2b_out02_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/speedchange/speedchange_tima03_2b_cgb04c_out02.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("02".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod sprites {
    use super::*;


    mod enable {
        use super::*;


        #[test]
        #[ignore]
        fn late_disable_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/enable/late_disable_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_ds_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/enable/late_disable_ds_2_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_ds_3_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/enable/late_disable_ds_3_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_ds_4_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/enable/late_disable_ds_4_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }
    }


    mod space {
        use super::*;


        #[test]
        #[ignore]
        fn space_10spritesprline_late_scx4_ds_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_late_scx4_ds_1_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_late_scx4_ds_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_late_scx4_ds_2_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_nr10space10_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_nr10space10_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_nr10space10_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_nr10space10_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_nr10space11_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_nr10space11_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_nr10space11_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_nr10space11_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_nr10space12_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_nr10space12_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_nr10space12_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_nr10space12_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_nr10space13_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_nr10space13_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_nr10space13_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_nr10space13_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_nr10space1_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_nr10space1_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_nr10space1_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_nr10space1_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_nr10space2_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_nr10space2_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_nr10space2_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_nr10space2_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_nr10space3_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_nr10space3_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_nr10space3_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_nr10space3_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_nr10space4_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_nr10space4_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_nr10space4_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_nr10space4_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_nr10space5_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_nr10space5_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_nr10space5_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_nr10space5_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_nr10space6_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_nr10space6_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_nr10space6_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_nr10space6_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_nr10space7_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_nr10space7_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_nr10space7_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_nr10space7_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_nr10space8_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_nr10space8_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_nr10space8_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_nr10space8_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_nr10space9_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_nr10space9_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_nr10space9_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_nr10space9_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_nr1space4_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_nr1space4_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_nr1space4_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_nr1space4_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_scx1_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_scx1_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_scx1_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_scx1_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_scx2_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_scx2_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_scx2_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_scx2_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_scx3_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_scx3_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_scx3_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_scx3_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_scx4_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_scx4_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_scx4_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_scx4_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_scx4_nr1space4_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_scx4_nr1space4_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_scx4_nr1space4_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_scx4_nr1space4_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_scx5_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_scx5_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_scx5_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_scx5_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_scx6_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_scx6_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_scx6_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_scx6_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_scx7_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_scx7_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_scx7_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_scx7_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_wx0_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_wx0_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_wx0_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_wx0_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_wx1_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_wx1_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_wx1_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_wx1_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_wx2_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_wx2_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_wx2_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_wx2_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_wx3_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_wx3_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_wx3_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_wx3_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_wx4_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_wx4_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_wx4_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_wx4_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_wx5_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_wx5_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_wx5_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_wx5_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_wx6_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_wx6_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_wx6_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_wx6_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_wx7_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_wx7_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_10spritesprline_wx7_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/10spritesPrLine_wx7_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_1pos8_8pos9_wx08_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/1pos8_8pos9_wx08_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_1pos8_8pos9_wx08_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/1pos8_8pos9_wx08_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_2overlap1_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/2overlap1_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_2overlap1_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/2overlap1_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_2overlap1_offset4_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/2overlap1_offset4_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_2overlap1_offset4_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/2overlap1_offset4_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_2overlap1_offset5_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/2overlap1_offset5_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_2overlap1_offset5_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/2overlap1_offset5_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_2overlap2_offset4_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/2overlap2_offset4_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_2overlap2_offset4_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/2overlap2_offset4_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_2overlap3_offset4_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/2overlap3_offset4_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_2overlap3_offset4_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/2overlap3_offset4_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_2overlap4_offset4_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/2overlap4_offset4_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_2overlap4_offset4_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/2overlap4_offset4_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_2overlap5_offset4_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/2overlap5_offset4_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_2overlap5_offset4_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/2overlap5_offset4_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_2overlap6_offset4_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/2overlap6_offset4_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_2overlap6_offset4_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/2overlap6_offset4_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_2overlap7_offset4_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/2overlap7_offset4_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_2overlap7_offset4_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/2overlap7_offset4_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_2overlap8_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/2overlap8_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_2overlap8_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/2overlap8_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_2overlap8_offset4_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/2overlap8_offset4_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_2overlap8_offset4_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/2overlap8_offset4_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap1_scx5_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap1_scx5_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap1_scx5_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap1_scx5_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap1_scx6_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap1_scx6_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap1_scx6_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap1_scx6_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap1_scx7_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap1_scx7_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap1_scx7_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap1_scx7_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap2_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap2_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap2_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap2_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap2_scx1_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap2_scx1_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap2_scx1_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap2_scx1_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap2_scx2_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap2_scx2_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap2_scx2_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap2_scx2_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap2_scx3_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap2_scx3_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap2_scx3_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap2_scx3_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap2_scx4_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap2_scx4_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap2_scx4_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap2_scx4_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap2_scx5_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap2_scx5_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap2_scx5_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap2_scx5_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap2_scx6_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap2_scx6_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap2_scx6_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap2_scx6_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap2_scx7_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap2_scx7_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap2_scx7_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap2_scx7_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap3_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap3_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap3_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap3_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap3_scx1_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap3_scx1_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap3_scx1_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap3_scx1_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap3_scx2_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap3_scx2_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap3_scx2_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap3_scx2_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap3_scx3_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap3_scx3_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap3_scx3_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap3_scx3_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap3_scx4_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap3_scx4_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap3_scx4_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap3_scx4_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap3_scx5_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap3_scx5_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap3_scx5_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap3_scx5_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap3_scx6_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap3_scx6_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap3_scx6_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap3_scx6_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap3_scx7_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap3_scx7_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap3_scx7_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap3_scx7_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap4_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap4_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap4_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap4_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap4_scx1_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap4_scx1_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap4_scx1_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap4_scx1_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap4_scx2_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap4_scx2_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap4_scx2_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap4_scx2_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap4_scx3_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap4_scx3_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap4_scx3_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap4_scx3_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap4_scx4_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap4_scx4_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap4_scx4_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap4_scx4_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap4_scx5_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap4_scx5_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap4_scx5_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap4_scx5_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap4_scx6_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap4_scx6_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap4_scx6_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap4_scx6_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap4_scx7_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap4_scx7_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap4_scx7_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap4_scx7_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap5_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap5_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap5_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap5_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap5_rev_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap5_rev_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap5_rev_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap5_rev_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap5_scx1_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap5_scx1_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap5_scx1_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap5_scx1_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap5_scx2_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap5_scx2_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap5_scx2_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap5_scx2_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap5_scx3_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap5_scx3_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap5_scx3_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap5_scx3_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap5_scx4_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap5_scx4_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap5_scx4_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap5_scx4_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap5_scx5_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap5_scx5_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap5_scx5_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap5_scx5_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap5_scx6_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap5_scx6_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap5_scx6_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap5_scx6_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap5_scx7_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap5_scx7_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap5_scx7_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap5_scx7_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap6_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap6_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap6_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap6_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap6_rev_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap6_rev_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap6_rev_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap6_rev_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap6_scx1_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap6_scx1_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap6_scx1_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap6_scx1_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap6_scx2_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap6_scx2_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap6_scx2_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap6_scx2_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap6_scx3_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap6_scx3_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap6_scx3_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap6_scx3_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap6_scx4_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap6_scx4_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap6_scx4_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap6_scx4_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap6_scx5_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap6_scx5_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap6_scx5_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap6_scx5_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap6_scx6_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap6_scx6_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap6_scx6_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap6_scx6_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap6_scx7_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap6_scx7_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap6_scx7_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap6_scx7_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap7_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap7_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap7_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap7_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap7_rev_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap7_rev_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap7_rev_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap7_rev_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap7_scx1_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap7_scx1_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap7_scx1_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap7_scx1_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap7_scx2_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap7_scx2_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap7_scx2_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap7_scx2_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap7_scx3_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap7_scx3_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap7_scx3_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap7_scx3_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap7_scx4_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap7_scx4_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap7_scx4_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap7_scx4_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap7_scx5_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap7_scx5_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap7_scx5_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap7_scx5_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap7_scx6_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap7_scx6_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap7_scx6_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap7_scx6_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap7_scx7_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap7_scx7_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap7_scx7_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap7_scx7_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap8_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap8_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap8_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap8_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap8_scx1_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap8_scx1_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap8_scx1_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap8_scx1_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap8_scx2_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap8_scx2_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap8_scx2_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap8_scx2_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap8_scx3_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap8_scx3_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap8_scx3_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap8_scx3_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap8_scx4_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap8_scx4_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap8_scx4_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap8_scx4_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap8_scx5_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap8_scx5_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap8_scx5_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap8_scx5_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap8_scx6_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap8_scx6_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap8_scx6_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap8_scx6_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap8_scx7_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap8_scx7_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_3overlap8_scx7_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/3overlap8_scx7_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_9pos8_wx08_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/9pos8_wx08_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_9pos8_wx08_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/9pos8_wx08_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_9pos8_wx08_scx5_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/9pos8_wx08_scx5_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_9pos8_wx08_scx5_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/9pos8_wx08_scx5_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_9pos8_wx09_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/9pos8_wx09_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_9pos8_wx09_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/9pos8_wx09_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_9pos8_wx0a_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/9pos8_wx0A_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_9pos8_wx0a_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/9pos8_wx0A_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_9pos8_wx0b_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/9pos8_wx0B_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_9pos8_wx0b_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/9pos8_wx0B_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_9pos8_wx0c_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/9pos8_wx0C_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_9pos8_wx0c_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/9pos8_wx0C_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_9pos8_wx0d_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/9pos8_wx0D_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_9pos8_wx0d_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/9pos8_wx0D_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_9pos8_wx0e_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/9pos8_wx0E_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn space_9pos8_wx0e_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/space/9pos8_wx0E_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }
    }


    mod sprites_other {
        use super::*;


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_10xposa6_m0irq_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesPrLine_10xposA6_m0irq_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_10xposa6_m0irq_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesPrLine_10xposA6_m0irq_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_10xposa6_m0irq_2_out2_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesPrLine_10xposA6_m0irq_2_dmg08_cgb04c_out2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("2".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_10xposa6_m0irq_2_out2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesPrLine_10xposA6_m0irq_2_dmg08_cgb04c_out2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("2".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_10xposa7_m0irq_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesPrLine_10xposA7_m0irq_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_10xposa7_m0irq_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesPrLine_10xposA7_m0irq_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_10xposa7_m0irq_2_out2_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesPrLine_10xposA7_m0irq_2_dmg08_cgb04c_out2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("2".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_10xposa7_m0irq_2_out2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesPrLine_10xposA7_m0irq_2_dmg08_cgb04c_out2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("2".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_10xposa7_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesPrLine_10xposA7_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_10xposa7_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesPrLine_10xposA7_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_10xposa7_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesPrLine_10xposA7_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_10xposa7_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesPrLine_10xposA7_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_1xpos0_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesPrLine_1xpos0_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_1xpos0_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesPrLine_1xpos0_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_1xpos0_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesPrLine_1xpos0_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_1xpos0_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesPrLine_1xpos0_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_1xposa8_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesPrLine_1xposA8_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_1xposa8_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesPrLine_1xposA8_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_1xposa8_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesPrLine_1xposA8_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_1xposa8_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesPrLine_1xposA8_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_m2stat_1_out2_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesPrLine_m2stat_1_dmg08_cgb04c_out2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("2".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_m2stat_1_out2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesPrLine_m2stat_1_dmg08_cgb04c_out2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("2".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_m2stat_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesPrLine_m2stat_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_m2stat_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesPrLine_m2stat_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesPrLine_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesPrLine_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesPrLine_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesPrLine_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesPrLine_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesPrLine_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_1xposa0_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_1xposa0_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_1xposa0_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_1xposa0_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_1xposa1_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_1xposa1_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_1xposa1_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_1xposa1_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_1xposa2_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_1xposa2_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_1xposa2_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_1xposa2_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_1xposa3_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_1xposa3_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_1xposa3_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_1xposa3_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_1xposa4_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_1xposa4_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_1xposa4_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_1xposa4_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_1xposa5_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_1xposa5_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_1xposa5_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_1xposa5_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_1xposa6_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_1xposa6_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_1xposa6_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_1xposa6_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_1xposa7_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_1xposa7_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_1xposa7_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_1xposa7_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_2overlap1_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_2overlap1_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_2overlap1_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_2overlap1_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_2overlap2_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_2overlap2_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_2overlap2_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_2overlap2_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_2overlap3_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_2overlap3_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_2overlap3_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_2overlap3_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_2overlap4_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_2overlap4_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_2overlap4_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_2overlap4_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_2overlap5_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_2overlap5_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_2overlap5_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_2overlap5_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_2overlap6_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_2overlap6_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_2overlap6_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_2overlap6_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_2overlap7_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_2overlap7_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_2overlap7_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_2overlap7_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_2overlap8_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_2overlap8_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_2overlap8_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_2overlap8_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_2xposa2overlap8_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_2xposa2overlap8_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_2xposa2overlap8_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_2xposa2overlap8_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_2xposa7overlap8_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_2xposa7overlap8_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_2xposa7overlap8_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_2xposa7overlap8_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_3overlap8_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_3overlap8_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_3overlap8_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_3overlap8_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_m0stat_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_m0stat_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_m0stat_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_m0stat_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_m0stat_2_out2_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_m0stat_2_dmg08_cgb04c_out2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("2".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_10spritesprline_m0stat_2_out2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/10spritesprline_m0stat_2_dmg08_cgb04c_out2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("2".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_1sprite8pbgcover_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_1sprite8pBgCover_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_1sprite8pbgcover_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_1sprite8pBgCover_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_1sprite8pbgprior_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_1sprite8pBgPrior_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_1sprite8pbgprior_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_1sprite8pBgPrior_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_offset7_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_offset7_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_offset7_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_offset7_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_offset7_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_offset7_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_offset7_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_offset7_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_scx1_offset7_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_scx1_offset7_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_scx1_offset7_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_scx1_offset7_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_scx1_offset7_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_scx1_offset7_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_scx1_offset7_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_scx1_offset7_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_xpos01_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_xpos01_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_xpos01_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_xpos01_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_xpos01_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_xpos01_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_xpos01_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_xpos01_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_xpos01_scx4_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_xpos01_scx4_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_xpos01_scx4_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_xpos01_scx4_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_xpos01_scx4_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_xpos01_scx4_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_xpos01_scx4_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_xpos01_scx4_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_xpos07_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_xpos07_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_xpos07_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_xpos07_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_xpos07_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_xpos07_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_xpos07_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_xpos07_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_xpos09_scx4_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_xpos09_scx4_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_xpos09_scx4_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_xpos09_scx4_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_xpos09_scx4_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_xpos09_scx4_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_1spritesprline_xpos09_scx4_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/1spritesPrLine_xpos09_scx4_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_2spritesprline_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/2spritesPrLine_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_2spritesprline_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/2spritesPrLine_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_2spritesprline_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/2spritesPrLine_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_2spritesprline_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/2spritesPrLine_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_2spritesprline_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/2spritesPrLine_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_2spritesprline_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/2spritesPrLine_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_3spritesprline_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/3spritesPrLine_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_3spritesprline_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/3spritesPrLine_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_3spritesprline_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/3spritesPrLine_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_3spritesprline_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/3spritesPrLine_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_3spritesprline_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/3spritesPrLine_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_3spritesprline_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/3spritesPrLine_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_4spritesprline_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/4spritesPrLine_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_4spritesprline_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/4spritesPrLine_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_4spritesprline_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/4spritesPrLine_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_4spritesprline_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/4spritesPrLine_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_4spritesprline_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/4spritesPrLine_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_4spritesprline_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/4spritesPrLine_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_5spritesprline_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/5spritesPrLine_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_5spritesprline_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/5spritesPrLine_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_5spritesprline_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/5spritesPrLine_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_5spritesprline_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/5spritesPrLine_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_5spritesprline_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/5spritesPrLine_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_5spritesprline_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/5spritesPrLine_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_6spritesprline_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/6spritesPrLine_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_6spritesprline_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/6spritesPrLine_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_6spritesprline_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/6spritesPrLine_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_6spritesprline_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/6spritesPrLine_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_6spritesprline_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/6spritesPrLine_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_6spritesprline_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/6spritesPrLine_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_7spritesprline_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/7spritesPrLine_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_7spritesprline_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/7spritesPrLine_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_7spritesprline_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/7spritesPrLine_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_7spritesprline_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/7spritesPrLine_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_7spritesprline_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/7spritesPrLine_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_7spritesprline_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/7spritesPrLine_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_8spritesprline_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/8spritesPrLine_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_8spritesprline_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/8spritesPrLine_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_8spritesprline_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/8spritesPrLine_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_8spritesprline_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/8spritesPrLine_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_8spritesprline_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/8spritesPrLine_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_8spritesprline_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/8spritesPrLine_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_9spritesprline_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/9spritesPrLine_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_9spritesprline_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/9spritesPrLine_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_9spritesprline_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/9spritesPrLine_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_9spritesprline_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/9spritesPrLine_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_9spritesprline_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/9spritesPrLine_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprites_other_9spritesprline_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/9spritesPrLine_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_disable_1_dmg08_out0.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_disable_2_dmg08_out3.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_disable_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange2_sp00_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange2_sp00_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange2_sp00_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange2_sp00_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange2_sp00_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange2_sp00_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange2_sp00_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange2_sp00_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange2_sp00_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange2_sp00_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange2_sp00_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange2_sp00_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange2_sp01_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange2_sp01_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange2_sp01_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange2_sp01_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange2_sp01_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange2_sp01_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange2_sp01_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange2_sp01_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange2_sp01_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange2_sp01_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange2_sp01_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange2_sp01_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange2_sp02_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange2_sp02_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange2_sp02_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange2_sp02_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange2_sp02_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange2_sp02_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange2_sp02_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange2_sp02_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange2_sp39_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange2_sp39_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange2_sp39_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange2_sp39_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange2_sp39_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange2_sp39_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange2_sp39_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange2_sp39_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange2_sp39_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange2_sp39_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange2_sp39_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange2_sp39_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_2_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_2_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_3_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_3_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_3_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_3_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_ds_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_ds_1_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_ds_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_ds_2_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_sp00_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_sp00_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_sp00_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_sp00_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_sp00_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_sp00_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_sp00_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_sp00_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_sp00_3_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_sp00_3_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_sp00_3_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_sp00_3_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_sp00_4_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_sp00_4_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_sp00_4_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_sp00_4_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_sp00_ds_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_sp00_ds_1_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_sp00_ds_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_sp00_ds_2_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_sp01_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_sp01_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_sp01_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_sp01_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_sp01_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_sp01_2_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_sp01_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_sp01_2_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_sp01_3_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_sp01_3_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_sp01_3_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_sp01_3_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_sp01_ds_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_sp01_ds_1_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_sp01_ds_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_sp01_ds_2_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_sp02_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_sp02_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_sp02_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_sp02_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_sp02_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_sp02_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_sp02_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_sp02_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_sp39_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_sp39_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_sp39_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_sp39_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_sp39_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_sp39_2_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_sp39_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_sp39_2_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_sp39_3_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_sp39_3_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_sp39_3_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_sp39_3_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_sp39_ds_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_sp39_ds_1_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_sizechange_sp39_ds_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/late_sizechange_sp39_ds_2_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn mix_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/mix_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn mix_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/mix_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn mix_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/mix_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn mix_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/mix_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn mix_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/mix_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn mix_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/mix_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprite_late_disable_spx18_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/sprite_late_disable_spx18_1_dmg08_out0.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprite_late_disable_spx18_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/sprite_late_disable_spx18_2_dmg08_out3.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprite_late_disable_spx19_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/sprite_late_disable_spx19_1_dmg08_out0.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprite_late_disable_spx19_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/sprite_late_disable_spx19_2_dmg08_out3.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprite_late_disable_spx1a_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/sprite_late_disable_spx1A_1_dmg08_out0.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprite_late_disable_spx1a_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/sprite_late_disable_spx1A_2_dmg08_out3.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprite_late_disable_spx1b_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/sprite_late_disable_spx1B_1_dmg08_out0.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprite_late_disable_spx1b_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/sprite_late_disable_spx1B_2_dmg08_out3.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprite_late_enable_spx18_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/sprite_late_enable_spx18_1_dmg08_out3.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprite_late_enable_spx18_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/sprite_late_enable_spx18_2_dmg08_out0.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprite_late_enable_spx19_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/sprite_late_enable_spx19_1_dmg08_out3.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprite_late_enable_spx1a_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/sprite_late_enable_spx1A_1_dmg08_out3.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprite_late_enable_spx1a_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/sprite_late_enable_spx1A_2_dmg08_out0.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprite_late_enable_spx1b_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/sprite_late_enable_spx1B_1_dmg08_out3.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprite_late_enable_spx1b_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/sprite_late_enable_spx1B_2_dmg08_out0.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprite_late_late_disable_spx18_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/sprite_late_late_disable_spx18_1_dmg08_out0.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprite_late_late_disable_spx18_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/sprite_late_late_disable_spx18_2_dmg08_out3.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprite_late_late_disable_spx19_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/sprite_late_late_disable_spx19_1_dmg08_out0.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprite_late_late_disable_spx19_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/sprite_late_late_disable_spx19_2_dmg08_out3.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprite_late_late_disable_spx1a_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/sprite_late_late_disable_spx1A_1_dmg08_out0.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprite_late_late_disable_spx1a_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/sprite_late_late_disable_spx1A_2_dmg08_out3.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprite_late_late_disable_spx1b_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/sprite_late_late_disable_spx1B_1_dmg08_out0.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn sprite_late_late_disable_spx1b_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/sprites/sprite_late_late_disable_spx1B_2_dmg08_out3.gb")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }
    }
}


mod tima {
    use super::*;


    #[test]
    #[ignore]
    fn tc00_1stopstart_ff_tma_1_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_1stopstart_ff_tma_1_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_1stopstart_ff_tma_1_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_1stopstart_ff_tma_1_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_1stopstart_ff_tma_2_out00_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_1stopstart_ff_tma_2_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_1stopstart_ff_tma_2_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_1stopstart_ff_tma_2_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_1stopstart_ff_tma_3_outfe_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_1stopstart_ff_tma_3_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_1stopstart_ff_tma_3_outfe_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_1stopstart_ff_tma_3_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_1stopstart_offset1_ff_tma_1_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_1stopstart_offset1_ff_tma_1_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_1stopstart_offset1_ff_tma_1_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_1stopstart_offset1_ff_tma_1_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_1stopstart_offset1_ff_tma_2_out00_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_1stopstart_offset1_ff_tma_2_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_1stopstart_offset1_ff_tma_2_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_1stopstart_offset1_ff_tma_2_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_1stopstart_offset1_ff_tma_3_outfe_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_1stopstart_offset1_ff_tma_3_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_1stopstart_offset1_ff_tma_3_outfe_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_1stopstart_offset1_ff_tma_3_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_1stopstart_offset2_ff_tma_1_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_1stopstart_offset2_ff_tma_1_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_1stopstart_offset2_ff_tma_1_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_1stopstart_offset2_ff_tma_1_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_1stopstart_offset2_ff_tma_2_out00_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_1stopstart_offset2_ff_tma_2_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_1stopstart_offset2_ff_tma_2_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_1stopstart_offset2_ff_tma_2_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_1stopstart_offset2_ff_tma_3_outfe_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_1stopstart_offset2_ff_tma_3_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_1stopstart_offset2_ff_tma_3_outfe_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_1stopstart_offset2_ff_tma_3_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_div_write_start_1_outf0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_div_write_start_1_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_div_write_start_1_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_div_write_start_1_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_div_write_start_2_outf1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_div_write_start_2_dmg08_cgb04c_outF1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_div_write_start_2_outf1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_div_write_start_2_dmg08_cgb04c_outF1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_fe_ff_1_outfe_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_fe_ff_1_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_fe_ff_1_outfe_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_fe_ff_1_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_fe_ff_2_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_fe_ff_2_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_fe_ff_2_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_fe_ff_2_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_ff_tma_1_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_ff_tma_1_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_ff_tma_1_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_ff_tma_1_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_ff_tma_2_out00_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_ff_tma_2_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_ff_tma_2_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_ff_tma_2_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_ff_tma_3_outfe_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_ff_tma_3_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_ff_tma_3_outfe_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_ff_tma_3_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_irq_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_irq_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_irq_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_irq_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_irq_2_oute4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_irq_2_dmg08_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_irq_2_oute4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_irq_2_dmg08_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_irq_ds_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_irq_ds_1_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_irq_ds_2_oute4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_irq_ds_2_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_irq_ifw_1_oute4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_irq_ifw_1_dmg08_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_irq_ifw_1_oute4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_irq_ifw_1_dmg08_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_irq_ifw_2_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_irq_ifw_2_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_irq_ifw_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_irq_ifw_2_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_irq_ifw_ds_1_oute4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_irq_ifw_ds_1_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_irq_ifw_ds_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_irq_ifw_ds_2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_irq_late_retrigger_1_oute4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_irq_late_retrigger_1_dmg08_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_irq_late_retrigger_1_oute4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_irq_late_retrigger_1_dmg08_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_irq_late_retrigger_2_oute4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_irq_late_retrigger_2_dmg08_outE4_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_irq_late_retrigger_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_irq_late_retrigger_2_dmg08_outE4_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_irq_late_retrigger_3_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_irq_late_retrigger_3_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_irq_late_retrigger_3_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_irq_late_retrigger_3_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_irq_late_retrigger_ds_1_oute4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_irq_late_retrigger_ds_1_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_irq_late_retrigger_ds_2_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_irq_late_retrigger_ds_2_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_div_write_1a_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_div_write_1a_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_div_write_1a_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_div_write_1a_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_div_write_1b_out00_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_div_write_1b_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_div_write_1b_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_div_write_1b_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_div_write_2a_outfe_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_div_write_2a_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_div_write_2a_outfe_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_div_write_2a_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_div_write_2b_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_div_write_2b_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_div_write_2b_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_div_write_2b_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_div_write_3a_outfe_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_div_write_3a_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_div_write_3a_outfe_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_div_write_3a_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_div_write_3b_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_div_write_3b_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_div_write_3b_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_div_write_3b_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_div_write_4a_outfe_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_div_write_4a_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_div_write_4a_outfe_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_div_write_4a_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_div_write_4b_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_div_write_4b_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_div_write_4b_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_div_write_4b_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_div_write_if_1a_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_div_write_if_1a_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_div_write_if_1a_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_div_write_if_1a_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_div_write_if_1b_oute4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_div_write_if_1b_dmg08_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_div_write_if_1b_oute4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_div_write_if_1b_dmg08_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_div_write_if_2_oute4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_div_write_if_2_dmg08_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_div_write_if_2_oute4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_div_write_if_2_dmg08_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_stop_inc_1_outfe_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_stop_inc_1_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_stop_inc_1_outfe_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_stop_inc_1_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_stop_inc_2_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_stop_inc_2_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_stop_inc_2_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_stop_inc_2_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_stop_irq_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_stop_irq_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_stop_irq_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_stop_irq_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_stop_irq_2_oute4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_stop_irq_2_dmg08_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_stop_irq_2_oute4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_stop_irq_2_dmg08_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_stop_of_1_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_stop_of_1_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_stop_of_1_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_stop_of_1_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_stop_of_2_outfe_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_stop_of_2_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_stop_of_2_outfe_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_stop_of_2_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_tc01_1_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_tc01_1_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_tc01_1_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_tc01_1_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_tc01_2_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_tc01_2_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_tc01_2_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_tc01_2_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_tc01_3_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_tc01_3_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_tc01_3_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_tc01_3_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_tc01_4_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_tc01_4_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_tc01_4_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_tc01_4_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_tc01_5_out00_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_tc01_5_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_tc01_5_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_tc01_5_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_tc01_6_outfe_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_tc01_6_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_tc01_6_outfe_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_tc01_6_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_tc01_7_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_tc01_7_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_tc01_7_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_tc01_7_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_tc01_8_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_tc01_8_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_late_tc01_8_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_late_tc01_8_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_nop_div_write_start_1_outf0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_nop_div_write_start_1_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_nop_div_write_start_1_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_nop_div_write_start_1_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_nop_div_write_start_2_outf1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_nop_div_write_start_2_dmg08_cgb04c_outF1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_nop_div_write_start_2_outf1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_nop_div_write_start_2_dmg08_cgb04c_outF1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_start_1_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_start_1_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_start_2_outf1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_start_2_cgb04c_outF1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_start_3_outf0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_start_3_dmg08_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_start_4_outf1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_start_4_dmg08_outF1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_tc01_ff_tma_1_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_tc01_ff_tma_1_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_tc01_ff_tma_1_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_tc01_ff_tma_1_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_tc01_ff_tma_2_out00_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_tc01_ff_tma_2_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_tc01_ff_tma_2_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_tc01_ff_tma_2_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_tc01_ff_tma_3_outf0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_tc01_ff_tma_3_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_tc01_ff_tma_3_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_tc01_ff_tma_3_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_tc01_late_tc00_of_1_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_tc01_late_tc00_of_1_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_tc01_late_tc00_of_1_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_tc01_late_tc00_of_1_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_tc01_late_tc00_of_2_outf0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_tc01_late_tc00_of_2_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc00_tc01_late_tc00_of_2_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc00_tc01_late_tc00_of_2_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_ff_tma_1_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_ff_tma_1_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_ff_tma_1_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_ff_tma_1_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_ff_tma_2_out00_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_ff_tma_2_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_ff_tma_2_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_ff_tma_2_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_ff_tma_3_outf0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_ff_tma_3_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_ff_tma_3_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_ff_tma_3_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_irq_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_irq_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_irq_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_irq_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_irq_2_oute4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_irq_2_dmg08_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_irq_2_oute4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_irq_2_dmg08_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_offset1_ff_tma_1_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_offset1_ff_tma_1_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_offset1_ff_tma_1_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_offset1_ff_tma_1_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_offset1_ff_tma_2_out00_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_offset1_ff_tma_2_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_offset1_ff_tma_2_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_offset1_ff_tma_2_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_offset1_ff_tma_3_outf0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_offset1_ff_tma_3_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_offset1_ff_tma_3_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_offset1_ff_tma_3_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_offset1_irq_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_offset1_irq_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_offset1_irq_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_offset1_irq_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_offset1_irq_2_oute4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_offset1_irq_2_dmg08_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_offset1_irq_2_oute4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_offset1_irq_2_dmg08_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_offset2_ff_tma_1_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_offset2_ff_tma_1_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_offset2_ff_tma_1_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_offset2_ff_tma_1_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_offset2_ff_tma_2_out00_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_offset2_ff_tma_2_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_offset2_ff_tma_2_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_offset2_ff_tma_2_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_offset2_ff_tma_3_outf0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_offset2_ff_tma_3_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_offset2_ff_tma_3_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_offset2_ff_tma_3_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_offset2_irq_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_offset2_irq_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_offset2_irq_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_offset2_irq_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_offset2_irq_2_oute4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_offset2_irq_2_dmg08_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_offset2_irq_2_oute4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_offset2_irq_2_dmg08_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_offset3_ff_tma_1_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_offset3_ff_tma_1_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_offset3_ff_tma_1_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_offset3_ff_tma_1_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_offset3_ff_tma_2_out00_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_offset3_ff_tma_2_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_offset3_ff_tma_2_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_offset3_ff_tma_2_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_offset3_ff_tma_3_outf0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_offset3_ff_tma_3_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_offset3_ff_tma_3_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_offset3_ff_tma_3_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_offset3_irq_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_offset3_irq_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_offset3_irq_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_offset3_irq_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_offset3_irq_2_oute4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_offset3_irq_2_dmg08_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_1stopstart_offset3_irq_2_oute4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_1stopstart_offset3_irq_2_dmg08_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_div_write_start_1_outf1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_div_write_start_1_dmg08_cgb04c_outF1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_div_write_start_1_outf1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_div_write_start_1_dmg08_cgb04c_outF1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_div_write_start_2_outf2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_div_write_start_2_dmg08_cgb04c_outF2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_div_write_start_2_outf2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_div_write_start_2_dmg08_cgb04c_outF2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_fe_ff_1_outfe_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_fe_ff_1_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_fe_ff_1_outfe_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_fe_ff_1_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_fe_ff_2_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_fe_ff_2_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_fe_ff_2_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_fe_ff_2_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_ff_tma_1_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_ff_tma_1_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_ff_tma_1_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_ff_tma_1_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_ff_tma_2_out00_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_ff_tma_2_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_ff_tma_2_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_ff_tma_2_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_ff_tma_3_outf0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_ff_tma_3_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_ff_tma_3_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_ff_tma_3_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_irq_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_irq_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_irq_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_irq_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_irq_2_oute4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_irq_2_dmg08_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_irq_2_oute4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_irq_2_dmg08_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_div_write_1a_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_div_write_1a_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_div_write_1a_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_div_write_1a_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_div_write_1b_out00_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_div_write_1b_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_div_write_1b_out00_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_div_write_1b_dmg08_cgb04c_out00.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("00".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_div_write_2a_outfe_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_div_write_2a_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_div_write_2a_outfe_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_div_write_2a_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_div_write_2b_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_div_write_2b_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_div_write_2b_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_div_write_2b_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_div_write_3a_outfe_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_div_write_3a_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_div_write_3a_outfe_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_div_write_3a_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_div_write_3b_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_div_write_3b_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_div_write_3b_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_div_write_3b_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_div_write_4a_outfe_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_div_write_4a_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_div_write_4a_outfe_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_div_write_4a_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_div_write_4b_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_div_write_4b_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_div_write_4b_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_div_write_4b_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_stop_inc_1_outfd_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_stop_inc_1_dmg08_cgb04c_outFD.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FD".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_stop_inc_1_outfd_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_stop_inc_1_dmg08_cgb04c_outFD.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FD".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_stop_inc_2_outfe_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_stop_inc_2_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_stop_inc_2_outfe_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_stop_inc_2_dmg08_cgb04c_outFE.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FE".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_stop_irq_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_stop_irq_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_stop_irq_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_stop_irq_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_stop_irq_2_oute4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_stop_irq_2_dmg08_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_stop_irq_2_oute4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_stop_irq_2_dmg08_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_stop_of_1_outff_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_stop_of_1_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_stop_of_1_outff_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_stop_of_1_dmg08_cgb04c_outFF.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("FF".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_stop_of_2_outf0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_stop_of_2_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_stop_of_2_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_stop_of_2_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_tima_inc_1_out11_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_tima_inc_1_dmg08_cgb04c_out11.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("11".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_tima_inc_1_out11_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_tima_inc_1_dmg08_cgb04c_out11.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("11".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_tima_inc_2_out10_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_tima_inc_2_dmg08_cgb04c_out10.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("10".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_tima_inc_2_out10_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_tima_inc_2_dmg08_cgb04c_out10.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("10".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_tima_irq_1_oute0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_tima_irq_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_tima_irq_1_oute0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_tima_irq_1_dmg08_cgb04c_outE0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_tima_irq_2_oute4_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_tima_irq_2_dmg08_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_tima_irq_2_oute4_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_tima_irq_2_dmg08_cgb04c_outE4.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("E4".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_tima_tma_1_out11_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_tima_tma_1_dmg08_cgb04c_out11.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("11".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_tima_tma_1_out11_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_tima_tma_1_dmg08_cgb04c_out11.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("11".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_tima_tma_2_outf1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_tima_tma_2_dmg08_cgb04c_outF1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_tima_tma_2_outf1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_tima_tma_2_dmg08_cgb04c_outF1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_tima_tma_3_out11_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_tima_tma_3_dmg08_cgb04c_out11.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("11".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_tima_tma_3_out11_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_tima_tma_3_dmg08_cgb04c_out11.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("11".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_tma_1_out11_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_tma_1_dmg08_cgb04c_out11.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("11".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_tma_1_out11_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_tma_1_dmg08_cgb04c_out11.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("11".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_tma_2_outf1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_tma_2_dmg08_cgb04c_outF1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_late_tma_2_outf1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_late_tma_2_dmg08_cgb04c_outF1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_nop_div_write_start_1_outf1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_nop_div_write_start_1_dmg08_cgb04c_outF1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_nop_div_write_start_1_outf1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_nop_div_write_start_1_dmg08_cgb04c_outF1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_nop_div_write_start_2_outf2_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_nop_div_write_start_2_dmg08_cgb04c_outF2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_nop_div_write_start_2_outf2_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_nop_div_write_start_2_dmg08_cgb04c_outF2.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F2".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_tma_next_1_outf0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_tma_next_1_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_tma_next_1_outf0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_tma_next_1_dmg08_cgb04c_outF0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_tma_next_2_outf1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_tma_next_2_dmg08_cgb04c_outF1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn tc01_tma_next_2_outf1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/tima/tc01_tma_next_2_dmg08_cgb04c_outF1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("F1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod undef_ops {
    use super::*;


    #[test]
    #[ignore]
    fn undef_op_d3_out01_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/undef_ops/undef_op_d3_dmg08_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn undef_op_d3_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/undef_ops/undef_op_d3_dmg08_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn undef_op_db_out01_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/undef_ops/undef_op_db_dmg08_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn undef_op_db_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/undef_ops/undef_op_db_dmg08_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn undef_op_e3_out01_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/undef_ops/undef_op_e3_dmg08_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn undef_op_e3_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/undef_ops/undef_op_e3_dmg08_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn undef_op_e4_out01_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/undef_ops/undef_op_e4_dmg08_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn undef_op_e4_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/undef_ops/undef_op_e4_dmg08_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn undef_op_eb_out01_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/undef_ops/undef_op_eb_dmg08_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn undef_op_eb_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/undef_ops/undef_op_eb_dmg08_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn undef_op_ec_out01_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/undef_ops/undef_op_ec_dmg08_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn undef_op_ec_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/undef_ops/undef_op_ec_dmg08_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn undef_op_ed_out01_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/undef_ops/undef_op_ed_dmg08_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn undef_op_ed_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/undef_ops/undef_op_ed_dmg08_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn undef_op_f4_out01_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/undef_ops/undef_op_f4_dmg08_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn undef_op_f4_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/undef_ops/undef_op_f4_dmg08_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn undef_op_fc_out01_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/undef_ops/undef_op_fc_dmg08_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn undef_op_fc_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/undef_ops/undef_op_fc_dmg08_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn undef_op_fd_out01_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/undef_ops/undef_op_fd_dmg08_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn undef_op_fd_out01_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/undef_ops/undef_op_fd_dmg08_cgb04c_out01.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("01".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod vram_m3 {
    use super::*;


    #[test]
    #[ignore]
    fn vram_m3_10spritesprline_postread_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/10spritesprline_postread_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vram_m3_10spritesprline_postread_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/10spritesprline_postread_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vram_m3_10spritesprline_postread_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/10spritesprline_postread_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vram_m3_10spritesprline_postread_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/10spritesprline_postread_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/postread_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/postread_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/postread_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/postread_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/postread_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/postread_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_scx2_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/postread_scx2_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_scx2_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/postread_scx2_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_scx2_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/postread_scx2_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_scx2_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/postread_scx2_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_scx3_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/postread_scx3_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_scx3_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/postread_scx3_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_scx3_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/postread_scx3_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_scx3_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/postread_scx3_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_scx5_1_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/postread_scx5_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_scx5_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/postread_scx5_1_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_scx5_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/postread_scx5_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_scx5_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/postread_scx5_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_scx5_ds_1_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/postread_scx5_ds_1_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn postread_scx5_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/postread_scx5_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn preread_1_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/preread_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn preread_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/preread_1_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn preread_2_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/preread_2_dmg08_out3_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn preread_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/preread_2_dmg08_out3_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn preread_3_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/preread_3_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn preread_3_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/preread_3_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn preread_ds_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/preread_ds_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn preread_ds_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/preread_ds_2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn preread_ds_lcdoffset1_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/preread_ds_lcdoffset1_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn preread_ds_lcdoffset1_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/preread_ds_lcdoffset1_2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn preread_lcdoffset1_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/preread_lcdoffset1_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn preread_lcdoffset1_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/preread_lcdoffset1_2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn preread_lcdoffset2_1_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/preread_lcdoffset2_1_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn preread_lcdoffset2_2_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/preread_lcdoffset2_2_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn prewrite_ds_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/prewrite_ds_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn prewrite_ds_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/prewrite_ds_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn prewrite_ds_lcdoffset1_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/prewrite_ds_lcdoffset1_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn prewrite_ds_lcdoffset1_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/prewrite_ds_lcdoffset1_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn prewrite_lcdoffset1_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/prewrite_lcdoffset1_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn prewrite_lcdoffset1_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/prewrite_lcdoffset1_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn prewrite_lcdoffset2_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/prewrite_lcdoffset2_1_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn prewrite_lcdoffset2_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/prewrite_lcdoffset2_2_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3start_1_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/vramw_m3start_1_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3start_1_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/vramw_m3start_1_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3start_2_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/vramw_m3start_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3start_2_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vram_m3/vramw_m3start_2_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod vramw_m3end {
    use super::*;


    #[test]
    #[ignore]
    fn vramw_m3end_1_out7_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_1_dmg08_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_1_out7_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_1_dmg08_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_2_out7_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_2_dmg08_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_2_out7_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_2_dmg08_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_3_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_4_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_4_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_4_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_4_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_5_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_5_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_5_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_5_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_6_out1_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_6_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_6_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_6_dmg08_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_ds_1_out7_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_ds_1_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_ds_2_out7_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_ds_2_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_ds_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_ds_3_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_ds_4_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_ds_4_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_ds_5_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_ds_5_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_ds_6_out1_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_ds_6_cgb04c_out1.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("1".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_scx3_1_out7_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_scx3_1_dmg08_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_scx3_1_out7_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_scx3_1_dmg08_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_scx3_2_out7_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_scx3_2_dmg08_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_scx3_2_out7_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_scx3_2_dmg08_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_scx3_3_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_scx3_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_scx3_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_scx3_3_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_scx3_4_out0_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_scx3_4_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_scx3_4_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_scx3_4_dmg08_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_scx3_5_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_scx3_5_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_scx3_5_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_scx3_5_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_scx3_6_out3_dmg() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyDmg,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_scx3_6_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_scx3_6_out3_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_scx3_6_dmg08_cgb04c_out3.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("3".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_scx5_ds_1_out7_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_scx5_ds_1_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_scx5_ds_2_out7_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_scx5_ds_2_cgb04c_out7.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("7".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_scx5_ds_3_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_scx5_ds_3_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_scx5_ds_4_out0_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_scx5_ds_4_cgb04c_out0.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("0".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_scx5_ds_5_out5_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_scx5_ds_5_cgb04c_out5.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }


    #[test]
    #[ignore]
    fn vramw_m3end_scx5_ds_6_out5_gbc() {
        let test_case = EmulatorTestCase {
            device: DeviceType::GameBoyColor,
            setup: SetUpConfig {
                .. SetUpConfig::with_rom_file("gambatte/vramw_m3end/vramw_m3end_scx5_ds_6_cgb04c_out5.gbc")
            },
            run_config: RunConfig {
                run_frames: Some(16),
                .. RunConfig::default()
            },
            result: CheckResultConfig {
                gambatte_display_result_code: Some("5".to_string()),
                .. CheckResultConfig::default()
            },
        };

        run_test_case(test_case);
    }
}


mod window {
    use super::*;


    mod arg {
        use super::*;


        #[test]
        #[ignore]
        fn late_enable_aftervblank_3_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_enable_afterVblank_3_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_enable_aftervblank_3_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_enable_afterVblank_3_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_enable_aftervblank_4_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_enable_afterVblank_4_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_enable_aftervblank_4_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_enable_afterVblank_4_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_enable_aftervblank_5_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_enable_afterVblank_5_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_enable_aftervblank_5_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_enable_afterVblank_5_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_scx_late_wy_ffto4_ly4_wx00_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_scx_late_wy_FFto4_ly4_wx00_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_scx_late_wy_ffto4_ly4_wx00_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_scx_late_wy_FFto4_ly4_wx00_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_scx_late_wy_ffto4_ly4_wx00_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_scx_late_wy_FFto4_ly4_wx00_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_scx_late_wy_ffto4_ly4_wx00_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_scx_late_wy_FFto4_ly4_wx00_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_scx_late_wy_ffto4_ly4_wx00_3_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_scx_late_wy_FFto4_ly4_wx00_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_scx_late_wy_ffto4_ly4_wx00_3_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_scx_late_wy_FFto4_ly4_wx00_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_scx_late_wy_ffto4_ly4_wx20_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_scx_late_wy_FFto4_ly4_wx20_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_scx_late_wy_ffto4_ly4_wx20_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_scx_late_wy_FFto4_ly4_wx20_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_scx_late_wy_ffto4_ly4_wx20_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_scx_late_wy_FFto4_ly4_wx20_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_scx_late_wy_ffto4_ly4_wx20_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_scx_late_wy_FFto4_ly4_wx20_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_scx_late_wy_ffto4_ly4_wx20_3_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_scx_late_wy_FFto4_ly4_wx20_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_scx_late_wy_ffto4_ly4_wx20_3_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_scx_late_wy_FFto4_ly4_wx20_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_late_wy_ffto2_ly2_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wx_late_wy_FFto2_ly2_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_late_wy_ffto2_ly2_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wx_late_wy_FFto2_ly2_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_late_wy_ffto2_ly2_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wx_late_wy_FFto2_ly2_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_late_wy_ffto2_ly2_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wx_late_wy_FFto2_ly2_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_10to0_ly1_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_10to0_ly1_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_10to0_ly1_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_10to0_ly1_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_10to0_ly1_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_10to0_ly1_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_10to0_ly1_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_10to0_ly1_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_10to0_ly1_3_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_10to0_ly1_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_10to0_ly1_3_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_10to0_ly1_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_10to1_ly1_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_10to1_ly1_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_10to1_ly1_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_10to1_ly1_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_10to1_ly1_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_10to1_ly1_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_10to1_ly1_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_10to1_ly1_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_10to1_ly1_3_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_10to1_ly1_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_10to1_ly1_3_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_10to1_ly1_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_1toff_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_1toFF_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_1toff_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_1toFF_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_1toff_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_1toFF_2_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_1toff_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_1toFF_2_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_1toff_3_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_1toFF_3_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_1toff_3_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_1toFF_3_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_1toff_ds_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_1toFF_ds_1_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_1toff_ds_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_1toFF_ds_2_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_1toff_ds_lcdoffset1_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_1toFF_ds_lcdoffset1_1_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_1toff_ds_lcdoffset1_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_1toFF_ds_lcdoffset1_2_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_1toff_lcdoffset1_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_1toFF_lcdoffset1_1_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_1toff_lcdoffset1_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_1toFF_lcdoffset1_2_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_2toff_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_2toFF_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_2toff_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_2toFF_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_2toff_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_2toFF_2_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_2toff_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_2toFF_2_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_2toff_3_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_2toFF_3_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_2toff_3_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_2toFF_3_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto0_ly0_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto0_ly0_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto0_ly0_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto0_ly0_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto0_ly0_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto0_ly0_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto0_ly0_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto0_ly0_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto0_ly0_3_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto0_ly0_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto0_ly0_3_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto0_ly0_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto0_ly2_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto0_ly2_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto0_ly2_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto0_ly2_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto0_ly2_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto0_ly2_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto0_ly2_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto0_ly2_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto0_ly2_3_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto0_ly2_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto0_ly2_3_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto0_ly2_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto0_ly2_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto0_ly2_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto0_ly2_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto0_ly2_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto1_ly2_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto1_ly2_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto1_ly2_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto1_ly2_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto1_ly2_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto1_ly2_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto1_ly2_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto1_ly2_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto1_ly2_3_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto1_ly2_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto1_ly2_3_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto1_ly2_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_3_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_3_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_scx2_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_scx2_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_scx2_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_scx2_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_scx2_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_scx2_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_scx2_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_scx2_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_scx2_3_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_scx2_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_scx2_3_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_scx2_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_scx3_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_scx3_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_scx3_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_scx3_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_scx3_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_scx3_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_scx3_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_scx3_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_scx3_3_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_scx3_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_scx3_3_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_scx3_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_scx5_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_scx5_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_scx5_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_scx5_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_scx5_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_scx5_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_scx5_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_scx5_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_scx5_3_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_scx5_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_scx5_3_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_scx5_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_scx5_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_scx5_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_scx5_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_scx5_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_wx00_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_wx00_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_wx00_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_wx00_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_wx00_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_wx00_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_wx00_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_wx00_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_wx00_3_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_wx00_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_wx00_3_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_wx00_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_wx0f_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_wx0f_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_wx0f_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_wx0f_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_wx0f_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_wx0f_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_wx0f_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_wx0f_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_wx0f_3_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_wx0f_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ffto2_ly2_wx0f_3_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/arg/late_wy_FFto2_ly2_wx0f_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }
    }


    mod on_screen {
        use super::*;


        #[test]
        #[ignore]
        fn weon_wx18_weoff_weon_wx80_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/weon_wx18_weoff_weon_wx80.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/weon_wx18_weoff_weon_wx80_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn weon_wx18_weoff_weon_wx80_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/weon_wx18_weoff_weon_wx80.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/weon_wx18_weoff_weon_wx80_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wx17_weoff_wxa5_weon_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wx17_weoff_wxA5_weon.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wx17_weoff_wxA5_weon_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wx17_weoff_wxa5_weon_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wx17_weoff_wxA5_weon.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wx17_weoff_wxA5_weon_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wx17_wxa5_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wx17_wxA5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wx17_wxA5_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wx17_wxa5_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wx17_wxA5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wx17_wxA5_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wxa5_weoff_at_xposa5_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wxA5_weoff_at_xposA5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wxA5_weoff_at_xposA5_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wxa5_weoff_at_xposa5_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wxA5_weoff_at_xposA5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wxA5_weoff_at_xposA5_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wxa6_3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wxA6_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wxA6_3_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wxa6_3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wxA6_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wxA6_3_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wxa6_late_we_reenable_1_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wxA6_late_we_reenable_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wxA6_late_we_reenable_1_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wxa6_late_we_reenable_1_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wxA6_late_we_reenable_1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wxA6_late_we_reenable_1_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wxa6_late_we_reenable_2_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wxA6_late_we_reenable_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wxA6_late_we_reenable_2_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wxa6_late_we_reenable_2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wxA6_late_we_reenable_2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wxA6_late_we_reenable_2_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wxa6_late_we_reenable_3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wxA6_late_we_reenable_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wxA6_late_we_reenable_3_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wxa6_late_we_reenable_3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wxA6_late_we_reenable_3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wxA6_late_we_reenable_3_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wxa6_late_we_reenable_4_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wxA6_late_we_reenable_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wxA6_late_we_reenable_4_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wxa6_late_we_reenable_4_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wxA6_late_we_reenable_4.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wxA6_late_we_reenable_4_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wxa6_scx7_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wxA6_scx7.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wxA6_scx7_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wxa6_scx7_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wxA6_scx7.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wxA6_scx7_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wxa6_weoff_at_xposa6_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wxA6_weoff_at_xposA6.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wxA6_weoff_at_xposA6_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wxa6_weoff_at_xposa6_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wxA6_weoff_at_xposA6.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wxA6_weoff_at_xposA6_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wxa6_wy00_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wxA6_wy00.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wxA6_wy00_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wxa6_wy00_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wxA6_wy00.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wxA6_wy00_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wxa6_wy01_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wxA6_wy01.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wxA6_wy01_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wxa6_wy01_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wxA6_wy01.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wxA6_wy01_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wxa6_wy01_weoff_ly02_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wxA6_wy01_weoff_ly02.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wxA6_wy01_weoff_ly02_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wxa6_wy01_weoff_ly02_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wxA6_wy01_weoff_ly02.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wxA6_wy01_weoff_ly02_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wxa6_wy01_weoff_ly02_weon_ly60_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wxA6_wy01_weoff_ly02_weon_ly60.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wxA6_wy01_weoff_ly02_weon_ly60_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wxa6_wy01_weoff_ly02_weon_ly60_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wxA6_wy01_weoff_ly02_weon_ly60.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wxA6_wy01_weoff_ly02_weon_ly60_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wxa6_wy01_wxa5_ly02_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wxA6_wy01_wxA5_ly02.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wxA6_wy01_wxA5_ly02_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wxa6_wy01_wxa5_ly02_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wxA6_wy01_wxA5_ly02.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wxA6_wy01_wxA5_ly02_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wxa6_wy01_wxa7_ly02_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wxA6_wy01_wxA7_ly02.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wxA6_wy01_wxA7_ly02_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wxa6_wy01_wxa7_ly02_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wxA6_wy01_wxA7_ly02.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wxA6_wy01_wxA7_ly02_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wxa6_wy8f_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    dmg_display_palette: Some(DmgDisplayPalette::new([
                        Color::from_rgba32(0x000000ff),
                        Color::from_rgba32(0x555555ff),
                        Color::from_rgba32(0xaaaaaaff),
                        Color::from_rgba32(0xffffffff),
                    ])),
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wxA6_wy8F.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wxA6_wy8F_dmg08.png".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn wxa6_wy8f_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/on_screen/wxA6_wy8F.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    compare_lcd_with_image: Some("gambatte/window/on_screen/wxA6_wy8F_cgb04c.png".to_string()),
                    color_mod: LcdColorMod::Gambatte,
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }
    }


    mod window_other {
        use super::*;


        #[test]
        #[ignore]
        fn late_disable_0_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_0_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_0_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_0_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_1_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_1_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_ds_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_ds_1_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_ds_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_ds_2_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_early_scx00_wx0f_ds_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_early_scx00_wx0f_ds_1_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_early_scx00_wx0f_ds_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_early_scx00_wx0f_ds_2_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_early_scx00_wx10_ds_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_early_scx00_wx10_ds_1_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_early_scx00_wx10_ds_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_early_scx00_wx10_ds_2_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_early_scx00_wx11_ds_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_early_scx00_wx11_ds_1_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_early_scx00_wx11_ds_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_early_scx00_wx11_ds_2_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_early_scx00_wx12_ds_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_early_scx00_wx12_ds_1_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_early_scx00_wx12_ds_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_early_scx00_wx12_ds_2_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_early_scx03_wx0f_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_early_scx03_wx0f_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_early_scx03_wx0f_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_early_scx03_wx0f_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_early_scx03_wx0f_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_early_scx03_wx0f_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_early_scx03_wx0f_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_early_scx03_wx0f_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_early_scx03_wx10_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_early_scx03_wx10_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_early_scx03_wx10_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_early_scx03_wx10_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_early_scx03_wx10_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_early_scx03_wx10_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_early_scx03_wx10_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_early_scx03_wx10_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_early_scx03_wx11_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_early_scx03_wx11_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_early_scx03_wx11_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_early_scx03_wx11_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_early_scx03_wx11_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_early_scx03_wx11_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_early_scx03_wx11_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_early_scx03_wx11_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_early_scx03_wx12_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_early_scx03_wx12_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_early_scx03_wx12_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_early_scx03_wx12_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_early_scx03_wx12_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_early_scx03_wx12_2_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_early_scx03_wx12_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_early_scx03_wx12_2_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_early_scx03_wx12_3_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_early_scx03_wx12_3_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_early_scx03_wx12_3_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_early_scx03_wx12_3_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_late_scx00_wx0f_ds_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_late_scx00_wx0f_ds_1_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_late_scx00_wx0f_ds_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_late_scx00_wx0f_ds_2_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_late_scx00_wx10_ds_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_late_scx00_wx10_ds_1_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_late_scx00_wx10_ds_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_late_scx00_wx10_ds_2_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_late_scx03_wx0f_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_late_scx03_wx0f_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_late_scx03_wx0f_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_late_scx03_wx0f_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_late_scx03_wx0f_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_late_scx03_wx0f_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_late_scx03_wx0f_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_late_scx03_wx0f_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_late_scx03_wx0f_3_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_late_scx03_wx0f_3_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_late_scx03_wx0f_3_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_late_scx03_wx0f_3_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_late_scx03_wx10_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_late_scx03_wx10_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_late_scx03_wx10_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_late_scx03_wx10_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_late_scx03_wx10_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_late_scx03_wx10_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_late_scx03_wx10_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_late_scx03_wx10_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_late_scx03_wx10_3_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_late_scx03_wx10_3_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_late_scx03_wx10_3_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_late_scx03_wx10_3_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_late_scx03_wx11_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_late_scx03_wx11_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_late_scx03_wx11_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_late_scx03_wx11_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_late_scx03_wx11_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_late_scx03_wx11_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_late_scx03_wx11_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_late_scx03_wx11_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_late_scx03_wx11_3_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_late_scx03_wx11_3_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_late_scx03_wx11_3_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_late_scx03_wx11_3_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_late_scx03_wx12_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_late_scx03_wx12_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_late_scx03_wx12_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_late_scx03_wx12_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_late_scx03_wx12_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_late_scx03_wx12_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_late_scx03_wx12_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_late_scx03_wx12_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_scx2_0_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_scx2_0_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_scx2_0_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_scx2_0_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_scx2_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_scx2_1_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_scx2_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_scx2_1_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_scx2_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_scx2_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_scx2_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_scx2_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_scx3_0_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_scx3_0_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_scx3_0_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_scx3_0_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_scx3_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_scx3_1_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_scx3_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_scx3_1_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_scx3_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_scx3_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_scx3_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_scx3_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_scx5_0_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_scx5_0_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_scx5_0_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_scx5_0_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_scx5_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_scx5_1_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_scx5_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_scx5_1_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_scx5_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_scx5_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_scx5_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_scx5_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_scx5_ds_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_scx5_ds_1_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_scx5_ds_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_scx5_ds_2_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_spx10_wx0f_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_spx10_wx0f_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_spx10_wx0f_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_spx10_wx0f_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_spx10_wx0f_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_spx10_wx0f_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_spx10_wx0f_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_spx10_wx0f_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_wx0f_0_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_wx0f_0_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_wx0f_0_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_wx0f_0_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_wx0f_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_wx0f_1_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_wx0f_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_wx0f_1_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_wx0f_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_wx0f_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_disable_wx0f_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_disable_wx0f_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_enable_aftervblank_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_enable_afterVblank_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_enable_aftervblank_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_enable_afterVblank_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_enable_aftervblank_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_enable_afterVblank_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_enable_aftervblank_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_enable_afterVblank_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_enable_aftervblank_3_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_enable_afterVblank_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_enable_aftervblank_3_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_enable_afterVblank_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_enable_aftervblank_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_enable_afterVblank_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_enable_aftervblank_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_enable_afterVblank_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_enable_aftervblank_ds_lcdoffset1_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_enable_afterVblank_ds_lcdoffset1_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_enable_aftervblank_ds_lcdoffset1_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_enable_afterVblank_ds_lcdoffset1_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_enable_aftervblank_lcdoffset1_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_enable_afterVblank_lcdoffset1_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_enable_aftervblank_lcdoffset1_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_enable_afterVblank_lcdoffset1_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_enable_ly0_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_enable_ly0_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_enable_ly0_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_enable_ly0_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_reenable_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_reenable_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_reenable_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_reenable_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_reenable_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_reenable_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_reenable_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_reenable_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_reenable_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_reenable_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_reenable_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_reenable_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_reenable_scx2_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_reenable_scx2_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_reenable_scx2_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_reenable_scx2_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_reenable_scx2_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_reenable_scx2_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_reenable_scx2_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_reenable_scx2_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_reenable_scx2_3_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_reenable_scx2_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_reenable_scx2_3_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_reenable_scx2_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_reenable_scx3_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_reenable_scx3_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_reenable_scx3_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_reenable_scx3_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_reenable_scx3_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_reenable_scx3_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_reenable_scx3_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_reenable_scx3_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_reenable_scx3_3_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_reenable_scx3_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_reenable_scx3_3_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_reenable_scx3_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_reenable_scx5_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_reenable_scx5_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_reenable_scx5_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_reenable_scx5_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_reenable_scx5_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_reenable_scx5_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_reenable_scx5_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_reenable_scx5_2_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_reenable_scx5_3_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_reenable_scx5_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_reenable_scx5_3_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_reenable_scx5_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_reenable_scx5_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_reenable_scx5_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_reenable_scx5_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_reenable_scx5_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_reenable_wx0f_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_reenable_wx0f_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_reenable_wx0f_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_reenable_wx0f_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_reenable_wx0f_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_reenable_wx0f_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_reenable_wx0f_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_reenable_wx0f_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_scx_late_disable_0_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_scx_late_disable_0_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_scx_late_disable_0_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_scx_late_disable_0_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_scx_late_disable_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_scx_late_disable_1_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_scx_late_disable_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_scx_late_disable_1_dmg08_out3_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_scx_late_disable_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_scx_late_disable_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_scx_late_disable_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_scx_late_disable_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_ds_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_ds_1_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_ds_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_ds_2_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_ff_07_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_ff_07_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_ff_07_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_ff_07_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_ff_07_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_ff_07_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_ff_07_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_ff_07_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_ff_0f_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_ff_0f_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_ff_0f_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_ff_0f_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_ff_0f_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_ff_0f_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_ff_0f_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_ff_0f_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_scx2_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_scx2_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_scx2_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_scx2_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_scx2_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_scx2_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_scx2_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_scx2_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_scx3_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_scx3_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_scx3_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_scx3_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_scx3_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_scx3_2_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_scx3_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_scx3_2_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_scx3_3_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_scx3_3_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_scx3_3_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_scx3_3_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_scx5_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_scx5_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_scx5_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_scx5_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_scx5_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_scx5_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_scx5_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_scx5_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_scx5_ds_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_scx5_ds_1_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_scx5_ds_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_scx5_ds_2_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_wx03_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_wx03_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_wx03_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_wx03_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_wx03_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_wx03_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_wx03_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_wx03_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_wx0f_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_wx0f_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_wx0f_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_wx0f_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_wx0f_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_wx0f_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wx_wx0f_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wx_wx0f_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wy_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wy_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_2_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wy_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wy_2_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ds_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wy_ds_1_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ds_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wy_ds_2_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ds_lcdoffset1_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wy_ds_lcdoffset1_1_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_ds_lcdoffset1_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wy_ds_lcdoffset1_2_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_lcdoffset1_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wy_lcdoffset1_1_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn late_wy_lcdoffset1_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/late_wy_lcdoffset1_2_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx00_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx00_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx00_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx00_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx00_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx00_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx00_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx00_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx03_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx03_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx03_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx03_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx03_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx03_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx03_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx03_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx03_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx03_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx03_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx03_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx03_scx2_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx03_scx2_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx03_scx2_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx03_scx2_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx03_scx2_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx03_scx2_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx03_scx2_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx03_scx2_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx03_scx3_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx03_scx3_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx03_scx3_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx03_scx3_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx03_scx3_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx03_scx3_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx03_scx3_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx03_scx3_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx03_scx5_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx03_scx5_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx03_scx5_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx03_scx5_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx03_scx5_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx03_scx5_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx03_scx5_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx03_scx5_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx03_scx5_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx03_scx5_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx03_scx5_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx03_scx5_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx07_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx07_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx07_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx07_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx07_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx07_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx07_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx07_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx07_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx07_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx07_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx07_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx07_scx2_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx07_scx2_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx07_scx2_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx07_scx2_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx07_scx2_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx07_scx2_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx07_scx2_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx07_scx2_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx07_scx3_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx07_scx3_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx07_scx3_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx07_scx3_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx07_scx3_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx07_scx3_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx07_scx3_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx07_scx3_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx07_scx5_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx07_scx5_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx07_scx5_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx07_scx5_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx07_scx5_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx07_scx5_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx07_scx5_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx07_scx5_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx07_scx5_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx07_scx5_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx07_scx5_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx07_scx5_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx0c_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx0C_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx0c_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx0C_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx17_wxa5_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx17_wxA5_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx17_wxa5_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx17_wxA5_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx17_wxa5_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx17_wxA5_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx17_wxa5_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx17_wxA5_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx57_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx57_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wx57_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wx57_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa5_m0irq_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA5_m0irq_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa5_m0irq_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA5_m0irq_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa5_m0irq_2_out2_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA5_m0irq_2_dmg08_cgb04c_out2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("2".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa5_m0irq_2_out2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA5_m0irq_2_dmg08_cgb04c_out2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("2".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa5_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA5_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa5_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA5_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa5_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA5_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa5_m3stat_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA5_m3stat_2_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_firstline_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_firstline_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_firstline_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_firstline_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_firstline_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_firstline_m3stat_2_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_firstline_m3stat_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_firstline_m3stat_2_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_firstline_m3stat_3_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_firstline_m3stat_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_firstline_m3stat_3_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_firstline_m3stat_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_m0irq2_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_m0irq2_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_m0irq2_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_m0irq2_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_m0irq2_2_out2_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_m0irq2_2_dmg08_cgb04c_out2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("2".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_m0irq2_2_out2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_m0irq2_2_dmg08_cgb04c_out2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("2".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_m0irq_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_m0irq_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_m0irq_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_m0irq_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_m0irq_2_out2_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_m0irq_2_dmg08_cgb04c_out2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("2".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_m0irq_2_out2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_m0irq_2_dmg08_cgb04c_out2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("2".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_m3stat_2_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_m3stat_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_m3stat_2_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_m3stat_3_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_m3stat_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_m3stat_3_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_m3stat_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_oambusyread_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_oambusyread_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_oambusyread_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_oambusyread_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_oambusyread_2_out5_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_oambusyread_2_dmg08_out5_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("5".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_oambusyread_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_oambusyread_2_dmg08_out5_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_oambusyread_3_out5_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_oambusyread_3_dmg08_out5_cgb_xout1.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("5".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_oambusyread_4_out5_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_oambusyread_4_dmg08_cgb04c_out5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("5".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_oambusyread_4_out5_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_oambusyread_4_dmg08_cgb04c_out5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("5".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_scx2_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_scx2_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_scx2_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_scx2_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_scx2_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_scx2_m3stat_2_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_scx2_m3stat_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_scx2_m3stat_2_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_scx2_m3stat_3_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_scx2_m3stat_3_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_scx2_m3stat_3_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_scx2_m3stat_3_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_scx2_m3stat_4_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_scx2_m3stat_4_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_scx2_m3stat_4_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_scx2_m3stat_4_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_scx3_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_scx3_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_scx3_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_scx3_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_scx3_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_scx3_m3stat_2_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_scx3_m3stat_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_scx3_m3stat_2_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_scx3_m3stat_3_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_scx3_m3stat_3_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_scx3_m3stat_3_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_scx3_m3stat_3_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_scx3_m3stat_4_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_scx3_m3stat_4_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_scx3_m3stat_4_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_scx3_m3stat_4_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_scx5_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_scx5_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_scx5_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_scx5_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_scx5_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_scx5_m3stat_2_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_scx5_m3stat_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_scx5_m3stat_2_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_scx5_m3stat_3_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_scx5_m3stat_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_scx5_m3stat_3_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_scx5_m3stat_3_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_scx5_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_scx5_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_scx5_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_scx5_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_spxa7_m0irq_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_spxA7_m0irq_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_spxa7_m0irq_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_spxA7_m0irq_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_spxa7_m0irq_2_out2_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_spxA7_m0irq_2_dmg08_cgb04c_out2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("2".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_spxa7_m0irq_2_out2_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_spxA7_m0irq_2_dmg08_cgb04c_out2.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("2".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_spxa7_m3stat_1_out3_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_spxA7_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_spxa7_m3stat_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_spxA7_m3stat_1_dmg08_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_spxa7_m3stat_2_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_spxA7_m3stat_2_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_spxa7_m3stat_2_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_spxA7_m3stat_2_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_spxa7_m3stat_4_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_spxA7_m3stat_4_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_spxa7_m3stat_4_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_spxA7_m3stat_4_dmg08_out0_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_spxa7_m3stat_5_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_spxA7_m3stat_5_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_spxa7_m3stat_5_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_spxA7_m3stat_5_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_vrambusyread_1_out0_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_vrambusyread_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_vrambusyread_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_vrambusyread_1_dmg08_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_vrambusyread_2_out5_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_vrambusyread_2_dmg08_out5_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("5".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_vrambusyread_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_vrambusyread_2_dmg08_out5_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_vrambusyread_3_out5_dmg() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyDmg,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_vrambusyread_3_dmg08_cgb04c_out5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("5".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa6_vrambusyread_3_out5_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA6_vrambusyread_3_dmg08_cgb04c_out5.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("5".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa7_m3stat_ds_1_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA7_m3stat_ds_1_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxa7_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxA7_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxdefault_m3stat_ds_1_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxDefault_m3stat_ds_1_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn m2int_wxdefault_m3stat_ds_2_out0_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/m2int_wxDefault_m3stat_ds_2_cgb04c_out0.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("0".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }


        #[test]
        #[ignore]
        fn reenable_ds_out3_gbc() {
            let test_case = EmulatorTestCase {
                device: DeviceType::GameBoyColor,
                setup: SetUpConfig {
                    .. SetUpConfig::with_rom_file("gambatte/window/reenable_ds_cgb04c_out3.gbc")
                },
                run_config: RunConfig {
                    run_frames: Some(16),
                    .. RunConfig::default()
                },
                result: CheckResultConfig {
                    gambatte_display_result_code: Some("3".to_string()),
                    .. CheckResultConfig::default()
                },
            };

            run_test_case(test_case);
        }
    }
}
